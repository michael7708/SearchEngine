sixth homework 
sixth homework 
informatics
41
david
kay
uc
irvine
fall
2011
sixth
homework
assignment
due
start
lab
monday
october
31
1
easy
time
solving
lab
problems
go
back
textbook
read
carefully
worked
exercises
various
versions
design
recipe
midpoint
quarter
now
time
go
back
solidify
understanding
nobody
winging
point
rest
work
course
need
understand
done
far
2
read
chapter
28
discusses
functions
first
class
objects
functions
take
functions
inputs
exercises
28
2
3
28
2
4
look
exercises
28
2
10
28
3
1
know
write
also
notice
two
predefined
functions
went
class
exercises
28
2
11
28
2
12
28
3
6
using
filter
map
appropriate
3
take
look
back
discussion
function
combine
section
28
5
combine
sometimes
called
reduce
accumulate
foldr
sometimes
arguments
different
order
drracket
uses
name
foldr
using
foldr
map
filter
can
define
many
powerful
operations
compactly
without
explicit
recursion
example
suppose
list
restaurant
structures
define
struct
rrant
name
cuisine
phone
dish
price
call
list
rl
produce
list
names
cheap
thai
restaurants
rl
need
say
map
rrant
name
filter
cheap
filter
thai
rl
look
step
step
first
select
just
thai
restaurants
list
take
just
cheap
restaurants
list
turn
resulting
list
restaurants
list
containing
just
names
calculate
average
price
cheap
thai
restaurants
can
say
local
define
cheap
thai
restaurant
prices
map
rrant
price
filter
cheap
filter
thai
rl
foldr
0
cheap
thai
restaurant
prices
length
cheap
thai
restaurant
prices
example
note
using
local
expression
saves
us
computing
list
prices
two
separate
times
trouble
figuring
expressions
work
first
make
sure
understand
map
filter
foldr
individually
look
contracts
look
part
expression
returns
starting
inside
following
problems
aware
also
problems
like
will
show
quizzes
3
1
write
function
convert
1
takes
one
argument
type
returns
number
1
matter
argument
next
use
map
convert
1
define
function
list
ones
takes
list
items
returns
list
1s
length
argument
finally
use
foldr
list
ones
rewrite
last
line
average
price
code
without
using
length
3
2
result
evaluating
expressions
course
able
head
possibly
pencil
paper
totally
miss
point
just
copy
paste
drracket
although
fine
way
check
results
foldr
0
'
1
2
3
4
5
foldr
lambda
even
0
0
'
1
2
3
4
5
foldr
cons
'
'
huey
dewey
louie
foldr
max
1
'
1953
1956
1949
1991
1964
second
expression
uses
may
seen
just
shortcut
writing
two
way
cond
equivalent
using
cond
foldr
lambda
cond
even
else
0
0
'
1
2
3
4
5
3
3
assume
function
interval
returns
list
integers
inclusive
interval
5
10
return
5
6
7
8
9
10
re
write
function
factorial
using
foldr
interval
without
explicit
recursion
3
4
now
think
back
restaurant
collection
program
assume
list
called
rl
restaurant
objects
described
following
expressions
describe
one
english
sentence
value
returns
just
say
foldr
plus
zero
map
give
description
expression
means
something
put
software
catalog
prospective
buyer
find
wanted
foldr
0
map
lambda
1
rl
filter
lambda
equal
ethiopian
rrant
cuisine
rl
foldr
0
map
lambda
rrant
price
rl
foldr
0
map
lambda
1
rl
local
define
prl
filter
lambda
equal
pizza
rrant
dish
rl
foldr
0
map
rrant
price
prl
foldr
0
map
lambda
1
prl
3
5
using
map
filter
foldr
write
expression
return
following
values
without
using
explicit
recursion
list
french
italian
restaurants
rl
list
best
dishes
served
french
italian
restaurants
rl
okay
list
duplicates
though
may
attempt
remove
like
can
done
without
explicit
recursion
list
restaurants
rl
whose
best
dish
costs
10
00
20
00
inclusive
name
lowest
priced
french
restaurant
rl
list
restaurants
rl
every
french
restaurant
whose
best
dish's
price
less
average
price
best
dishes
french
restaurants
price
changed
average
price
one
tough
take
one
step
time
4
section
28
6
talks
anonymous
lambda
went
class
section
28
7
finally
explains
mit
style
function
definitions
known
start
course
section
28
8
talks
functions
produce
functions
also
done
class
section
28
9
covers
can
represent
sequence
numbers
values
interesting
can
treat
optional
5
review
code
developed
class
processing
binary
search
trees
understand
algorithms
inserting
item
searching
item
traversing
tree
order
mainly
also
know
pre
order
post
order
breadth
first
mean
know
lazy
deletion
means
advantages
disadvantages
deletion
changes
structure
tree
may
find
helpful
review
code
http
www
ics
uci
edu
kay
scheme
restaurants1d
scm
might
ask
questions
quiz
providing
copy
code
course
6
programs
written
far
done
work
displayed
results
quit
without
leaving
trace
now
time
learn
read
data
file
write
results
back
file
can
maintain
information
permanently
even
program
running
programming
language
enable
file
input
output
must
work
operating
system
multiple
operating
systems
handle
variety
issues
involving
different
user
interfaces
different
ways
storing
data
files
different
naming
conventions
files
different
hardware
devices
many
options
details
consider
work
files
worry
far
three
main
approaches
reading
writing
files
text
reading
writing
data
directly
internal
form
computer
uses
store
memory
yet
another
approach
one
skip
now
read
write
single
character
time
read
character
individually
precise
control
analyze
input
build
data
structures
program
approach
painstaking
tedious
cover
techniques
organizing
process
informatics
42
use
quarter
read
line
file
string
perhaps
collecting
strings
list
representing
whole
file
process
list
conventionally
processing
string
using
scheme's
string
functions
week
write
data
scheme
expressions
read
back
way
program's
data
organized
lists
structures
can
preserve
organization
using
approach
easiest
approach
many
ways
since
maintaining
structure
data
letting
scheme
lot
work
see
approach
later
assignments
based
part
ics
h21assignments
david
kay
modified
new
material
added
david
kay
informatics
core
course
fall
2004
fall
2005
fall
2008
fall
2009
fall
2010
fall
2011
david
kay
kay
uci
edu
friday
october
28
2011
8
38
