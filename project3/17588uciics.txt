theory seminar 22 oct 2010 
data specific analysis string sorting 
cs
269s
fall
2010
theory
seminar
22
oct
2010
data
specific
analysis
string
sorting
saumi
bandyopadhyay
consider
complexity
sorting
strings
model
counts
comparisons
symbols
just
comparisons
strings
show
set
strings
complexity
sorting
can
naturally
expressed
terms
trie
induced
holds
lower
bounds
also
running
times
various
algorithms
thus
data
specific
analysis
allows
direct
comparison
different
algorithms
running
data
give
data
specific
analyses
various
versions
quicksort
versions
mergesort
corollary
arrive
simple
analysis
quicksorting
random
strings
far
required
rather
sophisticated
mathematical
tools
part
provide
insights
analysis
tries
random
strings
may
interesting
right
based
paper
raimund
seidel
soda
2010
