lab assignment 7 
seventh lab assignment 
informatics
41
david
kay
uc
irvine
fall
2011
lab
assignment
7
assignment
shortened
friday
november
11
university
holiday
still
officially
due
friday
practical
matter
try
finish
end
wednesday's
lab
wise
choose
partner
worked
already
whose
class
schedule
fits
wednesday
thursday
start
copy
copy
file
function
last
week's
lab
without
line
numbers
may
use
either
partner's
code
rewrite
scratch
1
write
function
pick
takes
three
arguments
first
string
function
will
search
file
second
string
naming
input
file
third
string
naming
output
file
output
file
contain
lines
input
file
contain
specified
string
somewhere
line
provided
code
string
processing
make
task
easier
2
define
function
stats
takes
string
naming
file
symbol
indicates
statistic
compute
return
file
according
list
thus
stats
myfile
'total
lines
return
number
lines
file
myfile
try
use
local
definitions
function
calculate
intermediate
results
want
use
predefined
function
string
length
can
also
use
map
filter
foldr
calculate
values
compactly
'total
lines
total
number
lines
file
'average
length
average
length
lines
file
'empty
lines
number
empty
zero
length
lines
file
'average
nonempty
length
average
length
non
empty
lines
file
'longest
line
longest
line
file
can
foldr
'longest
line
length
length
longest
line
file
'shortest
line
shortest
non
empty
line
file
'shortest
line
length
length
shortest
line
file
3
optional
time
redefine
stats
take
string
naming
file
list
symbols
indicating
statistic
compute
file
revised
version
include
list
results
corresponding
list
statistics
better
yet
list
pairs
statistic
name
value
thus
stats
myfile
list
'total
lines
'shortest
line
might
return
list
list
'total
lines
3982
list
'shortest
line
yes
submit
definitions
via
checkmate
week
excellent
time
shore
understanding
material
previous
weeks
still
sure
delve
follows
take
time
fill
reinforce
knowledge
past
weeks
reworking
problems
previous
homeworks
labs
partner
struggled
never
finished
goal
lab
assignment
work
pairs
ensure
partners
clear
arrived
new
solution
best
pick
problems
struggled
partners
benefit
time
spent
one
partner
feels
confident
preferable
partner
help
raise
one's
confidence
remember
many
will
other's
classmates
next
four
years
benefits
students'
strengths
feel
confidently
date
go
back
optional
parts
past
assignments
collect
definitions
one
rkt
files
may
find
necessary
spread
definitions
multiple
rkt
files
since
different
homeworks
required
different
language
levels
different
teachpacks
include
comment
top
file
indicating
language
teachpacks
required
execute
code
within
explicit
requirements
many
problems
re
submit
can
expect
take
diligence
account
assigning
final
grades
redo
many
problems
trouble
help
partner
submit
reworked
definitions
checkmate
complete
section
least
part
1
http
www
ics
uci
edu
kay
scheme
restaurants4
scm
will
find
version
restaurants
program
implements
menus
also
reading
writing
restaurant
collections
file
program
uses
intermediate
student
lambda
language
level
also
need
install
teachpack
called
simple
file
io
ss
remember
right
control
click
link
download
file
saving
folder
contains
code
1
download
program
run
creating
restaurants
saving
quit
run
starting
saved
file
can
restart
program
interactions
window
drscheme
another
call
restaurants
'x
take
little
time
look
code
familiar
drscheme
window
show
high
level
program
profile
column
right
select
show
program
contour
view
menu
see
large
section
headings
view
can
create
insert
large
letters
insert
menu
note
reading
writing
collection
scheme
expression
third
approach
mentioned
last
week's
assignment
makes
sense
since
means
rebuild
every
restaurant
read
back
2
modify
program
adding
search
cuisine
search
menu
word
menu
commands
wrote
last
week's
assignment
may
use
either
partner's
code
last
week
may
reimplement
scratch
3
add
command
menu
commands
will
let
users
add
new
dishes
restaurant
currently
collection
two
steps
first
change
command
menu
code
recognize
new
command
prompt
user
restaurant's
name
print
message
name
found
otherwise
call
function
add
dishes
restaurant
second
approach
dish
adding
process
layer
layer
function
takes
restaurant
returns
restaurant
new
menu
function
takes
menu
adds
dishes
function
prompts
user
new
dish's
name
price
returns
dish
structure
look
existing
code
see
functions
already
available
done
refine
dish
adding
process
follows
dish
added
name
dish
already
menu
just
replace
old
price
new
price
happen
initially
adding
dishes
well
adding
new
dishes
later
use
code
also
means
automatically
menu
will
two
dishes
name
4
add
menu
command
import
another
restaurant
collection
another
file
adding
restaurants
file
main
collection
re
use
file
reading
code
possible
done
basic
task
adding
imported
restaurants
collection
go
back
implement
refinement
restaurant
adding
name
phone
number
restaurant
already
collection
just
add
new
restaurant's
dishes
existing
record
restaurant
add
uniquely
course
previous
part
adding
restaurants
unique
name
plus
phone
restaurants
user
adds
manually
note
interactive
interfaces
even
text
based
ones
handling
testing
easy
just
using
interpreter
now
files
can
save
restaurant
set
ups
little
easier
course
mean
testing
longer
important
just
another
illustration
interactivity
adds
extra
layer
complexity
important
build
test
model
underlying
restaurant
menu
dish
collection
classes
case
independently
view
controller
interface
also
note
need
work
file
handling
functions
unfamiliar
description
functions
detail
available
drscheme
help
desk
although
looking
necessary
also
working
code
use
example
get
aside
little
assistance
instructional
staff
real
world
thing
get
similar
situation
real
world
learning
make
practical
use
information
important
skill
one
nice
things
scheme
done
far
understand
everything
ground
evaluating
everything
terms
basic
rules
substituting
values
expressions
learn
handle
interfaces
graphics
earlier
external
files
many
interfaces
get
look
hood
use
api
application
programming
interface
behavior
contract
purpose
functions
definitions
fitting
functions
given
together
like
pieces
jigsaw
puzzle
get
result
need
sometimes
involves
taking
code
know
works
similar
task
duplicating
modifying
copy
fit
new
circumstances
perhaps
abstracting
refactoring
new
code
original
program
becoming
comfortable
working
apis
crucial
skill
since
software
rarely
built
today
without
using
pre
existing
library
turn
modified
program
via
checkmate
remember
partner
must
complete
partner
evaluation
form
via
survey
tool
eee
uci
edu
please
end
day
friday
based
part
ics
h21assignments
david
kay
modified
david
kay
informatics
core
course
fall
2004
fall
2005
fall
2008
fall
2010
david
kay
kay
uci
edu
thursday
november
10
2011
10
21
