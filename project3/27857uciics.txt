informatics 43 spring 2009 course project phase 1 requirements engineering 
phase 1 
informatics
43
spring
2009
news
course
reference
schedule
course
project
code
examples
alex
informatics
43
spring
2009
course
project
phase
1
requirements
engineering
due
date
time
monday
april
20
9
00pm
background
philadelphia
polyester
polytechnic
university
triple
presently
uses
old
especially
user
friendly
system
managing
classroom
space
scheduling
courses
classrooms
enrolling
students
courses
due
part
age
becoming
difficult
maintain
hardware
necessary
run
current
system
poorly
designed
user
interface
triple
interested
replacing
system
new
one
will
designing
implementing
throughout
quarter
work
course
project
phase
project
asks
write
requirements
specification
system
focus
efforts
discovering
customer's
needs
organizing
writing
note
phase
focused
system
system
important
specify
things
must
constrain
design
implementation
things
constrain
unnecessarily
note
also
goal
creative
goal
describe
customer's
requirements
ultimately
build
system
customer
wants
opposed
system
want
requirements
specification
requirements
specification
comprised
following
sections
title
page
include
name
student
id
table
contents
page
numbers
introduction
introduce
system
document
introduction
describes
system
necessary
gives
concise
overview
functionality
explains
role
plays
organization
user
requirements
definition
section's
audience
non
technical
customer
user
address
goals
system
needed
describe
major
features
system
rationale
identify
describe
software
processes
hardware
people
policies
system
may
will
affect
list
section
assumptions
made
existing
world
assumptions
may
revised
future
also
addressed
expected
changes
section
system
requirements
specification
describe
functional
requirements
system
precise
detail
possible
identify
entities
components
sections
areas
functionality
make
system
characterize
properties
states
functions
interrelationships
entity
since
section
core
requirements
specification
warrants
brief
introduction
make
sure
section
carefully
organized
constraints
non
functional
requirements
discuss
constraints
pertaining
speed
space
safety
portability
robustness
operating
environment
implementation
bias
etc
audience
system
designers
programmers
will
probably
direct
communication
users
section
will
help
assess
trade
offs
system's
implementation
implementation
phases
applicable
following
request
customer
identify
one
subsets
system's
functionality
can
will
implemented
first
future
directions
expected
changes
applicable
identify
goals
features
addressed
elsewhere
requirements
specification
providing
insight
guidance
system
designers
programmers
acceptance
test
plan
describe
procedure
testing
system
determine
whether
adheres
requirements
functional
non
functional
define
several
scenarios
sequences
tests
need
provide
test
case
every
item
functionality
provide
representative
subset
containing
instances
completed
worked
glossary
define
terms
jargon
used
document
special
meaning
system
grading
criteria
read
requirements
specification
will
looking
following
qualities
adherence
stated
structure
please
organize
document
described
clarity
writing
write
document
clear
precise
business
like
english
prose
avoiding
jargon
humor
wordiness
correct
spelling
correct
grammar
essential
avoid
acronyms
common
ones
defined
first
used
appear
glossary
put
diagrams
graphs
pictures
document
bulleted
numbered
lists
can
used
restraint
substitute
completed
sentences
readable
prose
fidelity
customer's
desires
important
document
true
requirements
stated
customer
add
remove
requirements
without
approval
customer
completeness
document
address
aspects
system
functionality
constraints
important
user
consistency
document
will
contain
many
detailed
requirements
careful
thought
necessary
ensure
subtle
contradictions
introduced
testability
state
detailed
requirements
manner
facilitates
determining
whether
met
final
implementation
avoiding
implementation
bias
remember
requirements
specification
focus
system
system
modularity
separation
concerns
try
divide
section
subsections
paragraphs
largely
independent
ideally
requirement
feature
discussed
entirety
one
place
interacting
customer
ta
hye
jung
choi
acting
customer
phase
project
keep
things
simple
prevent
problem
receiving
conflicting
requirements
hye
jung
sole
arbiter
requirements
phase
will
answering
questions
system's
requirements
phase
will
direct
questions
hye
jung
will
hand
happy
answer
questions
phase
project
questions
structure
requirements
specification
process
requirements
engineering
will
also
involved
question
answering
future
phases
project
discussion
sections
friday
april
10
friday
april
17
will
devoted
requirements
elicitation
negotiation
clarification
attend
discussions
sure
ask
questions
two
chances
speak
customer
directly
important
make
time
deliverables
required
deliver
requirements
specification
one
following
formats
microsoft
word
doc
docx
rich
text
format
rtf
pdf
pdf
follow
link
discussion
submit
files
via
checkmate
ics
built
online
assignment
submission
system
aware
holding
rules
specified
document
including
one
says
responsible
submitting
version
specification
want
graded
regrade
work
simply
submitted
wrong
version
accidentally
originally
written
alex
thornton
spring
2009
heavy
influence
dan
frost
