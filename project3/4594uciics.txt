quotations cs1 
quotations learning programing 
quotations
learning
programming
enjoyed
reading
writing
collecting
pondering
following
quotations
think
relevant
teaching
learning
programming
know
others
think
might
like
please
email
pattis
ics
uci
edu
corrections
information
source
one
quotations
please
let
know
quotations
indexed
alphabetically
author
authors
multiple
quotations
quotations
alphabetized
first
word
quotations
programs
must
written
people
read
incidentally
machines
execute
abelson
sussman
structure
interpretation
computer
programs
computer
revolution
revolution
way
think
way
express
think
essence
change
emergence
might
best
called
procedural
epistemology
study
structure
knowledge
imperative
point
view
opposed
declarative
point
view
taken
classical
mathematical
subjects
abelson
sussman
structure
interpretation
computer
programs
also
obtained
glimpse
another
crucial
idea
languages
program
design
approach
stratified
design
notion
complex
system
structured
sequence
levels
described
using
sequence
languages
level
constructed
combining
parts
regarded
primitive
level
parts
constructed
level
used
primitives
next
level
language
used
level
stratified
design
primitives
means
combination
means
abstraction
appropriate
level
detail
abelson
sussman
structure
interpretation
computer
programs
common
mistake
people
make
trying
design
something
completely
foolproof
underestimate
ingenuity
complete
fools
adams
good
teaching
giving
right
questions
giving
right
answers
albers
know
enough
know
learn
adams
computer
science
science
abstraction
creating
right
model
problem
devising
appropriate
mechanizable
techniques
solve
aho
ullman
pattern
describes
problem
occurs
environment
describes
core
solution
problem
way
can
use
solution
million
times
without
ever
way
twice
alexander
worry
people
stealing
ideas
ideas
good
ram
people's
throats
aiken
eighty
percent
success
showing
allen
failing
every
now
sign
anything
innovative
allen
different
anderson
attacking
reductionist
hypothesis
science
concluding
quantitatively
larger
systems
can
qualitatively
different
today
software
exists
solve
problem
interface
software
angell
programmers
playwrights
computers
lousy
actors
anonymous
bad
code
bad
just
misunderstood
anonymous
debugging
anticipated
distaste
performed
reluctance
bragged
forever
anonymous
distance
education
begins
8th
row
classroom
anonymous
experience
poor
teacher
gives
tests
teaches
lessons
anonymous
understand
learning
anything
anonymous
theory
difference
theory
practice
practice
anonymous
easier
measure
something
understand
measured
anonymous
measure
twice
cut
anonymous
microsoft
quality
job
1
1
anonymous
visit
nasa
space
center
president
kennedy
spoke
man
sweeping
one
buildings
job
asked
kennedy
well
mr
president
janitor
replied
helping
put
man
moon
anonymous
one
day
mother
comes
home
work
asks
son
today
son
replied
taught
dog
play
piano
mother
incredulous
asked
dog
can
play
piano
son
laughed
replied
course
mom
said
taught
say
learned
anonymous
true
educator
deals
problem
principal
small
middle
school
problem
older
girls
starting
use
lipstick
applying
bathroom
press
lips
mirror
smooth
leaving
lip
prints
invited
girls
ladies
room
met
custodian
said
wanted
witness
just
hard
clean
mirrors
custodian
took
long
brush
handle
box
dipped
nearest
toilet
moved
mirror
proceeded
scrub
brush
last
day
girls
pressed
lips
mirror
anonymous
programming
languages
designed
piling
feature
top
feature
removing
weaknesses
restrictions
make
additional
features
appear
necessary
anonymous
revised
report
algorithmic
language
scheme
programs
sale
fast
reliable
cheap
choose
two
anonymous
ready
fire
aim
fast
approach
software
development
ready
aim
aim
aim
aim
slow
approach
software
development
anonymous
real
programmers
comment
code
hard
write
hard
understand
anonymous
recurses
called
anonymous
huge
printing
presses
major
chicago
newspaper
began
malfunctioning
saturday
christmas
putting
revenue
advertising
appear
sunday
paper
jeopardy
none
technicians
track
problem
finally
frantic
call
made
retired
printer
worked
presses
40
years
pay
anything
just
come
fix
told
arrived
walked
around
minutes
surveying
presses
approached
one
control
panels
opened
removed
dime
pocket
turned
screw
1
4
turn
said
presses
will
now
work
correctly
profusely
thanked
told
submit
bill
work
bill
arrived
days
later
10
000
00
wanting
pay
huge
amount
little
work
printer
told
please
itemize
charges
hope
reduce
amount
identify
services
revised
bill
arrived
1
00
turning
screw
9
999
00
knowing
screw
turn
commentary
debugging
problems
fixed
easily
identifying
location
problem
hard
anonymous
person
knows
will
always
job
person
knows
will
always
boss
anonymous
sooner
get
behind
work
time
catch
anonymous
10
different
kinds
people
world
know
binary
anonymous
think
design
globally
act
code
locally
anonymous
think
twice
code
anonymous
time
excellent
teacher
eventually
kills
students
anonymous
weeks
programming
can
save
hours
planning
anonymous
programming
language
created
allows
programmers
program
simple
english
will
discovered
programmers
speak
english
anonymous
never
time
right
always
time
anonymous
viewing
old
learn
new
anonymous
chinese
proverb
give
fish
eat
day
teach
fish
eat
lifetime
anonymous
chinese
proverb
asks
fool
five
minutes
ask
remains
fool
forever
anonymous
chinese
proverb
teachers
open
door
must
enter
anonymous
chinese
proverb
tell
forget
show
remember
involve
understand
anonymous
chinese
proverb
first
step
towards
wisdom
calling
things
right
names
anonymous
chinese
proverb
person
says
done
interrupt
person
anonymous
chinese
proverb
ashamed
asking
ashamed
learning
anonymous
danish
proverb
matter
far
wrong
road
gone
turn
back
now
anonymous
turkish
proverb
know
understand
teach
aristotle
repeatedly
excellence
act
habit
aristotle
exciting
phrase
hear
science
one
heralds
new
discoveries
eureka
funny
asimov
analytical
engine
weaves
algebraical
patterns
just
jacquard
loom
weaves
flowers
leaves
augusta
countess
lovelace
babbage's
analytical
engine
two
occasions
asked
members
parliament
pray
mr
babbage
put
machine
wrong
figures
will
right
answers
come
able
rightly
apprehend
kind
confusion
ideas
provoke
question
babbage
many
failures
learned
failing
lot
probably
creative
stretching
imagination
backus
need
willingness
fail
time
generate
many
ideas
work
hard
discover
work
keep
find
one
work
backus
nyt
obituary
prudent
question
one
half
wisdom
bacon
can
think
book
read
deals
difficulties
schooling
change
please
note
difficulties
problems
problems
solved
disappear
revolving
times
difficulties
remain
will
always
difficult
teach
well
learn
accurately
read
write
count
readily
competently
acquire
sense
history
start
one's
education
anothers
barzun
begin
pp
14
american
university
built
two
false
premises
teachers
must
add
existing
stock
knowledge
research
self
respecting
institutions
fulfill
role
employing
productive
scholars
course
teacher
must
keep
reading
thinking
abreast
time
mean
must
write
publish
confusion
hides
absurd
assumption
man
writes
scholarly
book
reaches
dozen
specialists
adds
immeasurably
world's
knowledge
whereas
imparts
thoughts
reading
one
hundred
fifty
students
every
year
wasting
time
leaving
world
darkness
one
tempted
ask
blinkered
pedant
ever
launched
notion
students
coming
college
seceded
human
race
may
therefore
safely
left
knowledge
broadcast
barzun
teacher
america
sole
justification
teaching
school
student
comes
able
something
say
know
knowledge
lead
something
new
something
better
knowledge
barzun
begin
pp
112
truth
said
done
one
teach
subject
one
teaches
student
learn
teaching
may
look
like
administering
dose
even
dose
must
worked
body
cure
individual
must
cure
ignorance
barzun
begin
pp
35
optimism
occupational
hazard
programming
testing
treatment
beck
cheapest
fastest
reliable
components
computer
system
bell
dakin
irwin
teacher
really
believe
sir
just
trying
make
us
think
bennett
history
boys
key
performance
elegance
battalions
special
cases
bentley
mcilroy
walking
water
developing
software
specification
easy
frozen
berard
act
testing
act
designing
tests
one
best
bug
preventers
known
thinking
must
done
create
useful
test
can
discover
eliminate
bugs
coded
indeed
test
design
thinking
can
discover
eliminate
bugs
every
stage
creation
software
conception
specification
design
coding
rest
bezier
percy
know
say
infanta's
eyes
beautiful
famous
stone
galveston
edmund
mm
percy
famous
stone
galveston
lord
edmund
exactly
percy
well
famous
blue
stone
comes
galveston
edmund
see
percy
well
lord
infanta's
eyes
bluer
start
edmund
see
ever
seen
stone
percy
nods
lord
know
couple
people
say
blue
indeed
edmund
people
seen
infanta's
eyes
percy
think
lord
edmund
neither
presumably
percy
lord
edmund
telling
percy
something
never
seen
slightly
less
blue
something
else
never
seen
percy
finally
begins
grasp
yes
lord
sometimes
feel
way
trying
explain
new
programming
concept
queen
spain's
beard
episode
blackadder
division
student
population
go
college
learn
go
college
earn
diploma
blau
letter
editor
chronicle
higher
education
may
24
2002
wrong
think
task
physics
find
nature
physics
concerns
say
nature
bohr
opposites
contradictory
complementary
bohr
software
development
will
likely
remain
fundamentally
hard
building
quality
systems
involves
essential
irreducible
complexity
entire
history
software
engineering
can
characterized
one
rising
levels
abstraction
task
software
development
team
engineer
illusion
simplicity
nonetheless
software
intensive
systems
can
amplify
human
intelligence
replace
human
judgment
software
intensive
systems
can
fuse
co
ordinate
classify
analyze
information
create
knowledge
words
everything
want
build
can
built
exist
pragmatic
theoretical
technical
limits
make
software
development
hard
impossible
furthermore
everything
want
build
built
exist
moral
economic
social
political
limits
govern
human
industry
fundamental
human
factors
define
limits
software
factors
separate
vision
execution
booch
blurb
talk
limits
software
language
instrument
human
reason
merely
medium
expression
thought
truth
generally
admitted
boole
greatest
obstacle
discovery
ignorance
illusion
knowledge
boorstin
likely
way
world
destroyed
experts
agree
