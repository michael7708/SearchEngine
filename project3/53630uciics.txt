
nfamatch cpp 
id
nfamatch
cpp
5027
2010
02
18
19
41
48z
rares
nfamatch
cpp
implementation
nfamatch
class
copyright
2004
2007
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
october
2004
author
liang
jin
include
stdafx
include
nfamatch
include
construction
destruction
nfamatch
nfamatch
int
0
size
delete
graph
delete
graph
nfamatch
nfamatch
nfa
automaton
automaton
automaton
return
edit
distance
re
string
int
nfamatch
match
string
str
int
score
0
buildgraph
str
score
dynamicprog
str
printmatr
str
return
score
bool
nfamatch
match
string
str
int
delta
bool
score
buildgraph
str
score
dynamicprog
str
delta
printmatr
str
return
score
void
nfamatch
buildgraph
string
str
graph
new
nfa
str
length
1
automaton
prepareforgraph
int
0
iclone
size
str
length
1
labelstepone
str
labelsteptwo
str
labelstepthree
str
return
1
either
0
epsilon
deletion
edge
1
label
ai
epsilon
void
nfamatch
labelstepone
string
str
nfanode
node
char
labels
2
int
1
inodenum
node
automaton
getnode
node
initstate
true
node
name
epsilon
nfatransition
edge
new
nfatransition
getnode
getnode
1
ai
epsilon
labels
0
str
1
labels
1
epsilon
edge
setlabels
labels
getnode
1
downbranches
push
back
edge
getnode
upbranches
push
back
edge
0
insertion
edge
label
epsilon
void
nfamatch
labelsteptwo
string
str
nfanode
nfatransition
edge
char
labels
2
int
0
inodenum
nodeindex
getnode
nodeindex
int
edgenum
0
edgenumbranches
size
edgenum
edge
nfatransition
branches
edgenum
edge
outnode
labels
0
epsilon
labels
1
name
edge
setlabels
labels
1
epsilon
substitution
edge
1
label
ai
void
nfamatch
labelstepthree
string
str
nfanode
nfatransition
edge
newedge
int
tindex
sindex
char
labels
2
int
1
inodenum
tindex
automaton
getnode
tindex
int
edgenum
0
edgenumbranches
size
edgenum
edge
nfatransition
branches
edgenum
edge
outnode
name
epsilon
sindex
nodenumber
newedge
new
nfatransition
getnode
sindex
getnode
1
tindex
labels
0
str
1
labels
1
name
newedge
setlabels
labels
getnode
1
tindex
downbranches
push
back
newedge
getnode
sindex
upbranches
push
back
newedge
int
nfamatch
dynamicprog
string
str
int
str
length
int
automaton
nodenum
int
new
int
1
0
1
new
int
new
int
1
resetc
minimum
int
sindex
nfatransition
edge
nfanode
node
0
0
0
sindex
1
sindex
1
sindex
sindex
0
sindex
1
0
scorelabel
nfatransition
getnode
sindex
0
upbranches
0
labels
1
ibackbranches
sindex
1
sindex
1
sindex
node
getnode
sindex
sindex
max
sindex
node
backbranches
node
name
epsilon
int
max1
max
sindex
1
node
upbranches
int
max2
sindex
1
scorelabel
str
sindex
1
epsilon
sindex
maxofthree
sindex
max1
max2
int
result
1
0
1
delete
delete
return
result
bool
nfamatch
dynamicprog
string
str
int
threshold
int
str
length
int
automaton
nodenum
int
new
int
1
0
1
new
int
resetc
minimum
int
sindex
nfanode
node
int
delta
1
threshold
int
delta
threshold
int
currentmax
minimum
0
0
0
currentmax
0
sindex
1
sindex
1
sindex
sindex
0
sindex
1
0
scorelabel
str
sindex
1
epsilon
sindex
0
currentmax
currentmax
sindex
0
abs
currentmax
delta
0
1
delete
delete
return
false
1
currentmax
minimum
0
insertionmax
0
automaton
getnode
0
currentmax
currentmax
0
sindex
1
sindex
1
sindex
node
automaton
getnode
sindex
insertionmax
sindex
node
insertion
node
name
epsilon
int
max1
substitutionmax
sindex
node
str
substitution
int
max2
sindex
1
scorelabel
str
sindex
1
epsilon
deletion
sindex
maxofthree
sindex
max1
max2
sindex
currentmax
currentmax
sindex
automaton
getnode
finalstate
true
abs
getnode
level
automaton
getnode
1
level
abs
currentmax
delta
0
1
delete
delete
return
false
int
result
1
0
1
delete
delete
result
delta
return
true
else
return
false
return
false
nfanode
nfamatch
getnode
int
int
return
graph
getnode
return
automaton
getnode
void
nfamatch
printgraph
int
graph
printme
void
nfamatch
resetc
int
int
int
num
int
0
edgearr
nfatransition
edge
int
tindex
int
max
minimum
int
edgenum
0
edgenumfromnode
nodenumber
consider
edge
topological
order
since
set
unexamed
node
score
minimum
problem
true
tindex
scorelabel
edge
labels
max
max
tindex
scorelabel
edge
labels
return
max
int
nfamatch
insertionmax
int
nfanode
node
nfatransition
edge
int
tindex
int
max
minimum
char
labels
2
labels
0
epsilon
labels
1
node
name
int
edgenum
0
edgenum
node
backbranches
size
edgenum
edge
nfatransition
node
backbranches
edgenum
tindex
edge
fromnode
nodenumber
tindex
scorelabel
labels
max
max
tindex
scorelabel
labels
return
max
int
nfamatch
substitutionmax
int
nfanode
node
string
str
nfatransition
edge
int
tindex
int
max
minimum
char
labels
2
labels
0
str
1
labels
1
node
name
int
edgenum
0
edgenum
node
backbranches
size
edgenum
edge
nfatransition
node
backbranches
edgenum
tindex
edge
fromnode
nodenumber
1
tindex
scorelabel
labels
max
max
1
tindex
scorelabel
labels
return
max
user
speficed
scoring
function
label
epsilon
insertion
1
epsilon
deletion
1
substitution
1
epsilon
epsilon
0
int
nfamatch
scorelabel
char
labels
labels
0
labels
1
return
0
else
return
1
int
nfamatch
scorelabel
char
label0
char
label1
label0
label1
return
0
else
return
1
int
nfamatch
maxofthree
int
num1
int
num2
int
num3
num1
num2
num1
num3
return
num1
else
return
num3
else
num2
num3
return
num2
else
return
num3
void
nfamatch
printmatr
string
str
int
str
length
int
automaton
nodenum
int
0
