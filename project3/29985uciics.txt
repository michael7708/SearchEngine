autoot 
automatic generation operation tables fast exploration bypasses embedded processors 
automatic
generation
operation
tables
fast
exploration
bypasses
embedded
processors
aviral
shrivastava
sanghyun
park
nikil
dutt
alex
nicolau
eugene
earlie
yunheung
paek
date
2006
proceedings
international
conference
design
automation
test
europe
abstract
customizing
bypasses
embedded
processor
uncovers
valuable
trade
offs
power
performance
cost
processor
meaningful
exploration
bypasses
requires
bypass
sensitive
compiler
operation
tables
ots
proposed
perform
bypass
sensitive
compilation
however
due
lack
automated
methods
generate
ots
ots
currently
manually
specified
designer
manual
specification
ots
extremely
time
consuming
task
also
highly
error
prone
paper
present
autoot
algorithm
automatically
generate
ots
high
level
processor
description
experiments
intel
xscale
processor
model
running
mibench
benchmarks
demonstrate
autoot
greatly
reduces
time
effort
specification
automatic
generation
ots
makes
feasible
perform
full
bypass
exploration
intel
xscale
thus
discover
interesting
alternate
bypass
configurations
reasonable
time
reduce
compile
time
overhead
ot
generation
propose
another
novel
algorithm
autootdb
autootdb
able
cut
compile
time
overhead
ot
generation
half
center
embedded
computer
systems
department
information
computer
science
university
california
irvine
soar
group
school
electrical
engineering
seoul
national
university
seoul
korea
strategic
cad
labs
intel
corporation
hudson
massachussets
