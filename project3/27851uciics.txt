welcome iwia'98 
1998 
international
workshop
innovative
architecture
future
generation
high
performance
processors
systems
date
oct
26
28
1998
place
maui
hawaii
location
maui
high
performance
computing
center
program
organizing
committee
prof
dennis
gannon
indiana
university
prof
alex
nicolau
univ
california
irvine
prof
brian
smith
univ
new
mexico
mhpcc
dr
marc
snir
watson
research
cntr
ibm
prof
guri
sohi
univ
wisconsin
prof
mateo
valero
univ
polithecnica
de
catalunya
prof
alex
veidenbaum
uofi
chicago
prof
kyle
gallivan
florida
state
university
prof
tomita
kyoto
university
prof
kitzuregawa
tokyo
university
prof
muraoka
waseda
university
prof
joe
wakayama
university
workshop
description
submission
participants
local
arrangements
preliminary
program
description
invited
workshop
aims
bring
together
researchers
designers
academia
industry
discuss
directions
development
high
performance
parallel
distributed
multimedia
processors
systems
workshop
invitees
computer
architects
compiler
operating
system
application
experts
main
goal
workshop
discuss
future
trends
development
architecture
software
systems
explore
assumptions
made
architects
software
systems
software
writers
architecture
increased
complexity
areas
calls
increased
interaction
researchers
disciplines
accurately
assess
potential
directions
future
trends
architecture
systems
main
themes
workshop
application
requirements
characteristics
compiler
architecture
interaction
codesign
software
technology
driven
constrained
new
architectures
numerical
non
numerical
applications
well
database
data
mining
applications
interest
also
interest
characteristics
component
based
well
web
java
based
applications
trends
processor
design
memory
development
vlsi
technology
cad
tools
effect
processor
system
design
will
discussed
well
effect
system
application
software
cases
longer
term
view
assessment
future
interest
workshop
topics
include
limited
systems
chip
soc
memory
technology
system
organization
single
chip
multiprocessors
multi
chip
servers
large
scale
multiprocessors
pc
based
parallel
computing
java
based
computing
application
development
trends
requirements
compiler
architecture
co
design
high
speed
communication
interconnect
technology
modeling
benchmarks
performance
evaluation
cad
tools
special
purpose
systems
workshop
will
consist
sessions
combining
individual
presentations
discussion
presentations
will
limited
15
min
provide
sufficient
time
discussion
ideal
presentation
will
concentrate
trends
future
directions
rather
recently
obtained
results
speculation
encouraged
workshop
participation
capped
55
invitees
rsvp
august
25th
1998
plan
attend
submission
publication
extended
abstract
3
pages
submitted
9
15
98
submissions
electronic
postscript
form
whenever
possible
papers
will
refereed
basis
extended
abstract
accepted
either
regular
short
presentation
full
papers
will
printed
ieee
computer
society
press
meeting
following
set
latex
macros
used
preparing
paper
additional
publication
instructions
will
made
available
later
date
participants
usa
dr
bic
intel
prof
bilardi
padova
prof
bramley
indiana
dr
campbell
compaq
prof
davidson
michigan
dr
hung
michigan
prof
gallivan
florida
state
prof
gannon
indiana
dr
gropp
argonne
dr
horst
compaq
prof
johnson
utah
prof
nicolau
uc
irvine
prof
norman
illinois
dr
pensak
dupont
prof
polychronopoulos
illinois
prof
smith
wisconsin
prof
smith
new
mexico
prof
sohi
wisconsin
dr
snir
ibm
prof
veidenbaum
uc
irvine
dr
wasserman
los
alamos
japan
dr
akiyama
rwc
prof
amamiya
kyushu
prof
baba
utsunomiya
prof
fukuda
nara
prof
hiraki
tokyo
ido
san
nkk
dr
inagami
hitachi
prof
joe
wakayama
dr
kanou
nec
prof
kasahara
waseda
dr
kimura
fujitsu
prof
kitsuregawa
tokyo
prof
kohata
okayama
science
dr
kudo
rwcp
prof
kunieda
wakayama
prof
matsuoka
tit
prof
mori
kyoto
prof
muraoka
waseda
prof
nakajima
toyohashi
prof
nakajo
kobe
prof
nishikawa
tsukuba
dr
ootsu
utsunomiya
dr
sato
toshiba
prof
tomita
kyoto
prof
yuasa
kyoto
travel
local
arrangements
non
stop
flights
mainland
maui
kahului
airport
even
flights
honolulu
latter
case
one
catch
short
commuter
flight
honolulu
maui
see
maps
directions
airport
prince
hotel
mhpcc
locations
registration
fee
us
100
00
cover
local
expenses
car
rental
recommended
drive
airport
mhpcc
meeting
room
hotel
car
pooling
will
also
possible
workshop
hotel
maui
prince
special
rate
contract
125
night
reservations
made
9
24
require
2
night
deposit
can
cancelled
without
penalty
10
17
phone
number
reservations
800
321
6248
possible
stay
extra
days
rate
conference
number
condominiums
1
3
bedroom
will
available
preferring
apartment
living
price
similar
maps
directions
maui
hpcc
maui
prince
condominiums
welcome
reception
planned
evening
10
25
98
send
questions
mail
iwia
alex
veidenbaum
black
player
permitted
make
opening
moves
illegal
considered
partial
look
othello
game
tree
picture
initial
state
four
possibilies
black
player
can
choose
initial
move
first
see
three
possible
moves
white
player
can
make
response
moves
pictured
tree
continues
grow
fashion
surprisingly
game
tree
can
grow
large
rather
quickly
find
difficult
draw
much
paper
call
leaves
game
tree
final
states
leaves
indicate
states
one
player
won
game
exhaustively
searching
possibilities
time
player
wants
pick
move
wants
pick
one
will
lead
winning
game
state
one
algorithm
determine
best
move
three
steps
apply
evaluation
function
final
game
state
evaluation
function
typically
returns
number
higher
numbers
considered
better
identify
final
state
highest
value
end
game
like
occur
best
win
us
determine
path
current
game
state
final
state
chose
make
move
takes
us
current
game
state
path
toward
chosen
final
state
assuming
complete
game
tree
disposal
simple
approach
implement
however
practical
limitations
make
approach
impossible
first
number
game
states
level
tree
grows
exponentially
work
way
tree
since
number
possible
moves
can
taken
particular
game
state
simply
enough
memory
store
entire
game
tree
can
imagine
build
game
tree
20
levels
deep
four
possible
moves
can
made
particular
state
number
nodes
tree
greater
420
one
quadrillion
nodes
besides
even
enough
memory
available
store
tree
processing
time
create
entire
game
tree
prohibitive
need
find
compromise
approach
perhaps
always
find
best
possible
outcome
makes
decision
reasonable
amount
time
using
reasonable
amount
memory
also
important
realize
just
found
path
end
game
want
mean
can
force
events
take
place
will
get
just
goal
make
moves
best
interest
opponent's
goal
opposite
algorithm
will
need
account
fact
opponent
wants
beat
much
want
beat
opponent
heuristic
search
study
artificial
intelligence
much
say
good
ways
search
toward
goal
impractical
check
possible
paths
toward
can
first
make
use
following
observation
suppose
top
player
made
move
game
bottom
player
wants
figure
best
move
make
using
search
tree
approach
discussing
bottom
player
need
concern
subtree
current
game
state
root
move
made
moves
made
can
ignored
now
possible
take
paths
tree
thus
analyzing
next
move
make
need
generate
part
search
tree
originates
current
game
state
good
step
toward
reducing
storage
needs
significantly
though
first
step
especially
early
game
might
still
huge
numbers
states
can
arise
state
currently
reduce
workload
even
can
employ
technique
called
heuristic
search
heuristic
search
generate
much
relevant
subtree
practical
using
resulting
game
states
guide
us
selecting
move
hope
will
best
even
though
time
get
full
information
move
might
turn
several
strategies
use
heart
strategy
use
notion
evaluation
function
discussed
earlier
need
rate
particular
game
state
way
can
decide
large
number
game
states
best
outcome
us
simple
approach
though
one
ignores
important
aspects
game
following
eval
state
number
tiles
belonging
number
tiles
belonging
opponent
also
important
note
need
actually
build
game
tree
memory
algorithm
will
perform
sort
depth
first
search
game
tree
meaning
can
use
parameters
recursive
method
stored
run
time
stack
perform
search
negating
need
actually
build
store
game
tree
will
dramatically
reduce
amount
memory
needed
choose
move
since
one
path
tree
will
ever
need
stored
run
time
stack
time
eight
level
deep
search
store
many
eight
nodes
rather
nodes
can
reached
eight
moves
might
huge
putting
ideas
together
can
develop
search
algorithm
will
help
us
evaluate
possible
moves
might
make
algorithm
looks
something
like
int
search
othellogamestate
int
depth
depth
0
return
evaluation
else
turn
move
valid
move
can
make
make
move
yielding
state
s'
search
s'
depth
1
return
maximum
value
returned
recursive
search
calls
else
valid
move
opponent
can
make
make
move
yielding
state
s'
search
s'
depth
1
return
minimum
value
returned
recursive
search
calls
things
need
discuss
algorithm
first
notice
two
cases
recursion
either
algorithm's
turn
currently
making
decision
opponent's
turn
case
algorithm
almost
except
algorithm's
turn
maximum
value
returned
words
algorithm
wants
make
best
possible
move
can
behalf
opponent's
turn
minimum
value
returned
assumed
opponent
will
also
make
move
best
interest
turn
worst
interest
may
assume
algorithm
will
always
black
white
player
either
black
white
player
might
played
algorithm
deciding
whether
turn
opponent's
turn
exercise
caution
ensure
making
right
decision
second
notice
depth
parameter
will
used
limit
depth
search
make
sure
search
manageable
amount
work
time
recurse
one
level
deeper
depth
reduced
one
stop
recursing
reaches
zero
need
experiment
bit
decide
depth
can
handled
reasonable
amount
time
without
limiting
depth
find
moves
will
take
orders
magnitude
longer
willing
wait
third
observe
one
player
makes
move
necessarily
case
player
will
making
next
move
occasionally
othello
player
gets
move
twice
row
care
must
taken
deciding
whose
turn
easiest
way
deal
problem
count
current
game
state
keep
track
can
always
tell
reliably
whose
turn
lastly
note
algorithm
returns
evaluation
best
state
best
state
short
calling
search
4
state
asks
following
question
looking
four
moves
future
assuming
best
can
opponent
well
will
state
turn
need
exercise
care
actually
implementing
algorithm
choosemove
will
able
call
search
use
result
help
choose
right
move
evaluation
functions
core
ai
will
set
apart
others
evaluation
function
uses
decide
good
board
configuration
leaving
open
problem
welcome
implement
evaluation
function
however
like
might
want
poke
around
web
looking
strategy
guides
information
taking
account
example
squares
othello
board
considered
important
others
intended
fun
play
program
see
can
beat
also
hope
enjoy
fine
tuning
program
trouble
beating
tournament
project's
due
date
passed
gathering
ais
together
running
tournament
determine
best
ai
fairness
explain
tournament
will
organized
ai
will
play
two
games
ai
one
black
white
primary
factor
determining
best
ai
total
percentage
games
won
draws
will
count
1
2
win
1
2
loss
first
foremost
important
win
games
secondary
factor
used
case
tie
total
number
tiles
accumulated
games
means
winning
games
big
opposed
squeaking
close
wins
important
tie
winning
small
often
still
trumps
winning
big
less
often
ai
will
given
5
seconds
cpu
time
choose
moves
running
tournament
1
7
ghz
intel
core
i7
though
multiple
cores
will
using
one
core
game
running
multiple
games
simultaneously
ai
permitted
launch
additional
threads
processes
must
work
entirely
thread
calls
choosemove
method
ai
takes
long
make
move
returns
null
throws
exception
named
according
naming
convention
violates
rules
laid
project
write
will
disqualified
tournament
outcome
tournament
will
bearing
grade
will
hopefully
motivate
think
bit
might
tune
evaluation
function
explore
alternative
ways
helping
ai
see
farther
future
required
fundamentally
use
algorithm
shown
write
though
optimizations
can
make
inclined
sure
whether
idea
permissible
ask
glad
let
know
think
good
luck
deliverables
need
turn
othelloaifactory
java
file
file
containing
ai
class
along
additional
classes
created
need
turn
files
provided
follow
link
explanation
turn
project
clarifications
writeup
conversion
provided
code
use
jar
alex
thornton
summer
2012
originally
written
alex
thornton
fall
2007
portions
taken
end
game
alex
thornton
norman
jacobson
