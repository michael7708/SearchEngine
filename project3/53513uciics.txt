
ondiskmergeradapt 
id
ondiskmergeradapt
5149
2010
03
24
23
37
18z
abehm
copyright
2007
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
09
06
2008
author
alexander
behm
ifndef
ondiskmergeradapt
define
ondiskmergeradapt
include
ondiskmergerabs
include
divideskipmerger
include
filtertree
gramlist
include
filtertree
gramlistondisk
include
filtertree
statsutil
include
filtertree
ftindexerondisk
include
util
misc
include
include
include
include
define
wildchar
91
define
posfilter
none
0
define
posfilter
mismatch
1
define
posfilter
dp
1
class
weightedgramlist
duplicate
inverted
lists
grouped
one
weighted
gramlist
abbrev
wgl
template
class
candidate
information
candidate
answer
abbrev
candi
template
class
wgldesc
weighted
gram
list
descriptor
adds
leafid
weightedgramlist
abbrev
wgld
template
class
wgldescset
set
wglds
abbrev
wgldset
template
class
heapmergeelement
type
element
used
heap
heapmerge
template
class
leafcontext
info
regarding
processing
one
leaf
abbrev
lc
template
class
ondiskmergeradapt
main
merger
class
template
specializations
index
positional
information
template
template
template
class
weightedgramlist
public
unsigned
gramcode
hashed
gram
unsigned
weight
often
corresponding
gram
appears
query
gramlistondisk
gramlist
pointer
inverted
list
disk
template
class
candidate
public
unsigned
id
string
id
unsigned
weight
number
occurrences
lists
remove
duplicate
lists
actually
accummulate
weights
unsigned
weightneeded
number
lists
weight
candidate
must
absent
pruned
template
class
wgldesc
public
weightedgramlist
wgl
unsigned
leafid
wgldesc
unsigned
weightedgramlist
wgl
leafid
template
class
wgldescset
public
vector
wglds
unsigned
totallistsize
sum
listsizes
wgld
wglds
wgldescset
totallistsize
0
static
bool
cmpbysize
const
wgldescset
const
wgldescset
return
totallistsize
totallistsize
wgldescset
unsigned
0
wglds
size
delete
wglds
template
class
heapmergeelement
public
typename
invlist
elementtype
element
unsigned
listindex
heapmergeelement
typename
invlist
elementtype
el
unsigned
li
element
el
listindex
li
bool
operator
const
heapmergeelement
const
return
element
element
bool
operator
class
leafcontext
public
unsigned
threshold
merging
threshold
fstream
invlistsfile
pointer
file
inverted
lists
vector
wgls
wgls
ordered
size
globally
ordered
seqmerge
locally
ordered
regmerge
unsigned
initiallists
minimum
number
lists
read
guarantee
completeness
candidate
set
unsigned
initialweight
total
weight
initial
lists
unsigned
remaininglists
lists
read
yet
unsigned
remainingweight
total
weight
remaining
lists
unsigned
currentlist
index
wgls
list
read
next
unsigned
candidatecounts
total
number
candidates
particular
weight
needed
vector
candidates
current
candidate
set
helpers
cost
model
unsigned
listcounter
number
lists
read
leaf
unsigned
weightcounter
total
weight
listcounter
lists
unsigned
weightedtotallistsize
total
list
size
listcounter
lists
multiplied
list
weights
unsigned
cumulcandicount
number
candidates
potentially
pruned
reading
listcounter
lists
sortleaflists
indicates
whether
wgls
sorted
leaf
size
false
seqmerge
true
regmerge
leafcontext
unsigned
threshold
fstream
invlistsfile
vector
wgls
bool
sortleaflists
set
initiallists
specifit
value
used
seqmerge
void
setinitiallists
unsigned
initiallists
static
bool
cmpwglbysize
const
weightedgramlist
const
weightedgramlist
return
gramlist
listsize
gramlist
listsize
leafcontext
candidatecounts
delete
candidatecounts
template
leafcontext
leafcontext
unsigned
threshold
fstream
invlistsfile
vector
wgls
bool
sortleaflists
threshold
threshold
invlistsfile
invlistsfile
wgls
wgls
init
helpers
cost
model
weightcounter
0
weightedtotallistsize
0
listcounter
0
cumulcandicount
0
determine
initialweight
unsigned
totalweight
0
unsigned
0
wgls
size
totalweight
wgls
weight
initialweight
totalweight
threshold
1
determine
initial
number
lists
read
reach
initialweight
sortleaflists
sort
wgls
begin
wgls
end
leafcontext
cmpwglbysize
initiallists
0
remainingweight
0
unsigned
weightsum
0
unsigned
0
wgls
size
unsigned
currentweight
wgls
weight
weightsum
currentweight
weightsum
initialweight
initiallists
0
initiallists
1
else
remainingweight
currentweight
currentlist
initiallists
remaininglists
wgls
size
initiallists
candidatecounts
new
unsigned
remainingweight
1
memset
candidatecounts
0
sizeof
unsigned
remainingweight
1
template
void
leafcontext
setinitiallists
unsigned
initiallists
initiallists
initiallists
return
initiallists
initiallists
currentlist
initiallists
remaininglists
wgls
size
initiallists
recompute
initialweight
remainingweight
initialweight
0
unsigned
totalweight
0
unsigned
0
wgls
size
initiallists
initialweight
wgls
weight
totalweight
wgls
weight
remainingweight
totalweight
initialweight
candidatecounts
delete
candidatecounts
candidatecounts
new
unsigned
remainingweight
1
memset
candidatecounts
0
sizeof
unsigned
remainingweight
1
main
merger
class
template
class
ondiskmergeradapt
public
ondiskmergerabs
invlist
private
typedef
ondiskmergerabs
invlist
superclass
parameters
cost
model
bool
estimationparamsset
float
readinvlisttimeslope
float
readinvlisttimeintercept
float
readstringavgtime
indicates
positional
filters
used
see
defines
beginning
file
char
posfilters
exponential
probe
returns
iterator
first
element
greater
equal
value
inline
typename
invlist
iterator
expprobe
typename
invlist
iterator
start
typename
invlist
iterator
end
unsigned
value
const
remove
candidates
candidate
set
weightneeded
0
void
cleansecandidates
vector
candidates
const
length
filter
returns
posfilter
length
pruned
posfilter
none
pruned
char
checklength
const
query
query
const
string
prepostquerystr
const
candidate
candidate
const
entry
point
merging
reading
sublists
one
gram
sequentially
void
seqmerge
const
query
query
vector
allwgls
unsigned
nleaves
unsigned
threshold
fstream
invlistsfile
vector
results
entry
point
merging
processing
leafs
one
one
reading
sublists
one
gram
sequentially
void
regmerge
const
query
query
vector
allwgls
unsigned
nleaves
unsigned
threshold
fstream
invlistsfile
vector
results
create
wgls
qgls
setting
weights
wgls
according
often
list
appears
qgls
void
detectduplicatelists
vector
qgls
vector
wgls
const
read
inverted
lists
call
heapmerge
create
initial
candidate
set
cleanup
inverted
lists
void
mergeinitiallists
const
query
query
const
string
prepostquerystr
leafcontext
leafcontext
vector
results
const
merge
initial
lists
obtain
initial
candidate
set
void
heapmerge
const
query
query
const
string
prepostquerystr
leafcontext
leafcontext
vector
results
const
estimate
benefit
reading
next
lc
weightcounter
lists
float
getestimatedbenefit
leafcontext
lc
unsigned
numberstrings
const
read
next
liststoread
lists
process
remove
candidates
void
readnextlists
const
query
query
const
string
prepostquerystr
leafcontext
leafcontext
unsigned
liststoread
vector
results
const
add
candidates
ids
lc
candidates
results
void
addremainingcandidates
const
query
query
const
string
prepostquerystr
leafcontext
lc
vector
results
const
read
initial
lists
leaves
disk
sublists
belonging
gram
read
sequentially
unsigned
seqreadinitiallists
vector
leafcontexts
const
vector
ordwgldsets
fstream
invlistsfile
const
seqmerge
lists
leaves
globally
ordered
according
total
size
sublists
belonging
one
gram
function
reorders
wgls
produces
set
globally
ordered
gram
lists
ordwgldsets
can
keep
track
global
gramlist
read
next
void
reorderwgls
vector
ordwgls
vector
ordwgldsets
const
vector
allwgls
unsigned
nleaves
const
indexes
positional
information
update
candidate
set
one
posid
inverted
list
void
processposid
const
query
query
const
string
prepostquerystr
unsigned
gramcode
unsigned
candiid
vector
wglpos
unsigned
char
candipos
bool
positionsmatched
candidate
const
public
singlefilteropt
indicates
whether
read
lists
belonging
gram
sequentially
ondiskmergeradapt
bool
singlefilteropt
true
char
posfilters
posfilter
none
superclass
singlefilteropt
estimationparamsset
false
posfilters
posfilters
main
entry
point
called
searcher
void
merge
impl
const
query
query
vector
allqgls
const
unsigned
threshold
fstream
invlistsfile
unsigned
numberfilters
vector
results
record
many
strings
partition
leaf
used
cost
model
determining
probability
pruning
candidates
vector
numberstringsinleaf
setting
cost
model
parameters
bool
estimationparamsneeded
impl
return
estimationparamsset
void
setestimationparams
impl
float
readinvlisttimeslope
float
readinvlisttimeintercept
float
readstringavgtime
readinvlisttimeslope
readinvlisttimeslope
readinvlisttimeintercept
readinvlisttimeintercept
readstringavgtime
readstringavgtime
estimationparamsset
true
comparison
function
sorting
static
bool
cmpqglbygramcode
const
querygramlist
const
querygramlist
return
gramcode
gramcode
comparison
function
sorting
static
bool
cmpcandidatebyweightneeded
const
candidate
const
candidate
weightneeded
0
return
false
weightneeded
0
return
true
return
id
id
string
getname
return
ondiskmergeradapt
template
void
ondiskmergeradapt
addremainingcandidates
const
query
query
const
string
prepostquerystr
leafcontext
lc
vector
results
const
unsigned
0
lc
candidates
size
results
push
back
lc
candidates
id
delete
lc
candidates
template
char
ondiskmergeradapt
checklength
const
query
query
const
string
prepostquerystr
const
candidate
candidate
const
signed
l1
prepostquerystr
size
signed
l2
candidate
partialstr
size
abs
l1
l2
signed
query
threshold
return
posfilter
length
else
return
posfilter
none
template
void
ondiskmergeradapt
cleansecandidates
vector
candidates
const
sort
candidates
begin
candidates
end
ondiskmergeradapt
cmpcandidatebyweightneeded
candidates
size
0
candidates
back
weightneeded
0
delete
candidates
back
candidates
pop
back
template
typename
invlist
iterator
ondiskmergeradapt
expprobe
typename
invlist
iterator
start
typename
invlist
iterator
end
unsigned
value
const
unsigned
0
typename
invlist
iterator
iter
start
1
iter
end
return
end
else
iter
value
return
iter
template
void
ondiskmergeradapt
heapmerge
const
query
query
const
string
prepostquerystr
leafcontext
lc
vector
results
const
unsigned
pointersindex
lc
initiallists
memset
pointersindex
0
lc
initiallists
sizeof
unsigned
heap
heap
lc
initiallists
make
initial
heap
unsigned
0
lc
initiallists
unsigned
lc
wgls
gramlist
getarray
0
heap
push
new
heapmergeelement
heapmergeelement
poppedelements
lc
initiallists
heap
empty
container
vector
indexes
moved
next
position
unsigned
poppedelementcount
0
heapmergeelement
mindata
heap
head
candidate
new
candidate
id
mindata
element
weight
0
pop
elements
id
accumulate
weight
candidate
mindata
heap
head
poppedelementcount
lc
initiallists
poppedelements
poppedelementcount
heap
head
weight
lc
wgls
heap
head
listindex
weight
heap
pop
heap
empty
break
check
candidate
weight
exceeds
merge
threshold
passes
filters
weight
lc
threshold
results
push
back
id
delete
else
weightneeded
lc
remainingweight
lc
threshold
weight
1
signed
weightneeded
0
charsumstats
charsumfilter
passesfilter
querycharsumstats
charsumstats
id
unsigned
query
threshold
lc
candidatecounts
weightneeded
lc
candidates
push
back
else
delete
else
lc
candidatecounts
weightneeded
lc
candidates
push
back
move
next
element
insert
heaps
unsigned
0
poppedelementcount
unsigned
index
poppedelements
listindex
pointersindex
index
unsigned
position
pointersindex
index
position
lc
wgls
index
gramlist
getarray
size
unsigned
lc
wgls
index
gramlist
getarray
position
heap
push
new
heapmergeelement
index
delete
poppedelements
template
float
ondiskmergeradapt
getestimatedbenefit
leafcontext
lc
unsigned
numberstrings
const
float
avglistsize
float
lc
weightedtotallistsize
float
lc
weightcounter
float
psuccess
1
0f
avglistsize
numberstrings
calculate
benefit
reading
next
weightcounter
lists
float
benefitreadlists
0
0f
unsigned
1
0
float
binomialdistrib
lc
weightcounter
psuccess
true
benefitreadlists
lc
candidatecounts
readstringavgtime
return
benefitreadlists
template
void
ondiskmergeradapt
readnextlists
const
query
query
const
string
prepostquerystr
leafcontext
leafcontext
unsigned
liststoread
vector
results
const
unsigned
0
liststoread
weightedgramlist
wgl
leafcontext
wgls
leafcontext
currentlist
gramlistondisk
gl
wgl
gramlist
invlist
array
gl
getarray
leafcontext
invlistsfile
leafcontext
remainingweight
wgl
weight
lookup
every
candidate
bool
cleanseneeded
false
typename
invlist
iterator
start
array
begin
unsigned
0
leafcontext
candidates
size
candidate
candidate
leafcontext
candidates
signed
candidate
weightneeded
end
candidate
id
start
lower
bound
start
end
candidate
id
start
candidate
id
candidate
weight
wgl
weight
candidate
weight
leafcontext
threshold
leafcontext
candidatecounts
candidate
weightneeded
candidate
weightneeded
0
results
push
back
candidate
id
cleanseneeded
true
else
leafcontext
candidatecounts
candidate
weightneeded
candidate
weightneeded
candidate
weightneeded
wgl
weight
candidate
weightneeded
wgl
weight
0
candidate
weightneeded
leafcontext
remainingweight
candidate
weightneeded
0
candidate
weightneeded
0
leafcontext
candidatecounts
candidate
weightneeded
else
cleanseneeded
true
need
remove
items
candidate
set
can
guarantee
elements
either
answers
answers
cleanseneeded
cleansecandidates
leafcontext
candidates
gl
clear
template
void
ondiskmergeradapt
mergeinitiallists
const
query
query
const
string
prepostquerystr
leafcontext
leafcontext
vector
results
const
read
short
lists
disk
retrieve
cache
already
read
unsigned
0
leafcontext
initiallists
leafcontext
wgls
gramlist
getarray
leafcontext
invlistsfile
heapmerge
query
prepostquerystr
leafcontext
results
clean
lists
unsigned
0
leafcontext
initiallists
leafcontext
wgls
gramlist
clear
template
void
ondiskmergeradapt
detectduplicatelists
vector
qgls
vector
wgls
const
sort
qgls
begin
qgls
end
ondiskmergeradapt
cmpqglbygramcode
unsigned
0
qgls
size
querygramlist
currentqgl
qgls
unsigned
currentcount
0
qgls
size
currentqgl
gramcode
qgls
gramcode
currentcount
else
break
weightedgramlist
wgl
new
weightedgramlist
wgl
gramcode
currentqgl
gramcode
wgl
gramlist
dynamic
cast
currentqgl
gl
wgl
weight
currentcount
wgls
push
back
wgl
template
void
ondiskmergeradapt
reorderwgls
vector
ordwgls
vector
ordwgldsets
const
vector
allwgls
unsigned
nleaves
const
tr1
unordered
map
groupedwgls
fill
groupedwgls
unsigned
0
nleaves
const
vector
currentlists
allwgls
unsigned
0
currentlists
size
weightedgramlist
wgl
currentlists
wgldescset
wgldset
null
groupedwgls
find
wgl
gramcode
groupedwgls
end
wgldset
new
wgldescset
groupedwgls
wgl
gramcode
wgldset
ordwgldsets
push
back
wgldset
else
wgldset
groupedwgls
wgl
gramcode
wgldset
wglds
push
back
new
wgldesc
wgl
wgldset
totallistsize
wgl
gramlist
listsize
sort
vector
wgldescset
total
sublist
size
sort
ordwgldsets
begin
ordwgldsets
end
wgldescset
cmpbysize
reorder
gramlists
leaf
consistent
global
ordering
sum
sublist
sizes
unsigned
0
ordwgldsets
size
wgldescset
wgldset
ordwgldsets
vector
wglds
wgldset
wglds
unsigned
0
wglds
size
ordwgls
wglds
leafid
push
back
wglds
wgl
template
unsigned
ondiskmergeradapt
seqreadinitiallists
vector
leafcontexts
const
vector
ordwgldsets
fstream
invlistsfile
const
must
keep
reading
sorted
sublists
belonging
gram
long
exist
one
leaf
read
initiallists
number
lists
bool
done
false
unsigned
globalcurrentlist
0
unsigned
nleaves
leafcontexts
size
done
wgldescset
wgldset
ordwgldsets
globalcurrentlist
vector
wglds
wgldset
wglds
seek
start
offset
first
sorted
sublist
wgldesc
firstwgld
wglds
begin
gramlistondisk
firstgl
firstwgld
wgl
gramlist
invlistsfile
seekg
firstgl
startoffset
now
fill
sorted
sublists
order
one
sequential
fillarray
implemented
perform
disk
seek
typename
vector
iterator
setiter
setiter
wglds
begin
setiter
wglds
end
setiter
wgldesc
wgld
setiter
gramlistondisk
gl
wgld
wgl
gramlist
sanity
check
cases
condition
true
error
invlistsfile
tellg
gl
startoffset
invlistsfile
seekg
gl
startoffset
gl
fillarray
invlistsfile
leafcontexts
wgld
leafid
listcounter
check
whether
need
read
lists
unsigned
donecount
0
unsigned
0
nleaves
leafcontexts
listcounter
leafcontexts
initiallists
donecount
done
donecount
nleaves
globalcurrentlist
return
globalcurrentlist
template
void
ondiskmergeradapt
seqmerge
const
query
query
vector
allwgls
unsigned
nleaves
unsigned
threshold
fstream
invlistsfile
vector
results
needed
indexer
positional
information
string
prepostquerystr
posfilters
posfilter
none
gramgen
getprepoststring
query
str
prepostquerystr
reorder
inverted
lists
according
global
ordering
fill
ordwgldsets
ordwgls
vector
ordwgls
nleaves
vector
ordwgldsets
reorderwgls
ordwgls
ordwgldsets
allwgls
nleaves
initialize
context
leaves
vector
leafcontexts
unsigned
0
nleaves
leafcontext
lc
new
leafcontext
threshold
invlistsfile
ordwgls
false
leafcontexts
push
back
lc
read
initial
lists
leaves
read
sublists
belonging
one
gram
sequentially
unsigned
globalcurrentlist
seqreadinitiallists
leafcontexts
ordwgldsets
invlistsfile
ifdef
debug
stat
numberseeks
globalcurrentlist
endif
perform
initial
merging
leaves
unsigned
0
nleaves
leafcontext
lc
leafcontexts
lc
setinitiallists
lc
listcounter
mergeinitiallists
query
prepostquerystr
lc
results
start
cost
based
selection
additional
lists
read
unsigned
liststoread
1
number
lists
decide
read
every
iteration
unsigned
lastlistcounter
ordwgldsets
size
unsigned
lastlistcounterrepeats
0
unsigned
lastcandidatesleft
0
liststoread
globalcurrentlist
ordwgldsets
size
liststoread
0
reset
cost
estimation
helpers
leafcontexts
unsigned
0
nleaves
leafcontexts
listcounter
0
leafcontexts
weightcounter
0
leafcontexts
weightedtotallistsize
0
leafcontexts
cumulcandicount
0
estimate
benefit
cost
reading
number
remaining
lists
unsigned
totallistsize
0
unsigned
listcounter
0
unsigned
globalcurrentlist
ordwgldsets
size
listcounter
wgldescset
wgldset
ordwgldsets
vector
wglds
wgldset
wglds
update
cost
estimation
helpers
typename
vector
iterator
setiter
setiter
wglds
begin
setiter
wglds
end
setiter
wgldesc
wgld
setiter
unsigned
leafid
wgld
leafid
leafcontext
lc
leafcontexts
leafid
weightedgramlist
wgl
lc
wgls
lc
currentlist
lc
listcounter
unsigned
newweightcounter
lc
weightcounter
wgl
weight
unsigned
lc
weightcounter
1
cumulcandicount
lc
candidatecounts
lc
weightcounter
newweightcounter
lc
weightedtotallistsize
wgl
gramlist
listsize
wgl
weight
lc
listcounter
determine
benefit
reading
lists
cost
reading
lists
float
benefitreadlists
0
0f
float
costnoreadlists
0
0f
unsigned
candidatesleft
0
unsigned
0
nleaves
candidatesleft
leafcontexts
candidates
size
leafcontexts
weightcounter
0
benefitreadlists
getestimatedbenefit
leafcontexts
numberstringsinleaf
leafcontexts
remainingweight
0
leafcontexts
candidates
size
0
costnoreadlists
leafcontexts
cumulcandicount
readstringavgtime
totallistsize
wgldset
totallistsize
float
costreadlists
listcounter
readinvlisttimeintercept
totallistsize
readinvlisttimeslope
benefitreadlists
costreadlists
costnoreadlists
first
heuristic
terminate
reading
lists
candidatesleft
1
listcounter
lastlistcounter
lastcandidatesleft
candidatesleft
lastlistcounterrepeats
lastlistcounterrepeats
listcounter
break
else
lastcandidatesleft
candidatesleft
lastlistcounter
listcounter
lastlistcounterrepeats
0
liststoread
1
break
read
next
lists
using
sequential
ios
unsigned
0
liststoread
wgldescset
wgldset
ordwgldsets
globalcurrentlist
vector
wglds
wgldset
wglds
now
fill
sorted
sublists
order
one
sequential
fillarray
implemented
perform
disk
seek
typename
vector
iterator
setiter
setiter
wglds
begin
setiter
wglds
end
setiter
wgldesc
wgld
setiter
leafcontexts
wgld
leafid
candidates
size
0
gramlistondisk
gl
wgld
wgl
gramlist
handle
first
seek
sanity
check
manner
invlistsfile
tellg
gl
startoffset
invlistsfile
seekg
gl
startoffset
gl
fillarray
invlistsfile
now
process
read
sublists
setiter
wglds
begin
setiter
wglds
end
setiter
wgldesc
wgld
setiter
leafcontexts
wgld
leafid
candidates
size
0
leafcontext
lc
leafcontexts
wgld
leafid
readnextlists
query
prepostquerystr
lc
1
results
lc
currentlist
liststoread
0
means
get
benefit
reading
number
next
lists
globalcurrentlist
liststoread
ifdef
debug
stat
numberseeks
liststoread
endif
add
remaining
candidates
result
set
delete
candidate
instances
unsigned
0
nleaves
addremainingcandidates
query
prepostquerystr
leafcontexts
results
cleanup
unsigned
0
ordwgldsets
size
delete
ordwgldsets
unsigned
0
leafcontexts
size
delete
leafcontexts
template
void
ondiskmergeradapt
regmerge
const
query
query
vector
allwgls
unsigned
nleaves
unsigned
threshold
fstream
invlistsfile
vector
results
needed
indexer
positional
information
string
prepostquerystr
posfilters
posfilter
none
gramgen
getprepoststring
query
str
prepostquerystr
search
every
leaf
node
unsigned
0
nleaves
initialize
context
leaf
leafcontext
lc
threshold
invlistsfile
allwgls
true
merge
initial
short
lists
mergeinitiallists
query
prepostquerystr
lc
results
ifdef
debug
stat
numberseeks
lc
initiallists
endif
unsigned
liststoread
1
number
lists
decide
read
every
iteration
liststoread
lc
currentlist
lc
wgls
size
liststoread
0
every
possible
number
remaining
lists
determine
benefits
cost
unsigned
totallistsize
0
unsigned
listcounter
0
unsigned
lastlistcounter
lc
wgls
size
unsigned
lastlistcounterrepeats
0
unsigned
lastcandidatesleft
0
unsigned
lc
currentlist
lc
wgls
size
listcounter
weightedgramlist
wgl
lc
wgls
unsigned
newweightcounter
lc
weightcounter
wgl
weight
unsigned
lc
weightcounter
1
gramlist
listsize
wgl
weight
totallistsize
wgl
gramlist
listsize
float
benefitreadlists
getestimatedbenefit
lc
numberstringsinleaf
float
costnoreadlists
lc
cumulcandicount
readstringavgtime
float
costreadlists
listcounter
readinvlisttimeintercept
lc
weightedtotallistsize
readinvlisttimeslope
benefitreadlists
costreadlists
costnoreadlists
first
heuristic
terminate
reading
lists
lc
candidates
size
1
listcounter
lastlistcounter
lastcandidatesleft
lc
candidates
size
lastlistcounterrepeats
lastlistcounterrepeats
listcounter
break
else
lastcandidatesleft
lc
candidates
size
lastlistcounter
listcounter
lastlistcounterrepeats
0
liststoread
1
break
liststoread
readnextlists
query
prepostquerystr
lc
liststoread
results
liststoread
0
means
get
benefit
reading
number
next
lists
lc
currentlist
liststoread
ifdef
debug
stat
numberseeks
liststoread
endif
cout
endl
add
remaining
candidates
result
set
clear
candidate
information
addremainingcandidates
query
prepostquerystr
lc
results
template
void
ondiskmergeradapt
merge
impl
const
query
query
vector
allqgls
unsigned
threshold
fstream
invlistsfile
unsigned
numberfilters
vector
results
unsigned
nleaves
allqgls
size
eliminate
duplicate
inverted
lists
assign
weights
lists
indicating
many
gram
appears
query
vector
allwgls
nleaves
unsigned
0
nleaves
detectduplicatelists
allqgls
allwgls
check
single
filter
optimization
reading
lists
sequentially
numberfilters
1
singlefilteropt
allqgls
size
1
seqmerge
query
allwgls
nleaves
threshold
invlistsfile
results
else
leaves
processed
ony
one
lists
gram
read
sequantially
partitioning
regmerge
query
allwgls
nleaves
threshold
invlistsfile
results
clean
weighted
gramlists
unsigned
0
nleaves
unsigned
0
allwgls
size
delete
allwgls
specialize
weighted
gramlist
inverted
list
type
positions
also
record
template
public
unsigned
gramcode
unsigned
weight
gramlistondisk
gramlist
vector
positions
specialize
candidate
inverted
list
type
positions
also
record
positions
mismatching
grams
pragma
pack
push
1
template
public
unsigned
id
unsigned
weight
unsigned
weightneeded
set
mismatchpositions
positions
mismatched
grams
queries
perspective
char
ispruned
state
candidate
can
pruned
various
filters
0
denotes
pruned
0
denotes
pruned
string
partialstr
candidate
unsigned
length
unsigned
char
wildchar
wildchar
ispruned
posfilter
none
partialstr
string
length
wildchar
void
updatepartialstring
const
string
gram
unsigned
char
pos
make
sure
collision
gram
size
0
unsigned
0
gram
size
partialstr
pos
gram
float
wildcarded
const
string
s1
const
string
s2
const
char
wildchar
wildchar
float
wildcarded
const
char
s1
const
char
s2
unsigned
unsigned
const
char
wildchar
wildchar
bunch
filters
edit
distance
use
positional
information
void
checkmismatches
const
query
query
unsigned
gramlength
void
checkpartialstring
const
query
query
const
string
prepostquerystr
void
checksubstrfilter
const
query
query
const
string
prepostquerystr
const
string
gram
unsigned
gramlength
unsigned
stringlength
unsigned
char
stringpos
unsigned
char
querypos
unsigned
substrfiltercount
void
applyposfilters
pragma
pack
pop
declarations
member
function
specializations
follow
definitions
cc
template
detectduplicatelists
vector
allqgls
vector
allwgls
const
template
readnextlists
const
query
query
const
string
prepostquerystr
leafcontext
leafcontext
unsigned
liststoread
vector
results
const
warning
will
currently
work
edit
distance
similarity
functions
will
work
template
heapmerge
const
query
query
const
string
prepostquerystr
leafcontext
leafcontext
vector
results
const
template
iterator
ondiskmergeradapt
expprobe
array
iterator
start
array
iterator
end
unsigned
value
const
template
addremainingcandidates
const
query
query
const
string
prepostquerystr
leafcontext
lc
vector
results
const
template
processposid
const
query
query
const
string
prepostquerystr
unsigned
gramcode
unsigned
candiid
vector
wglpos
unsigned
char
candipos
bool
positionsmatched
candidate
const
endif
