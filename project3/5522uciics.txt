nisc technology 
nisc 
nisc
technology
toolset
nisc
sk
instruction
set
computer
online
tool
nisctoolset
2008
10
10
released
belorussian
translation
can
nisc
technology
toolset
rtl
synthesis
can
use
tools
free
rtl
verilog
synthesis
tool
nisc
toolset
can
generate
customized
rtl
code
get
corresponding
architecture
description
gnr
synthesizable
verilog
code
output
contrast
standard
high
level
synthesis
hls
tools
generating
architecture
can
go
back
edit
generated
architecture
use
input
nisc
toolset
way
can
target
specific
improvement
can
also
accurately
control
area
clock
frequency
power
layout
routability
etc
left
guesswork
trial
error
standard
hls
tools
embedded
custom
processor
design
can
use
tools
design
embedded
custom
processors
can
specify
datapath
custom
functional
units
without
worrying
designing
instruction
decoder
instruction
binary
etc
use
nisc
toolset
compile
code
custom
processor
design
space
exploration
can
try
scenario
nisc
toolset
change
application
code
architecture
structure
see
results
immediately
explore
effects
adding
removing
components
connections
registers
different
places
datapath
see
affects
clock
frequency
number
cycles
power
area
energy
routability
etc
use
nisc
instruction
set
computer
nisc
technology
next
generation
tools
design
synthesis
nisc
technology
can
simultaneously
gain
higher
productivity
better
quality
results
techniques
offer
one
benefits
two
popular
approaches
designing
digital
systems
low
level
design
register
transfer
level
rtl
can
lead
efficient
ips
development
time
cost
high
high
level
synthesis
hls
goal
improve
productivity
automatically
converts
high
level
description
ip
written
language
rtldesigner
little
control
quality
generated
rtl
terms
clock
frequency
area
manufacturability
power
etc
result
quality
typically
bad
high
level
design
using
general
purpose
custom
processors
development
time
cost
much
lower
efficiency
implementation
quality
also
much
lower
application
specific
instruction
processors
asip
goal
improve
quality
adds
application
specific
instructions
processor
finding
suitable
custom
instructions
adding
toolset
compiler
simulator
etc
challenging
task
instruction
set
processors
including
asips
impose
minimum
overhead
terms
area
power
performance
processor
based
implementation
may
become
appealing
ip
design
complexity
certain
level
relatively
high
suitable
want
run
algorithms
design
hardware
block
switching
rtl
design
asip
vice
versa
requires
changing
entire
toolset
skill
set
can
explore
small
domain
none
approaches
suitable
designs
medium
complexity
nisc
technology
address
design
productivity
quality
main
idea
automatically
compile
given
application
given
datapath
nisc
technology
offers
new
approach
design
custom
processor
ips
removes
instructions
enable
faster
execution
better
customization
without
instructions
nisc
compiler
full
control
components
connections
datapath
enables
achieve
better
resource
utilization
one
nisc
toolset
sufficient
possible
datapaths
therefore
nisc
universal
processing
element
ip
designs
nisc
technology
benefits
high
productivity
gain
rtl
code
generation
better
quality
results
aggressive
power
performance
area
optimizationseamless
custom
unit
integrationoptional
manual
optimizations
easy
system
integration
providing
ultimate
reuse
reprogrammability
reconfigurability
facilitating
design
manufacturability
layout
available
compilation
fast
design
space
exploration
scenarios
one
toolset
ips
excellent
market
penetration
customization
can
use
nisc
nisc
technology
can
used
many
different
purposes
may
want
use
nisc
digital
designer
looking
explore
different
design
alternatives
implementing
algorithm
software
developer
interested
performance
evaluation
algorithm
specific
architecture
system
developer
interested
generating
ip
blocks
improving
performance
different
parts
application
architecture
researcher
developer
interested
evaluating
effect
different
architectural
techniques
actual
implementation
fpga
user
looking
easy
way
programming
fpga
asic
designer
interested
quickly
prototyping
fpga
co
processor
accelerator
developer
educator
interested
showing
students
programs
actually
execute
hardware
eda
researcher
interested
different
design
aspects
application
code
modification
transformation
architecture
description
physical
aware
design
student
hobbyist
looking
really
cool
stuff
even
researcher
verification
see
read
nisc
features
nisc
toolset
faq
nisc
introduction
nisc
system
related
publications
example
designs
join
nisc
user
forum
download
install
free
tools
custom
ip
design
verilog
conversion
try
tools
online
custom
ip
design
verilog
conversion
