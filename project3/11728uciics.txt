lec12f00 doc 
lecture twelve 
lecture
twelve
ics
131
fall
00
2
nov
2000
review
lecture
11
computers
health
care
great
greatest
need
potential
great
good
great
harm
need
control
cost
potential
ease
applications
progress
date
modest
done
money
money
spend
devices
overwhelming
problems
health
care
privacy
concerns
need
change
system
preventative
care
software
safety
readings
shiver
jube
jr
faa
software
flaw
spotlights
malady
digital
age
la
times
27
oct
00
c1
c10
leveson
nancy
turner
clark
investigation
therac
25
accidents
ieee
computer
july
1993
18
41
use
google
get
leveson
nancy
web
page
1
software
critical
applications
one
thing
problems
productivity
software
quite
another
problems
software
controlling
life
critical
applications
2
two
examples
air
traffic
control
glitch
palmdale
delayed
air
traffic
blamed
coding
insufficient
testing
controller
training
lone
air
traffic
controller
sitting
darkened
confines
palmdale
air
route
traffic
control
center
innocently
shut
much
air
traffic
across
southwest
last
week
merely
typing
many
characters
computer
entered
9
characters
represent
mexican
flight
system
handle
five
characters
problems
inadequate
testing
inadequate
training
new
system
inadequate
training
old
system
aggravated
shift
problems
software
customized
air
hub
therac
25
device
used
provide
radiation
treatment
cancer
patients
six
cases
device
malfunctioned
provided
significant
overdoses
radiation
causing
deaths
injuries
problems
four
contributing
factors
management
inadequacies
lack
procedures
following
reported
incidents
overconfidence
software
removal
hardware
interlocks
making
sofware
single
point
failure
lead
accident
presumably
less
acceptable
software
engineering
practices
unrealistic
risk
assessment
along
overconfidence
results
assessments
3
can
done
fault
understanding
accident
accidents
system
accidents
stem
complex
interactions
various
components
activities
attribute
single
cause
accident
usually
serious
mistake
article
hope
demonstrate
complex
nature
accidents
need
investigate
aspects
system
development
operation
understand
happened
prevent
future
accidents
page
1
trust
software
rely
solely
software
interface
issue
system
engineering
issues
sofware
engineering
issues
documentation
afterthought
software
quality
assurance
practices
standards
established
designs
kept
simple
ways
get
information
errors
example
software
audit
trails
designed
software
beginning
software
whould
subjected
extensive
testing
formal
analysis
module
software
level
system
testing
alone
adequate
role
government
licensing
review
testing
role
educational
institutions
readings
7
nov
00
dunham
kemba
telecommuter'
lament
wsj
31
oct
00
b1
b18
hafner
katie
working
home
today
ny
times
2
nov
00
d1
d8
optional
readings
microsoft
break
schwartz
john
irregular
new
accounts
alerted
microsoft
network
intruder
ny
times
29
oct
00
a25
schmitt
eric
budget
deal
stumbles
ontiming
worker
safety
provision
ny
times
1
nov
00
a23
cohen
randy
pushing
envelope
ny
times
magazine
29
oct
00
26
flanigan
james
value
shifts
hardware
service
la
times
29
oct
00
c1
c4
harmon
amy
napster
users
mourn
end
free
music
ny
times
1
nov
00
c1
c4
richtel
matt
kirkpatrick
david
internet
service
charge
fee
music
rights
ny
times
1
nov
00
a1
c4
miller
greg
dunn
ashley
internet's
toll
social
life
cause
worry
study
says
la
times
26
oct
00
c1
c10
iritani
evelyn
sites
cast
net
bring
asian
women
online
la
times
30
oct
00
c1
c5
deutsch
claudia
bricks
clicks
world
needs
commercial
space
ny
times
30
oct
00
c1
c5
kuczynski
alex
magazines
mining
web
readers
ny
times
30
oct
00
c1
c16
