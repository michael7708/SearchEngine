scheme finger exercises 
scheme finger exercises 
introduction
cs
uc
irvine
kay
scheme
finger
exercises
page
introduction
computer
science
uc
irvine
david
kay
scheme
finger
exercises
provide
short
exercises
give
practice
fundamental
mechanics
scheme
recommend
try
exercises
section
later
exercises
section
complex
earlier
ones
feel
comfortable
topics
just
try
last
exercise
two
section
find
quickly
correctly
try
earlier
ones
first
course
ask
ta
instructor
like
explanation
since
brand
new
just
barely
possible
errors
crept
think
found
one
please
contact
kay
uci
edu
answers
appear
page
white
text
can
view
selecting
highlighting
area
problem
get
greatest
benefit
using
pencil
paper
write
answer
looking
otherwise
easy
just
browse
thinking
yes
looks
right
without
building
essential
understanding
show
definition
function
function
predefined
built
drscheme
help
desk
will
describe
simple
nested
arithmetic
expressions
value
expression
25
30
55
40
50
60
150
15
5
10
5
15
10
5
2
3
25
100
7
2
20
10
2
1
4
40
12
4
2
5
1
20
5
3
6
3
15
5
6
6
4
20
7
2
5
10
29
defining
constants
value
returned
end
sequence
expressions
define
size
15
1
size
16
define
height
10
define
width
20
width
height
200
defining
functions
value
returned
end
sequence
expressions
define
triple
lambda
num
3
num
triple
5
15
define
area
lambda
height
width
height
width
area
10
12
120
define
total
pennies
lambda
dollars
cents
dollars
100
cents
total
pennies
5
43
543
definition
total
pennies
total
pennies
43
5
4305
define
seconds
per
minute
60
define
minutes
per
hour
60
define
hours
per
day
24
define
total
seconds
lambda
days
hours
minutes
seconds
seconds
seconds
per
minute
minutes
minutes
per
hour
hours
hours
per
day
days
boolean
expressions
relational
operators
value
expression
12
4
3
true
12
4
4
false
5
4
3
7
true
6
3
9
2
false
boolean
expressions
predicate
functions
value
expression
evaluate
sub
expression
ask
type
value
number
boolean
function
returns
even
16
input
even
number
true
odd
6
3
false
number
5
3
2
input
number
false
returns
boolean
number
equal
negative
10
5
odd
4
2
true
inputs
equal
false
boolean
expressions
logical
operators
value
expression
5
4
1
even
12
true
odd
17
odd
18
odd
19
false
even
100
odd
101
even
102
odd
103
true
odd
2
odd
4
odd
6
false
5
4
1
even
12
true
odd
17
odd
18
odd
19
true
even
100
odd
101
even
102
odd
103
true
odd
2
odd
4
odd
6
false
odd
13
false
even
13
true
4
3
7
false
4
2
9
true
odd
14
6
1
7
6
2
9
true
6
1
7
6
2
9
odd
14
false
define
true
define
false
equal
true
fact
one
demorgan's
laws
true
matter
define
false
define
false
equal
true
another
demorgan's
laws
cond
expressions
value
returned
expression
cond
6
5
1
17
else
18
18
cond
even
5
4
21
else
20
21
expression
types
type
value
number
boolean
symbol
expression
return
include
conds
symbols
type
structure
definitions
structure
manipulations
constructors
structure
manipulations
field
selectors
structure
manipulations
type
checking
predicates
type
function
definitions
lambda
1
arg
2
args
3
args
function
calls
type
returned
list
stuff
david
kay
406b
computer
science
university
california
irvine
irvine
ca
92697
3425
949
824
5072
fax
949
824
4056
email
kay
uci
edu
sunday
october
9
2005
8
48
