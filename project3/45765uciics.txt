ics 32 winter 2013 code example urls 
downloading data web urls http urllib request module standard library 
ics
32
winter
2013
news
course
reference
schedule
project
guide
code
examples
alex
ics
32
winter
2013
code
example
downloading
data
web
background
thus
far
course
preceding
one
written
python
programs
read
data
text
files
exchange
data
network
via
sockets
two
big
steps
push
outward
boundaries
can
accomplish
python
however
elephant
room
speak
think
interesting
data
internet
resides
web
web
sites
display
content
web
services
provide
ability
interact
web
based
data
cases
fundamentals
already
seen
apply
connection
initiated
client
connecting
server
usually
server's
port
80
protocol
followed
governs
conversation
looks
like
want
interact
web
data
simplest
example
download
content
web
page
need
know
enough
protocol
able
implement
conversation
urls
use
browser
visit
web
page
need
tell
browser
want
go
handles
rest
notion
want
go
encapsulated
url
uniform
resource
locator
specifies
things
protocol
used
download
web
page
host
ip
address
name
machine
like
www
ics
uci
edu
web
page
downloaded
page
machine
downloaded
one
earlier
code
examples
included
link
short
python
module
called
oops
py
complete
url
link
http
www
ics
uci
edu
thornton
ics32
codeexamples
exceptionalcontrolflow
oops
py
url
means
first
characters
preceding
colon
indicate
protocol
used
network
conversation
web
pages
protocol
will
listed
http
means
like
use
http
hypertext
transfer
protocol
colon
two
slashes
host
case
host
listed
www
ics
uci
edu
machine
ics
web
site
hosted
possible
also
specify
port
following
host
colon
port
number
www
ics
uci
edu
8080
default
port
number
http
traffic
80
port
numbers
usually
specified
except
rare
instances
something
default
rest
url
specifies
web
page
like
download
given
host
using
given
protocol
case
page
thornton
ics32
codeexamples
exceptionalcontrolflow
oops
py
page
web
directory
control
given
information
browser
will
know
just
needs
initiate
socket
connection
port
80
www
ics
uci
edu
use
http
request
page
thornton
ics32
codeexamples
exceptionalcontrolflow
oops
py
parse
http
response
draw
page
browser
window
browsers
programs
can
conversations
using
http
python
programs
can
need
know
little
bit
http
order
effectively
background
http
http
hypertext
transfer
protocol
protocol
web
traffic
internet
transacted
latest
version
http
1
1
though
newer
version
development
stick
http
1
1
since
predominant
version
http
used
across
web
today
http
request
response
protocol
means
conversations
go
something
like
client
initiates
connection
serverserver
accepts
connectionclient
makes
requestserver
sends
response
single
request
response
sides
close
connection
though
performance
optimizations
available
let
client
specify
connection
kept
open
example
client
knows
needs
just
web
page's
text
also
several
images
server
purposes
stick
single
request
response
per
connection
python
programs
can
make
requests
parse
responses
requires
us
know
little
bit
format
http
requests
come
flavors
common
called
get
means
client
like
get
resource
web
page
image
etc
server
see
alternatives
later
find
need
get
request
http
1
1
looks
like
get
thornton
ics32
codeexamples
exceptionalcontrolflow
oops
py
http
1
1
host
www
ics
uci
edu
first
line
get
request
begins
word
get
followed
web
resource
want
download
part
url
follows
protocol
host
finally
followed
http
1
1
way
indicate
protocol
expect
using
conversation
second
line
subsequent
lines
called
headers
allow
us
specify
variety
supplementary
information
server
can
use
figure
send
us
response
case
included
just
one
header
called
host
specifies
name
ip
address
host
think
connecting
useful
case
machine
multiple
names
one
web
site
served
machine
generally
included
http
requests
additional
headers
include
specifying
browser
version
used
example
server
can
send
back
different
output
small
sized
screen
like
iphone
larger
sized
screen
like
laptop
desktop
variety
performance
optimizations
available
using
putty
windows
telnet
mac
connect
www
ics
uci
edu
port
80
try
sending
text
plus
blank
line
following
server
will
know
headers
get
back
response
much
like
one
details
left
brevity
http
1
1
200
ok
date
mon
11
feb
2013
02
35
23
gmt
server
apache
2
2
15
centos
content
length
435
content
type
text
plain
charset
utf
8
oops
py
ics
32
winter
2013
code
example
name
'
main
'
first
line
response
indicates
server
agrees
http
1
1
conversation
http
1
1
part
followed
called
status
code
case
200
reason
phrase
case
ok
forty
status
codes
defined
part
http
1
1
standard
two
common
ones
200
ok
means
everything
went
planned
server's
way
saying
okay
cool
web
page
asked
404
found
means
server
page
asked
download
ever
seen
404
show
browser
travels
around
web
http
status
code
geekspeak
web
page
exist
first
line
response
followed
headers
just
first
line
request
server
determines
headers
send
details
numerous
list
included
interesting
ones
example
date
date
time
response
generated
server
specifies
type
server
run
version
writing
ics
web
server
running
version
2
2
15
server
called
apache
quite
common
web
content
length
specifies
length
bytes
content
will
sent
back
allows
client
know
content
ended
content
type
specifies
kind
content
sent
back
web
page
text
file
audio
video
etc
browsers
respond
content
type
deciding
content
web
pages
shown
browser
video
often
displayed
video
plugin
external
media
player
etc
browser
sure
content
generally
just
asks
want
save
file
somewhere
hard
drive
last
header
blank
line
followed
desired
content
case
contents
file
oops
py
linked
one
code
examples
interested
full
details
http
specification
can
found
feel
obligated
read
unless
interested
part
course
want
get
idea
complexity
level
http
quick
want
find
library
implements
complexity
us
take
quick
look
note
one
main
authors
specification
roy
fielding
completing
ph
uci
urllib
request
module
python
standard
library
unlike
protocols
implemented
course
fairly
straightforward
sequence
needed
sent
client
server
vice
versa
http
anything
simple
used
everything
fetching
simple
web
page
implementing
guts
conversations
happening
behind
scenes
use
full
featured
web
sites
like
gmail
even
allowing
non
browsers
interact
web
data
programs
can
send
tweets
via
twitter
certainly
implement
http
conversation
using
techniques
seen
far
opening
socket
connection
server's
port
80
constructing
sending
get
request
parsing
response
complex
task
order
job
right
need
implement
entire
specification
weighs
printed
114
pages
happily
http
support
something
fundamental
needs
many
programmers
many
programming
language
libraries
include
http
support
python
exception
python's
library
includes
number
modules
implement
different
parts
http
specification
main
trick
understand
module
need
given
circumstance
job
lecture
simple
just
wanted
download
contents
single
web
page
python
program
given
url
task
project
3
similar
given
url
allows
ask
yahoo
set
stock
quotes
just
want
download
stock
quotes
complex
interactions
require
complex
tools
interactions
needed
thus
far
simplest
ones
simplest
part
library
will
suffice
module
called
urllib
request
urllib
request
module
one
function
interested
urllib
request
urlopen
looking
documentation
reveals
many
details
need
know
want
download
web
page
using
get
request
downloading
one
page
can
done
interpreter
just
import
urllib
request
response
urllib
request
urlopen
'http
www
ics
uci
edu
thornton
ics32
codeexamples
exceptionalcontrolflow
oops
py'
urlopen
function
returns
object
called
httpresponse
provides
useful
attributes
methods
important
read
method
retrieves
content
response
contents
web
page
asked
returns
bytes
object
containing
contents
continuing
previous
example
interpreter
reading
content
response
data
following
headers
data
response
read
data
comes
back
bytes
object
opposed
string
data
b'
oops
py
ics
32
winter
2013
code
example
'
done
reading
response
close
response
close
can
decode
bytes
string
way
done
assuming
know
data
text
can
decoded
way
way
can
absolutely
sure
use
information
http
response
headers
particularly
content
type
header
beyond
scope
example
string
data
data
decode
encoding
'utf
8'
will
give
us
single
string
containing
data
string
data
oops
py
ics
32
winter
2013
code
example
'
can
split
string
lines
using
str
splitlines
method
str
split
will
work
str
splitlines
automatically
handles
differences
line
endings
operating
systems
windows
uses
'
n'
mac
unix
linux
use
'
n'
lines
string
data
splitlines
will
give
us
list
strings
string
one
line
text
lines
'
oops
py'
'
'
'
ics
32
winter
2013'
'
code
example'
'
'
code
link
short
program
asks
user
type
url
downloads
contents
url
prints
console
using
techniques
demonstrated
download
url
py
