
summary netgames 04 papers 
implementation
service
platform
online
games
shaikh
et
al
provision
cloud
infrastructure
hosting
games
bot
sleeps
perdiodically
reduce
cpu
load
instantiate
bots
bots
connect
game
server
according
poisson
process
mean
inter
arrival
time
1
£f
1s
tio
polls
game
servers
regular
intervals
cpu
load
using
snmp
using
raw
cpu
leads
occasional
provisionning
higher
costs
using
moving
average
smooth
cpu
estimate
misses
cpu
peaks
may
result
inefficient
qos
players
since
player
load
follows
daily
weekly
platterns
possible
anticipate
peaks
case
provision
slightly
ahead
peak
keep
smoothed
metric
relevant
metrics
cpu
slack
time
unused
time
iteration
server
loop
zoned
federation
game
servers
peer
peer
approach
iimura
et
al
dht
implementation
pastry
uses
sha1
map
game
zone
owner
runner
experimentation
296
p3
1ghz
512mb
connected
single
100mbps
switch
295
machines
run
100
1
000
members
single
machine
runs
zone
owner
time
taken
update
state
everybody
exponential
number
zone
members
average
50ms
500
members
100ms
700
200ms
1
000
spreading
users
uniformly
multiple
zones
single
zone
owner
reduces
load
scalable
peer
peer
networked
virtual
environment
hu
liao
scalability
implies
nodes
can
added
removed
fly
keeping
whole
system
functional
ultimate
p2p
goal
adding
node
increase
overall
system
resources
without
consuming
centralized
resources
cut
virtual
space
voronoi
cells
user
center
cell
deterministc
algorithm
user
connects
least
vornoi
neighbors
min
3
average
6
max
1
users
area
interest
time
user
joins
moves
leaves
game
neighbors
recompute
voronoi
diagram
