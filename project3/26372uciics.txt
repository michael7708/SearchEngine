sixth homework 
sixth homework 
informatics
42
winter
2012
david
kay
uc
irvine
sixth
homework
get
work
checked
signed
classmate
show
ta
lab
wednesday
february
22
since
monday
holiday
write
regular
expressions
match
following
patterns
note
natural
language
descriptions
will
certainly
ambiguous
disambiguate
see
fit
note
decisions
made
cases
may
able
match
described
set
completely
fine
make
simplifying
assumptions
comma
separated
dollars
cents
amounts
1
234
56
17
differences
expression
one
class
cents
portion
required
leading
zeroes
allowed
lines
empty
blanks
caret
matches
start
line
dollar
sign
matches
end
line
email
addresses
urls
html
anchor
tags
href
http
www
ics
uci
edu
kay
lines
containing
exactly
one
integer
perhaps
surrounded
non
numeric
characters
feel
free
write
fsas
languages
like
practice
grammar
set
rules
can
generate
strings
formal
language
right
form
grammar
programming
language
can
used
software
produce
automatically
part
compiler
language
grammar
backus
naur
form
bnf
notation
describes
arithmetic
expressions
expression
real
variable
expression
expression
operator
expression
variable
expression
real
positive
real
positive
real
positive
real
integer
part
integer
part
integer
part
integer
part
digit
digit
integer
part
variable
letter
digit
0
1
2
3
4
5
6
7
8
9
letter
operator
1
following
expressions
can
generated
grammar
others
can
indicate
valid
expressions
easiest
way
might
photocopy
page
print
line
version
circle
valid
expressions
2
using
grammar
generate
four
expressions
list
expression
involve
applying
least
ten
rules
expression
show
derivation
tree
expression
root
terminal
symbols
without
angle
brackets
leaves
3
give
three
arithmetic
expressions
syntactically
valid
python
generated
grammar
4
modify
grammar
allow
multi
letter
variable
names
requires
changing
one
existing
rules
read
problem
description
lab
random
sentence
generator
labs
use
already
existing
program
simulates
visitors
amusement
park
read
problem
description
amusement
park
simulator
noting
essential
memorize
every
detail
task
build
scratch
enhance
various
ways
though
need
become
familiar
existing
code
will
supply
written
david
kay
winter
2005
modified
winter
2006
regular
expression
exercise
written
david
kay
winter
2001
bnf
grammar
exercise
written
david
kay
spring
1999
reorganized
david
kay
winter
2012
