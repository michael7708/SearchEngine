cosmos summer 2006 lab exercise 3 finding genes 
lab exercise 3 finding genes 
cosmos
summer
2006
index
alex
cosmos
summer
2006
lab
exercise
3
finding
genes
today's
exercise
yesterday
lecture
discussed
detail
algorithm
recipe
set
steps
solving
problem
finding
candidate
genes
strand
dna
previous
lab
exercise
previous
lab
explored
find
start
codon
indicates
beginning
possible
candidate
gene
solution
problem
forms
basis
solution
problem
finding
candidate
genes
today
like
implement
algorithm
talked
lecture
yesterday
finding
candidate
genes
pair
optional
always
welcome
encouraged
pair
though
optional
prefer
work
alone
can
pair
work
way
previously
one
computer
shared
two
one
person
driving
watching
keyboard
changing
hands
least
every
fifteen
minutes
one
change
week
last
week
python
programs
wrote
operated
assumption
dna
strands
represented
sequence
lowercase
letters
'a
'
'c
'
't
'
'g
'
reasonable
representation
nothing
wrong
however
many
real
databases
biologists
store
dna
information
represent
dna
strands
using
sequences
uppercase
letters
instead
since
gradually
working
toward
able
write
programs
process
sequences
dna
stored
real
databases
good
idea
us
start
writing
programs
expect
uppercase
letters
instead
now
way
able
reuse
programs
later
week
start
reading
input
external
sources
note
seems
obvious
us
'a'
meaning
obvious
python
far
python
concerned
'a'
'a'
different
characters
compare
character
'a'
like
'a'
comparison
will
return
false
c's
value
'a'
rest
course
use
uppercase
letters
denote
nucleotides
amino
acids
today's
problems
course
today's
lab
session
like
work
following
problems
write
program
finds
candidate
genes
single
dna
strand
represented
sequence
uppercase
letters
'a
'
'c
'
't
'
'g
'
purposes
define
candidate
gene
sequence
codons
beginning
start
codon
'atg'
ending
stop
codon
'taa
'
'tag
'
'tga'
least
20
codons
long
including
start
end
codons
candidate
gene
found
program
print
candidate
gene
found
well
position
sequence
'atg'
begins
number
codons
candidate
gene
remember
reporting
starting
position
unlike
python
biologists
count
1
rather
0
using
program
wrote
lecture
find
reverse
complement
dna
strand
solution
previous
problem
write
new
program
input
one
strand
dna
finds
candidate
genes
appear
either
given
strand
reverse
complement
behave
similarly
previous
program
finds
candidate
gene
say
either
candidate
gene
found
given
strand
candidate
gene
found
reverse
strand
link
program
wrote
lecture
yesterday
find
reverse
complement
dna
strand
write
program
uses
dictionary
translate
dna
strand
sequence
amino
acids
amino
acid
represented
capital
letter
shown
table
use
character
'
'
exclamation
mark
indicate
amino
acids
marked
end
table
testing
solutions
one
challenges
writing
programs
knowing
whether
work
done
common
way
approach
problem
test
various
inputs
see
whether
results
match
expectations
rather
providing
test
data
today
work
designing
test
data
verify
programs
work
examples
things
think
testing
candidate
gene
finder
happens
one
atg
one
stop
codon
dna
strand
happens
multiple
candidate
genes
overlap
one
another
happens
multiple
candidate
genes
overlap
frame
atgcatg
second
atg
within
first
candidate
gene
appear
frame
codon
candidate
gene
happens
multiple
candidate
genes
overlap
frame
happens
candidate
genes
course
staff
glad
help
design
test
data
sure
approach
emphasis
general
making
data
randomly
idea
think
data
stands
good
chance
finding
mistake
program
one
fun
enjoy
solutions
will
appear
web
site
within
next
day
originally
written
alex
thornton
summer
2006
