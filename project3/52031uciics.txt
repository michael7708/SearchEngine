
topkheap 
id
topkheap
5772
2010
10
19
07
15
28z
abehm
copyright
2007
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
02
20
2008
author
rares
vernica
ifndef
topkheap
define
topkheap
include
include
include
include
common
src
tr1
local
include
util
src
querygroup
include
util
src
querygrams
include
util
src
misc
include
topkindex
ifndef
win32
timer
needed
win32
build
include
util
src
time
endif
include
util
src
debug
include
namespace
topk
namespace
heap
search
api
necessary
search
dll
visual
search
api
extern
float
nlongparam
struct
setnooperation
void
find
uint
return
0
void
end
return
0
bool
empty
return
true
inline
bool
greaterlen
range
range
return
end
begin
end
begin
inline
bool
greaterid
std
list
iterator
std
list
iterator
return
begin
begin
template
class
randomaccessiterator1
class
randomaccessiterator2
class
set
void
dodivideskip
const
randomaccessiterator1
data
const
randomaccessiterator2
weights
const
index
idx
const
query
que
indexquery
idxque
cand
topkbuf
set
checked
float
simmax
1
float
whtmin
std
numeric
limits
min
uint
thrmin
1
uint
thrchecked
std
numeric
limits
max
const
uint
batchiter
10
uint
nlists
idxque
lists
size
order
lists
length
idxque
lists
sort
greaterlen
compute
nlong
std
list
iterator
listlongest
idxque
lists
begin
uint
lenlongest
listlongest
end
listlongest
begin
uint
nlong
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
std
list
iterator
listsshortbeg
idxque
lists
begin
uint
0
nlong
listsshortbeg
build
heap
std
list
iterator
heap
new
std
list
iterator
nlists
uint
heapsz
0
std
list
iterator
ls
listsshortbeg
ls
idxque
lists
end
ls
heap
heapsz
ls
std
make
heap
heap
heap
heapsz
greaterid
min
heap
std
list
iterator
popped
uint
iter
0
heapsz
0
ifdef
debug
ifndef
win32
thrfreq
thrmin
endif
endif
pop
head
equal
ids
uint
id
heap
begin
uint
freq
0
heapsz
0
id
heap
begin
freq
popped
push
back
heap
std
pop
heap
heap
heap
heapsz
greaterid
freq
thrmin
nlong
checked
empty
checked
find
id
checked
end
freq
thrmin
lookup
long
lists
std
list
iterator
ls
idxque
lists
begin
ls
listsshortbeg
weights
ls
begin
whtmin
ls
begin
std
lower
bound
ls
begin
ls
end
id
ls
begin
ls
end
ls
begin
id
freq
ls
begin
ls
begin
ls
end
ls
idxque
lists
erase
ls
nlong
nlists
else
ls
else
ls
idxque
lists
erase
ls
nlong
nlists
freq
thrmin
good
result
time
start
float
sc
score
que
sim
que
str
data
id
dynamic
cast
que
sim
operator
que
sim
gramgen
getnumgrams
data
id
que
nograms
freq
weights
id
time
end
simtime
tms
stat
inc
simcomp
ifdef
debug
ifndef
win32
thrfreqsim
thrmin
endif
endif
sc
topkbuf
0
score
std
pop
heap
topkbuf
topkbuf
que
topkbuf
que
1
cand
id
sc
std
push
heap
topkbuf
topkbuf
que
whtmin
scoreinversewht
topkbuf
0
score
simmax
advance
popped
lists
std
list
iterator
const
iterator
lsp
popped
begin
lsp
popped
end
lsp
std
list
iterator
ls
lsp
ls
begin
ls
begin
ls
end
ls
listsshortbeg
listsshortbeg
idxque
lists
erase
ls
else
idxque
lists
erase
ls
nlists
else
heap
heapsz
ls
std
push
heap
heap
heap
heapsz
greaterid
popped
clear
else
pop
elements
heap
skip
nodes
heapsz
1
freq
thrmin
nlong
1
freq
popped
push
back
heap
std
pop
heap
heap
heap
heapsz
greaterid
pop
uint
idhead
heapsz
0
idhead
heap
begin
else
idhead
id
1
std
list
iterator
const
iterator
lsp
popped
begin
lsp
popped
end
lsp
std
list
iterator
ls
lsp
ls
begin
ls
begin
might
equal
top
heap
prevous
skip
popped
element
equal
current
top
heap
1
10
10
thr
3
10
1
popped
skip
one
element
skip
10
list
2
mover
ls
begin
std
lower
bound
ls
begin
ls
end
idhead
skip
ls
begin
ls
end
ls
listsshortbeg
listsshortbeg
idxque
lists
erase
ls
else
idxque
lists
erase
ls
nlists
else
heap
heapsz
ls
std
push
heap
heap
heap
heapsz
greaterid
popped
clear
topkbuf
0
score
std
numeric
limits
min
iter
batchiter
0
recompute
maximum
possible
weight
minimum
necessary
threshold
float
whtmax
weights
id
thrmin
que
sim
getnogramsmin
que
len
idx
nogramsmin
que
nograms
scoreinversesim
topkbuf
0
score
whtmax
std
numeric
limits
epsilon
uint
thrmax
std
min
thrchecked
1
nlists
thrmin
thrmax
whtmin
whtmax
output
breaking
output
thrmin
thrmax
thrmin
thrmax
output
whtmin
whtmax
whtmin
whtmax
output
thrmin
thrmin
output
thrmax
thrmax
output
whtmin
whtmin
output
whtmax
whtmax
output
thrmax
break
whtmin
whtmax
break
lenlongest
might
outdated
ok
uint
nlongnew
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
uint
idhead
heap
begin
nlongnew
nlong
recompute
nlong
advance
current
top
heap
long
lists
std
list
iterator
ls
idxque
lists
begin
ls
listsshortbeg
ls
begin
std
lower
bound
ls
begin
ls
end
idhead
ls
begin
ls
end
ls
idxque
lists
erase
ls
nlong
nlists
else
ls
reorder
lists
length
idxque
lists
sort
greaterlen
recompute
nlong
listlongest
idxque
lists
begin
lenlongest
listlongest
end
listlongest
begin
nlong
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
listsshortbeg
idxque
lists
begin
uint
0
nlong
listsshortbeg
rebuild
heap
heapsz
0
std
list
iterator
ls
listsshortbeg
ls
idxque
lists
end
ls
heap
heapsz
ls
std
make
heap
heap
heap
heapsz
greaterid
min
heap
output
heapsz
heapsz
delete
heap
template
class
randomaccessiterator1
class
randomaccessiterator2
class
set
void
dodivideskip
const
randomaccessiterator1
data
const
randomaccessiterator2
weights
const
index
idx
const
querygrams
que
indexquery
idxque
cand
topkbuf
set
checked
float
simmax
1
float
whtmin
std
numeric
limits
min
uint
thrmin
1
uint
thrchecked
std
numeric
limits
max
const
uint
batchiter
10
uint
nlists
idxque
lists
size
order
lists
length
idxque
lists
sort
greaterlen
compute
nlong
std
list
iterator
listlongest
idxque
lists
begin
uint
lenlongest
listlongest
end
listlongest
begin
uint
nlong
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
std
list
iterator
listsshortbeg
idxque
lists
begin
uint
0
nlong
listsshortbeg
build
heap
std
list
iterator
heap
new
std
list
iterator
nlists
uint
heapsz
0
std
list
iterator
ls
listsshortbeg
ls
idxque
lists
end
ls
heap
heapsz
ls
std
make
heap
heap
heap
heapsz
greaterid
min
heap
std
list
iterator
popped
uint
iter
0
heapsz
0
ifdef
debug
thrfreq
thrmin
endif
pop
head
equal
ids
uint
id
heap
begin
uint
freq
0
heapsz
0
id
heap
begin
freq
popped
push
back
heap
std
pop
heap
heap
heap
heapsz
greaterid
freq
thrmin
nlong
checked
empty
checked
find
id
checked
end
lookup
long
lists
std
list
iterator
ls
idxque
lists
begin
ls
listsshortbeg
weights
ls
begin
whtmin
ls
begin
std
lower
bound
ls
begin
ls
end
id
ls
begin
ls
end
ls
begin
id
freq
ls
begin
ls
begin
ls
end
ls
idxque
lists
erase
ls
nlong
nlists
else
ls
else
ls
idxque
lists
erase
ls
nlong
nlists
freq
thrmin
good
result
time
start
float
sc
score
que
sim
que
str
data
id
dynamic
cast
que
sim
operator
data
id
size
que
nograms
freq
weights
id
time
end
simtime
tms
stat
inc
simcomp
ifdef
debug
thrfreqsim
thrmin
endif
sc
topkbuf
0
score
std
pop
heap
topkbuf
topkbuf
que
topkbuf
que
1
cand
id
sc
std
push
heap
topkbuf
topkbuf
que
whtmin
scoreinversewht
topkbuf
0
score
simmax
advance
popped
lists
std
list
iterator
const
iterator
lsp
popped
begin
lsp
popped
end
lsp
std
list
iterator
ls
lsp
ls
begin
ls
begin
ls
end
ls
listsshortbeg
listsshortbeg
idxque
lists
erase
ls
else
idxque
lists
erase
ls
nlists
else
heap
heapsz
ls
std
push
heap
heap
heap
heapsz
greaterid
popped
clear
else
pop
elements
heap
skip
nodes
heapsz
1
freq
thrmin
nlong
1
freq
popped
push
back
heap
std
pop
heap
heap
heap
heapsz
greaterid
pop
uint
idhead
heap
begin
std
list
iterator
const
iterator
lsp
popped
begin
lsp
popped
end
lsp
std
list
iterator
ls
lsp
ls
begin
ls
begin
might
equal
top
heap
prevous
skip
popped
element
equal
current
top
heap
1
10
10
thr
3
10
1
popped
skip
one
element
skip
10
list
2
mover
ls
begin
std
lower
bound
ls
begin
ls
end
idhead
skip
ls
begin
ls
end
ls
listsshortbeg
listsshortbeg
idxque
lists
erase
ls
else
idxque
lists
erase
ls
nlists
else
heap
heapsz
ls
std
push
heap
heap
heap
heapsz
greaterid
popped
clear
topkbuf
0
score
std
numeric
limits
min
iter
batchiter
0
recompute
maximum
possible
weight
minimum
necessary
threshold
float
whtmax
weights
id
thrmin
que
sim
getnogramsmin
que
len
idx
nogramsmin
que
nograms
scoreinversesim
topkbuf
0
score
whtmax
std
numeric
limits
epsilon
uint
thrmax
std
min
thrchecked
1
nlists
ifdef
debug
thrmin
thrmax
whtmin
whtmax
output
breaking
output
thrmin
thrmax
thrmin
thrmax
output
whtmin
whtmax
whtmin
whtmax
output
thrmin
thrmin
output
thrmax
thrmax
output
whtmin
whtmin
output
whtmax
whtmax
output
nlists
nlists
output
que
len
que
len
output
idx
nogramsmin
idx
nogramsmin
output
que
nograms
que
nograms
output
scoreinversesim
scoreinversesim
topkbuf
0
score
whtmax
output
thrmax
break
whtmin
whtmax
break
lenlongest
might
outdated
ok
uint
nlongnew
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
uint
idhead
heap
begin
nlongnew
nlong
recompute
nlong
advance
current
top
heap
long
lists
std
list
iterator
ls
idxque
lists
begin
ls
listsshortbeg
ls
begin
std
lower
bound
ls
begin
ls
end
idhead
ls
begin
ls
end
ls
idxque
lists
erase
ls
nlong
nlists
else
ls
reorder
lists
length
idxque
lists
sort
greaterlen
recompute
nlong
listlongest
idxque
lists
begin
lenlongest
listlongest
end
listlongest
begin
nlong
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
listsshortbeg
idxque
lists
begin
uint
0
nlong
listsshortbeg
rebuild
heap
heapsz
0
std
list
iterator
ls
listsshortbeg
ls
idxque
lists
end
ls
heap
heapsz
ls
std
make
heap
heap
heap
heapsz
greaterid
min
heap
output
heapsz
heapsz
delete
heap
template
class
randomaccessiterator1
class
randomaccessiterator2
void
dodivideskipmulti
const
randomaccessiterator1
data
const
randomaccessiterator2
weights
const
index
idx
const
querygroup
quegrp
indexquery
idxque
cand
topkbufs
float
simmax
1
float
whtmin
std
numeric
limits
min
uint
thrmin
1
uint
thrchecked
std
numeric
limits
max
const
uint
batchiter
10
quegrp
uint
nlists
idxque
lists
size
uint
thrmins
new
uint
quegrp
thrmaxs
new
uint
quegrp
thrminmax
thrmin
float
whtmins
new
float
quegrp
std
fill
thrmins
thrmins
quegrp
thrmin
std
fill
thrmaxs
thrmaxs
quegrp
nlists
std
fill
whtmins
whtmins
quegrp
whtmin
std
tr1
unordered
set
notkcand
uint
0
quegrp
notkcand
insert
order
lists
length
idxque
lists
sort
greaterlen
compute
nlong
std
list
iterator
listlongest
idxque
lists
begin
uint
lenlongest
listlongest
end
listlongest
begin
uint
nlong
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
std
list
iterator
listsshortbeg
idxque
lists
begin
uint
0
nlong
listsshortbeg
build
heap
std
list
iterator
heap
new
std
list
iterator
nlists
uint
heapsz
0
std
list
iterator
ls
listsshortbeg
ls
idxque
lists
end
ls
heap
heapsz
ls
std
make
heap
heap
heap
heapsz
greaterid
min
heap
std
list
iterator
popped
uint
iter
0
heapsz
0
ifdef
debug
ifndef
win32
thrfreq
thrmin
uint
0
quegrp
thrsfreq
thrmins
endif
endif
pop
head
equal
ids
uint
id
heap
begin
uint
freq
0
heapsz
0
id
heap
begin
freq
popped
push
back
heap
std
pop
heap
heap
heap
heapsz
greaterid
freq
thrmin
nlong
freq
thrminmax
lookup
long
lists
std
list
iterator
ls
idxque
lists
begin
ls
listsshortbeg
weights
ls
begin
whtmin
ls
begin
std
lower
bound
ls
begin
ls
end
id
ls
begin
ls
end
ls
begin
id
freq
ls
begin
ls
begin
ls
end
ls
idxque
lists
erase
ls
nlong
nlists
else
ls
else
ls
idxque
lists
erase
ls
nlong
nlists
freq
thrmin
good
result
uint
0
quegrp
freq
thrmins
freq
0
added
pass
smoke
tests
removed
perf
simmetricgramcount
quegrp
sim
gramgen
quegrp
strs
data
id
0
float
sc
score
sim
weights
id
sc
topkbufs
0
score
std
pop
heap
topkbufs
topkbufs
quegrp
topkbufs
quegrp
1
cand
id
sc
std
push
heap
topkbufs
topkbufs
quegrp
topkbufs
0
score
std
numeric
limits
min
notkcand
erase
whtmins
scoreinversewht
topkbufs
0
score
simmax
0
whtmins
whtmin
whtmin
whtmins
set
whtmin
minium
whtmins
advance
popped
lists
std
list
iterator
const
iterator
lsp
popped
begin
lsp
popped
end
lsp
std
list
iterator
ls
lsp
ls
begin
ls
begin
ls
end
ls
listsshortbeg
listsshortbeg
idxque
lists
erase
ls
else
idxque
lists
erase
ls
nlists
else
heap
heapsz
ls
std
push
heap
heap
heap
heapsz
greaterid
popped
clear
else
pop
elements
heap
skip
nodes
heapsz
1
freq
thrmin
nlong
1
freq
popped
push
back
heap
std
pop
heap
heap
heap
heapsz
greaterid
pop
uint
idhead
heap
begin
std
list
iterator
const
iterator
lsp
popped
begin
lsp
popped
end
lsp
std
list
iterator
ls
lsp
ls
begin
ls
begin
might
equal
top
heap
prevous
skip
popped
element
equal
current
top
heap
1
10
10
thr
3
10
1
popped
skip
one
element
skip
10
list
2
mover
ls
begin
std
lower
bound
ls
begin
ls
end
idhead
skip
ls
begin
ls
end
ls
listsshortbeg
listsshortbeg
idxque
lists
erase
ls
else
idxque
lists
erase
ls
nlists
else
heap
heapsz
ls
std
push
heap
heap
heap
heapsz
greaterid
popped
clear
notkcand
empty
iter
batchiter
0
recompute
maximum
possible
weight
minimum
necessary
threshold
float
whtmax
weights
id
thrmin
thrmax
uint
0
quegrp
thrmins
quegrp
sim
getnogramsmin
quegrp
lens
idx
nogramsmin
quegrp
nosgrams
scoreinversesim
topkbufs
0
score
whtmax
std
numeric
limits
epsilon
thrmaxs
quegrp
sim
getnogramsmax
quegrp
lens
idx
nogramsmin
quegrp
nosgrams
scoreinversesim
topkbufs
0
score
whtmax
std
numeric
limits
epsilon
0
thrmins
thrmin
thrmin
thrmins
set
thrmin
min
thrmins
0
thrmins
thrminmax
thrminmax
thrmins
set
thrminmax
max
thrmins
uint
thrmax
std
min
thrchecked
1
nlists
thrmin
thrmax
whtmin
whtmax
output
breaking
output
thrmin
thrmax
thrmin
thrmax
output
whtmin
whtmax
whtmin
whtmax
output
thrmin
thrmin
output
thrmax
thrmax
output
whtmin
whtmin
output
whtmax
whtmax
output
thrmax
break
whtmin
whtmax
break
lenlongest
might
outdated
ok
uint
nlongnew
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
uint
idhead
heap
begin
nlongnew
nlong
recompute
nlong
advance
current
top
heap
long
lists
std
list
iterator
ls
idxque
lists
begin
ls
listsshortbeg
ls
begin
std
lower
bound
ls
begin
ls
end
idhead
ls
begin
ls
end
ls
idxque
lists
erase
ls
nlong
nlists
else
ls
reorder
lists
length
idxque
lists
sort
greaterlen
recompute
nlong
listlongest
idxque
lists
begin
lenlongest
listlongest
end
listlongest
begin
nlong
static
cast
floor
thrmin
nlongparam
log2
lenlongest
1
listsshortbeg
idxque
lists
begin
uint
0
nlong
listsshortbeg
rebuild
heap
heapsz
0
std
list
iterator
ls
listsshortbeg
ls
idxque
lists
end
ls
heap
heapsz
ls
std
make
heap
heap
heap
heapsz
greaterid
min
heap
delete
thrmins
delete
thrmaxs
delete
whtmins
delete
heap
output
heapsz
heapsz
template
class
randomaccessiterator1
class
randomaccessiterator2
void
gettopkcand
const
randomaccessiterator1
data
const
randomaccessiterator2
weights
const
index
idx
const
query
que
indexquery
idxque
cand
topkbuf
std
fill
topkbuf
topkbuf
que
cand
setnooperation
checked
float
thrmin
0
que
threshold
0
thrmin
que
sim
getnogramsmin
que
len
idx
nogramsmin
que
nograms
que
threshold
output
gettopkcand
thrque
que
threshold
output
gettopkcand
thrmin
thrmin
dodivideskip
data
weights
idx
que
idxque
topkbuf
checked
1
std
numeric
limits
min
thrmin
std
sort
heap
topkbuf
topkbuf
que
template
class
randomaccessiterator1
class
randomaccessiterator2
void
gettopkcand
const
randomaccessiterator1
data
const
randomaccessiterator2
weights
const
index
idx
const
querygrams
que
indexquery
idxque
cand
topkbuf
std
fill
topkbuf
topkbuf
que
cand
setnooperation
checked
dodivideskip
data
weights
idx
que
idxque
topkbuf
checked
std
sort
heap
topkbuf
topkbuf
que
template
class
randomaccessiterator1
class
randomaccessiterator2
class
outputiterator
void
gettopk
const
randomaccessiterator1
data
const
randomaccessiterator2
weights
const
index
idx
const
query
que
indexquery
idxque
outputiterator
topk
cand
topkbuf
new
cand
que
gettopkcand
data
weights
idx
que
idxque
topkbuf
uint
0
que
topk
topkbuf
id
delete
topkbuf
template
class
randomaccessiterator1
class
randomaccessiterator2
class
outputiterator
void
gettopk
const
randomaccessiterator1
data
const
randomaccessiterator2
weights
const
index
idx
const
querygrams
que
indexquery
idxque
outputiterator
topk
cand
topkbuf
new
cand
que
gettopkcand
data
weights
idx
que
idxque
topkbuf
uint
0
que
topk
topkbuf
id
delete
topkbuf
template
class
randomaccessiterator1
class
randomaccessiterator2
class
outputcontainer
void
gettopks
const
randomaccessiterator1
data
const
randomaccessiterator2
weights
const
index
idx
const
querygroup
quegrp
indexquery
idxque
outputcontainer
topks
vector
uint
cand
topkbufs
new
cand
quegrp
uint
0
quegrp
topkbufs
new
cand
quegrp
std
fill
topkbufs
topkbufs
quegrp
cand
dodivideskipmulti
data
weights
idx
quegrp
idxque
topkbufs
uint
0
quegrp
std
sort
heap
topkbufs
topkbufs
quegrp
uint
0
quegrp
topks
topkbufs
id
delete
topkbufs
delete
topkbufs
endif
