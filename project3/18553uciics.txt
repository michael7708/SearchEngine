ics 160e ece 144 syllabus 
course syllabus 
syllabus
ics
160e
eecs
114
engineering
data
structures
algorithms
michael
goodrich
http
www
ics
uci
edu
goodrich
teach
ics160e
office
hours
10
00am
11
00am
appointments
request
catalog
description
design
efficient
algorithms
practical
data
structures
engineering
applications
models
computation
np
completeness
prerequisites
eecs
40
ability
program
java
coursework
coursework
will
consist
weekly
homeworks
two
midterms
comprehensive
final
exam
overall
grade
will
determined
follows
5
lecture
attendance
20
written
homework
assignments
20
programming
assignments
20
two
midterms
10
35
final
group
work
written
homeworks
permitted
student
must
list
collaborators
writing
problem
student
turns
solution
without
listing
others
helped
produce
solution
act
will
considered
cheating
plagarism
programming
projects
must
100
individual
efforts
submitted
code
will
subjected
rigorous
similarity
checking
system
uc
berkeley
known
moss
non
negligible
similarities
different
student
submissions
will
considered
cheating
students
even
show
code
students
addition
procedures
ics
cheating
policy
students
caught
cheating
programming
projects
will
letter
placed
permanent
record
uci
minimum
receive
score
zero
points
work
question
late
homework
assignments
projects
will
accepted
exam
policy
exam
performance
must
100
individual
effort
collaboration
allowed
exams
collaboration
copying
exams
will
considered
cheating
addition
procedures
ics
cheating
policy
students
caught
cheating
exams
will
given
failing
grade
class
letter
describing
incident
placed
permanent
uci
record
text
required
goodrich
tamassia
algorithm
design
john
wiley
sons
isbn
0
471
38365
1
add
drop
policy
drops
will
accepted
first
midterm
drop
card
signed
coursework
will
graded
seventh
week
classes
withdrawals
will
allowed
petition
documented
extenuating
circumstances
tentative
schedule
week
1
introduction
algorithm
experimentation
stacks
queues
vectors
lists
week
2
trees
priority
queues
heaps
week
3
dictionaries
binary
search
trees
week
4
midterm
hash
tables
skip
lists
week
5
divide
conquer
merge
sort
quick
sort
sorting
lower
bound
radix
sort
week
6
selection
greedy
method
dynamic
programming
week
7
midterm
ii
graphs
graph
traversal
depth
first
search
week
8
weighted
graphs
shortest
paths
week
9
minimum
spanning
trees
week
10
np
completeness
approximation
algorithms
copyright
2005
michael
goodrich
lectures
students
prohibited
selling
paid
taking
notes
course
person
commercial
firm
without
express
written
permission
professor
teaching
course
