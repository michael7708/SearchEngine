david eppstein publications 
ieee symp foundations computer science focs 
david
eppstein
publications
ieee
symp
foundations
computer
science
focs
program
committee
34th
symposium
1993
hypertext
bibliography
project
mit
also
includes
listings
focs
papers
speeding
dynamic
programming
eppstein
galil
giancarlo
29th
ieee
symp
foundations
comp
sci
white
plains
new
york
1988
pp
488
496
worksh
algorithms
molecular
genetics
bethesda
maryland
1988
tech
rep
cucs
379
88
computer
science
dept
columbia
university
1988
appeared
efficient
algorithms
applications
molecular
biology
int
advanced
workshop
sequences
positano
italy
1988
sequences
combinatorics
compression
security
transmission
capocelli
ed
springer
verlag
1990
pp
59
74
focs
positano
versions
paper
merged
results
dynamic
program
used
rna
secondary
structure
prediction
raffaele's
sequence
comparison
bethesda
talk
tr
version
used
longer
title
speeding
dynamic
programming
application
computation
rna
structure
included
rna
result
used
mild
convexity
assumption
certain
costs
save
two
orders
magnitude
total
time
work
incited
boom
computational
biology
within
theory
community
still
going
strong
rna
results
quickly
improved
log
factor
aggarwal
et
al
focs
never
made
journal
paper
bibtex
positano
focs
citations
citations
efficient
algorithms
mit
hypertext
bibliography
citeseer
provably
good
mesh
generation
bern
eppstein
gilbert
31st
ieee
symp
foundations
comp
sci
st
louis
missouri
1990
pp
231
241
comp
sys
sci
48
384
409
1994
special
issue
31st
focs
paper
construct
triangulations
point
sets
polygons
using
quadtrees
add
extra
vertices
input
result
can
guarantee
triangles
angles
bounded
away
zero
using
number
triangles
within
constant
optimal
first
paper
provide
simultaneous
bounds
mesh
element
quality
mesh
complexity
form
therefore
first
provide
finite
element
mesh
generation
algorithms
guarantee
robustness
algorithm
unexpected
input
geometries
quality
output
paper
also
use
quadtrees
triangulate
planar
point
sets
angles
non
obtuse
using
linearly
many
triangles
triangulate
higher
dimensional
point
sets
small
solid
angles
number
simplices
within
constant
optimal
also
can
augment
higher
dimensional
point
set
delaunay
triangulation
linear
complexity
later
follow
work
showed
technique
can
also
used
find
triangulation
whose
edges
total
length
within
constant
factor
optimal
bern
mitchell
ruppert
showed
alternative
methods
can
used
triangulate
polygon
without
obtuse
angles
see
faster
circle
packing
application
nonobtuse
triangulation
algorithmic
improvement
technique
additionally
bern
chew
ruppert
showed
point
set
higher
dimensions
can
triangulated
nonobtuse
simplices
bern
surveyed
related
results
paper
mesh
generation
optimal
triangulation
bibtex
citations
preliminary
copy
journal
version
mit
hypertext
bibliography
citeseer
acm
dl
jcss
dynamic
three
dimensional
linear
programming
eppstein
tech
rep
91
53
ics
uci
1991
32nd
ieee
symp
foundations
comp
sci
san
juan
puerto
rico
1991
pp
488
494
orsa
computing
4
360
368
1992
special
issue
computational
geometry
uses
dobkin
kirkpatrick
hierarchies
perform
linear
programming
queries
intersection
several
convex
polyhedra
maintaining
collection
halfspaces
several
subsets
represented
polyhedra
leads
algorithms
dynamic
linear
program
updates
change
set
constraints
fully
dynamic
results
largely
subsumed
agarwal
matou
ek
paper
also
includes
polylog
time
results
semi
online
problems
uses
give
fast
randomized
algorithm
planar
2
center
problem
later
improved
various
authors
recently
faster
construction
planar
two
centers
re
uses
data
structures
described
bibtex
citations
citeseer
acm
dl
dynamic
algorithms
half
space
reporting
proximity
problems
geometric
minimum
spanning
trees
agarwal
eppstein
matou
ek
33rd
ieee
symp
foundations
comp
sci
pittsburgh
1992
pp
80
89
conference
paper
merged
results
dynamic
euclidean
minimum
spanning
trees
results
co
authors
nearest
neighbors
halfspace
range
searching
bibtex
citations
sparsification
technique
speeding
dynamic
graph
algorithms
eppstein
galil
italiano
nissenzweig
33rd
ieee
symp
foundations
comp
sci
pittsburgh
1992
pp
60
69
tech
rep
rc
19272
83907
ibm
1993
tech
rep
cs96
11
univ
ca'
foscari
di
venezia
oct
1996
acm
44
5
669
696
1997
uses
divide
conquer
edge
set
graph
together
idea
replacing
subgraphs
sparser
certificates
make
various
dynamic
algorithms
fast
dense
graphs
sparse
graphs
applications
include
random
generation
spanning
trees
well
finding
minimum
weight
spanning
trees
given
parameter
bibtex
citations
mit
hypertext
bibliography
acm
dl
finding
shortest
paths
eppstein
35th
ieee
symp
foundations
comp
sci
santa
fe
1994
pp
154
165
tech
rep
94
26
ics
uci
1994
siam
computing
28
2
652
673
1998
paper
presents
algorithm
finds
multiple
short
paths
connecting
two
terminals
graph
allowing
repeated
vertices
edges
paths
constant
time
per
path
preprocessing
stage
dominated
single
source
shortest
path
computation
paths
finds
shortest
graph
parameter
given
input
algorithm
shortest
paths
problem
many
important
applications
finding
alternative
solutions
geographic
path
planning
problems
network
routing
hypothesis
generation
computational
linguistics
sequence
alignment
metabolic
pathway
finding
bioinformatics
although
many
papers
shortest
paths
problem
one
become
frequently
cited
application
areas
additionally
marks
boundary
theoretical
study
problem
prior
theoretical
work
largely
concerned
quickly
problem
solved
line
research
closed
optimal
time
bounds
paper
subsequent
work
focused
instead
devising
efficient
algorithms
complex
alternative
formulations
problem
avoid
repeated
vertices
shortcomings
alternative
paths
produced
formulation
bibtex
full
paper
citations
graehl
implementation
jim
nez
marzal
implementations
shibuya
implementation
martins
implementation
citeseer
tr
'94
sjc
'98
acm
dl
3
coloring
time
1
3446n
mis
algorithm
beigel
eppstein
tech
rep
95
033
electronic
coll
computational
complexity
1995
36th
ieee
symp
foundations
comp
sci
1995
pp
444
453
dimacs
worksh
faster
exact
solutions
np
hard
problems
2000
speeds
3
coloring
solving
harder
problem
constraint
satisfaction
variable
can
take
one
three
values
constraint
forbids
pair
variable
assignments
detailed
solution
involves
several
long
hairy
case
analyses
similar
methods
apply
also
3
list
coloring
3
edge
coloring
3
sat
3
sat
algorithm
fixed
parameter
tractible
polynomial
time
number
3
variable
clauses
log
merged
3
coloring
time
1
3289
journal
version
bibtex
citations
dimacs
abstract
slides
citeseer
parametric
kinetic
minimum
spanning
trees
agarwal
eppstein
guibas
henzinger
39th
ieee
symp
foundations
comp
sci
1998
pp
596
605
describe
algorithms
maintaining
minimum
spanning
tree
graph
edge
weights
piecewise
linear
functions
time
may
change
unpredictably
solve
problem
time
n2
3
polylog
per
combinatorial
change
tree
general
graphs
time
n1
4
polylog
per
combinatorial
change
tree
planar
graphs
bibtex
focs
'98
talk
slides
citations
citeseer
acm
dl
setting
parameters
example
eppstein
arxiv
cs
ds
9907001
40th
ieee
symp
foundations
comp
sci
1999
pp
309
318
siam
computing
32
3
643
653
2003
introduce
class
inverse
parametric
optimization
problems
one
given
parametric
optimization
problem
desired
optimal
solution
task
determine
parameter
values
lead
given
solution
use
low
dimensional
linear
programming
geometric
sampling
techniques
solve
problems
minimum
spanning
trees
shortest
paths
optimal
subgraph
problems
discuss
applications
multicast
routing
vehicle
path
planning
resource
allocation
board
game
programming
bibtex
citations
acm
dl
focs
acm
dl
sjc
conferences
publications
david
eppstein
theory
group
inf
comp
sci
uc
irvine
semi
automatically
filtered
common
source
file
