deliverable 3 design 
architecture design 
architecture
module
specifications
design
discussed
class
substantial
flexibility
choosing
specific
form
content
deliverables
list
items
included
third
deliverable
due
date
tbd
document
contents
introduction
expand
introduction
discuss
specific
approaches
design
system
understanding
will
basically
original
document
make
sure
describes
steps
actions
took
understand
technology
software
make
changes
section
add
text
describing
change
necessary
accurately
reflects
new
understanding
understanding
changed
section
need
different
project
plan
will
iterative
expansion
previous
submission
expand
project
plan
represent
accomplished
work
far
expand
task
network
work
breakdown
structure
level
detail
needed
complete
task
based
work
done
revise
estimates
much
team
can
accomplish
deliver
make
changes
add
text
describing
change
necessary
will
improve
ability
team
accomplish
work
proposed
requirements
will
basically
previous
document
requirements
changed
added
deleted
make
explicit
describe
requirement
changed
added
deleted
customer
developer
etc
make
sure
requirements
meet
objectives
completeness
understandbility
utility
ambiguity
consistency
requirements
changed
section
may
identical
submitted
earlier
architecture
module
specifications
architecture
overview
architectural
style
style
architecture
adopt
provide
reference
defining
document
system
architecture
overview
place
one
great
diagram
shows
system
built
might
want
use
one
diagram
show
different
abstractions
design
data
flow
view
layers
abstraction
view
os
process
view
component
narrative
subsystem
means
major
limitations
current
design
modules
objectives
list
objects
within
system
module
object
provide
class
specification
name
definition
narrative
comment
works
object's
apis
using
java
terminology
public
private
protected
data
state
keep
variables
access
fit
inheritance
uses
heirarchy
constraints
constraints
object
module
cardinality
many
will
useful
diagrams
uses
composed
api's
class
category
diagrams
design
class
diagrams
useful
diagrams
design
object
scenario
pick
one
object
module
show
complete
implementation
detail
key
mechanism
file
structure
global
data
will
objects
modules
kept
sub
directories
makefiles
etc
requirements
cross
reference
objects
modules
satisfy
requirements
make
table
make
table
make
complete
consistent
testing
plan
will
test
demonstration
plan
will
demonstrate
5
documentation
list
documents
developed
phase
project
reference
documents
list
major
sources
information
will
using
remainder
project
