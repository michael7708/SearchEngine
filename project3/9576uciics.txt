ics 223 syllabus winter 2003 
ics 280 
information
computer
science
223
software
architectures
offered
ics
280g
wq
2003
winter
quarter
2003
location
cs
253
need
map
tuesday
thursday
2
00
3
20
course
code
36695
last
modified
january
28
2003
new
january
28
2003
bob
monroe's
tech
report
armani
now
available
recommend
reading
january
23
2003
debi's
slides
endnote
usage
now
available
january
20
2003
eric's
slides
last
thursday
now
available
see
schedule
url
january
16
2003
assignment
2
made
email
deleted
page
january
9
2003
posted
haig
krikorian's
slides
note
also
correct
url
software
architecture
website
http
www
isr
uci
edu
projects
swarch
keynote
talk
straw
'01
workshop
available
talk
architectures
1999
using
parts
class
today
talk
refined
focused
bit
talk
gave
jpl
using
slides
well
now
url
perry
wolf
paper
convenience
see
paper
list
overview
textbooks
schedule
assignments
academic
dishonesty
instructor
professor
richard
taylor
electronic
mail
taylor
ics
uci
edu
office
ics2
203
office
phone
949
824
6429
hours
tuesday
thursday
3
30
4
30pm
please
make
appointments
email
however
order
guarantee
meeting
fax
949
824
1715
mailing
address
department
informatics
school
information
computer
science
university
california
irvine
irvine
california
92697
3425
overview
prerequisite
knowledge
uci
catalog
223
software
architecture
4
study
concepts
representation
techniques
development
methods
tools
architecture
centric
software
engineering
topics
include
domain
specific
software
architectures
architectural
styles
architecture
description
languages
software
connectors
dynamism
architectures
following
quote
neno
medvidovic
works
class
software
architecture
become
area
intense
research
software
engineering
community
number
architecture
modeling
notations
support
tools
well
new
architectural
styles
emerged
focus
architecture
based
software
development
shifted
lines
code
coarser
grained
building
blocks
overall
interconnection
structure
explicit
focus
architecture
shown
tremendous
potential
improve
current
state
art
software
development
alleviate
many
problems
course
will
expose
concepts
principles
state
art
methods
software
architectures
including
domain
specific
software
architectures
dssa
architectural
styles
architecture
description
languages
adl
software
connectors
dynamism
architectures
architecture
based
testing
analysis
process
studying
concepts
will
make
explicit
boundaries
field
discuss
relationship
areas
software
engineering
specifically
requirements
design
including
object
oriented
design
related
notations
uml
implementation
course
will
also
examine
practical
applicability
architecture
research
specifically
relationship
work
software
reuse
component
interoperability
platforms
corba
javabeans
com
dcom
textbooks
variety
textbooks
available
including
mary
shaw
david
garlan
software
architecture
perspectives
emerging
discipline
prentice
hall
1996
paul
clements
et
al
documenting
software
architectures
views
beyond
addison
wesley
2002
software
architecture
system
design
development
maintenance
edited
jan
bosch
morven
gentelman
christine
hofmeister
juha
kuusela
kluwer
academic
publishers
www
wkap
nl
required
even
ordered
optional
copies
primary
reading
material
will
conference
journal
articles
first
cut
reading
list
will
definitely
modified
perry
wolf
foundations
study
software
architectures
acm
sigsoft
software
engineering
notes
october
1992
kazman
distributed
flight
simulation
challenge
software
architecture
technical
report
university
waterloo
kruchten
software
architect
software
architecture
team
1st
working
ifip
conference
software
architectures
san
antonio
tx
february
1999
parnas
criteria
used
decomposing
systems
modules
communications
acm
december
1972
korson
mcgregor
understanding
object
oriented
unifying
paradigm
communications
acm
september
1990
kruchten
mommy
software
architectures
come
1st
international
workshop
architectures
software
systems
seattle
wa
april
1995
medvidovic
taylor
classification
comparison
framework
software
architecture
description
languages
ieee
transactions
software
engineering
january
2000
luckham
vera
event
based
architecture
definition
language
ieee
transactions
software
engineering
september
1995
medvidovic
et
al
language
environment
architecture
based
software
development
evolution
21st
international
conference
software
engineering
los
angeles
ca
may
1999
tracz
dssa
domain
specific
software
architecture
pedagogical
example
acm
sigsoft
software
engineering
notes
july
1995
perry
generic
descriptions
product
line
architectures
2nd
international
workshop
development
evolution
software
architectures
product
families
ares
ii
las
palmas
de
gran
canaria
spain
february
1998
fielding
software
architectural
styles
network
based
applications
unpublished
manuscript
june
1999
hauswirth
jazayeri
component
communication
model
push
systems
7th
european
software
engineering
conference
7th
acm
sigsoft
symposium
foundations
software
engineering
esec
fse
99
toulouse
france
september
1999
batory
o'malley
design
implementation
hierarchical
software
systems
reusable
components
acm
transactions
software
engineering
methodology
october
1992
taylor
et
al
component
message
based
architectural
style
gui
software
ieee
transactions
software
engineering
june
1996
fielding
taylor
principled
design
modern
web
architecture
22nd
international
conference
software
engineering
icse
2000
limerick
ireland
june
2000
mehta
et
al
towards
taxonomy
software
connectors
22nd
international
conference
software
engineering
limerick
ireland
june
2000
dashofy
et
al
using
shelf
middleware
implement
connectors
distributed
software
architectures
21st
international
conference
software
engineering
los
angeles
ca
may
1999
magee
kramer
dynamic
structure
software
architectures
4th
acm
sigsoft
symposium
foundations
software
engineering
san
francisco
ca
october
1996
oreizy
et
al
architecture
based
runtime
software
evolution
20th
international
conference
software
engineering
kyoto
japan
april
1998
moriconi
et
al
correct
architecture
refinement
ieee
transactions
software
engineering
april
1995
garlan
et
al
architectural
mismatch
reuse
hard
ieee
software
november
1995
gacek
boehm
composing
components
one
detect
potential
architectural
mismatches
workshop
compositional
software
architectures
monterey
ca
january
1998
uml
documentation
line
reference
abi
antoun
medvidovic
enabling
refinement
software
architecture
design
2nd
international
conference
unified
modeling
language
uml
99
fort
collins
co
october
1999
garlan
kompanek
carnegie
melon
university
reconciling
needs
architectural
description
object
modeling
notations
3rd
international
conference
unified
modeling
language
uml
2000
medvidovic
et
al
modeling
software
architectures
unified
modeling
language
acm
transactions
software
engineering
methodology
2002
krieger
adler
emergence
distributed
component
platforms
ieee
computer
march
1998
di
nitto
rosenblum
exploiting
adls
specify
architectural
styles
induced
middleware
infrastructures
21st
international
conference
software
engineering
los
angeles
ca
may
1999
vinoski
corba
integrating
diverse
applications
within
distributed
heterogeneous
environments
ieee
communications
magazine
february
1997
microsoft
corporation
component
object
model
technical
overview
line
reference
microsoft
corporation
dcom
technical
overview
line
reference
reiss
connecting
tools
using
message
passing
field
environment
ieee
software
july
1990m
maybee
et
al
multilanguage
interoperability
distributed
systems
experience
report
18th
international
conference
software
engineering
berlin
germany
march
1996
natarajan
rosenblum
supporting
architectural
concerns
component
interoperability
standards
iee
proceedings
software
december
2000
sun
microsystems
inc
java
beans
specification
line
reference
sun
microsystems
inc
enterprise
java
beans
specification
line
reference
schedule
subject
change
week
date
lecture
topic
readings
1
january
7
software
architectures
within
context
software
engineering
requirements
engineering
software
architecturesoftware
architecture
designsoftware
architectures
impact
testing
analysiswhere
money
software
architectures
product
evolution
january
9
basic
definitions
formalisms
something
old
something
new
software
architectures
decades
difference
design
differences
patterns
components
connectors
constraints
styles
rationalemodels
levels
abstractions
2
january
14
describing
architectures
viewsa
field
guide
architecture
description
languagesxadl
2
0
extensible
architecture
description
mechanism
january
16
3
january
21
developing
architectures
product
families
domain
specific
software
architectures
january
23
4
january
28
architectural
styles
care
styles
focused
reasoning
guarantees
conformance
design
methodology
selection
guidanceprimary
styles
classics
c2
rest
decent
january
30
5
february
4
connectors
usc
taxonomyevent
basedtraditional
middleware
architectures
february
6
6
february
11
moving
architectures
implementations
programming
language
issuesframeworks
february
13
7
february
18
formal
description
analysis
architectures
analyses
almost
uniquely
enabled
architectures
architectural
tradeoff
analysisperformance
analysisanalysis
architectural
design
faults
february
20
8
february
25
architecture
driven
dynamism
evolution
types
change
encompassing
methodology
frameworkchange
configuration
management
february
27
9
march
4
architecture
focused
environments
march
6
class
gsaw
10
march
11
architectures
business
practices
introducing
software
architectures
organization
march
13
exams
march
assignments
assessment
class
going
bit
different
usual
280
point
plan
will
either
term
paper
term
project
rather
just
going
ask
submit
weekly
progress
reports
progress
will
respect
whole
set
items
will
discussed
class
stay
tuned
academic
dishonesty
cheating
ics
223
will
punished
accordance
university
policy
ics
policy
please
familiarize
documents
note
university
policy
states
faculty
responsibility
assigning
appropriate
grade
student
engages
academic
dishonesty
appropriate
grade
class
cheating
wrong
lying
department
information
computer
science
university
california
irvine
ca
92697
3425
