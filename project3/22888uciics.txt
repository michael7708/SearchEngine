fielding dissertation introduction 
introduction 
top
prev
next
introduction
excuse
say
`knives'
city
gent
1
michael
palin
architects
sketch
111
predicted
perry
wolf
105
software
architecture
focal
point
software
engineering
research
1990s
complexity
modern
software
systems
necessitated
greater
emphasis
componentized
systems
implementation
partitioned
independent
components
communicate
perform
desired
task
software
architecture
research
investigates
methods
determining
best
partition
system
components
identify
communicate
information
communicated
elements
system
can
evolve
independently
can
described
using
formal
informal
notations
good
architecture
created
vacuum
design
decisions
architectural
level
made
within
context
functional
behavioral
social
requirements
system
designed
principle
applies
equally
software
architecture
traditional
field
building
architecture
guideline
form
follows
function
comes
hundreds
years
experience
failed
building
projects
often
ignored
software
practitioners
funny
bit
within
monty
python
sketch
cited
absurd
notion
architect
faced
goal
designing
urban
block
flats
apartments
present
building
design
components
modern
slaughterhouse
might
well
best
slaughterhouse
design
ever
conceived
little
comfort
prospective
tenants
whisked
along
hallways
containing
rotating
knives
hyperbole
architects
sketch
may
seem
ridiculous
consider
often
see
software
projects
begin
adoption
latest
fad
architectural
design
later
discover
whether
system
requirements
call
architecture
design
buzzword
common
occurrence
least
behavior
within
software
industry
due
lack
understanding
given
set
architectural
constraints
useful
words
reasoning
behind
good
software
architectures
apparent
designers
architectures
selected
reuse
dissertation
explores
junction
frontiers
two
research
disciplines
computer
science
software
networking
software
research
long
concerned
categorization
software
designs
development
design
methodologies
rarely
able
objectively
evaluate
impact
various
design
choices
system
behavior
networking
research
contrast
focused
details
generic
communication
behavior
systems
improving
performance
particular
communication
techniques
often
ignoring
fact
changing
interaction
style
application
can
impact
performance
communication
protocols
used
interaction
work
motivated
desire
understand
evaluate
architectural
design
network
based
application
software
principled
use
architectural
constraints
thereby
obtaining
functional
performance
social
properties
desired
architecture
given
name
coordinated
set
architectural
constraints
becomes
architectural
style
first
three
chapters
dissertation
define
framework
understanding
software
architecture
via
architectural
styles
revealing
styles
can
used
guide
architectural
design
network
based
application
software
common
architectural
styles
surveyed
classified
according
architectural
properties
induce
applied
architecture
network
based
hypermedia
classification
used
identify
set
architectural
constraints
used
improve
architecture
early
world
wide
web
architecting
web
requires
understanding
requirements
shall
discuss
chapter
4
web
intended
internet
scale
distributed
hypermedia
system
means
considerably
just
geographical
dispersion
internet
interconnecting
information
networks
across
organizational
boundaries
suppliers
information
services
must
able
cope
demands
anarchic
scalability
independent
deployment
software
components
distributed
hypermedia
provides
uniform
means
accessing
services
embedding
action
controls
within
presentation
information
retrieved
remote
sites
architecture
web
must
therefore
designed
context
communicating
large
grain
data
objects
across
high
latency
networks
multiple
trust
boundaries
chapter
5
introduces
elaborates
representational
state
transfer
rest
architectural
style
distributed
hypermedia
systems
rest
provides
set
architectural
constraints
applied
whole
emphasizes
scalability
component
interactions
generality
interfaces
independent
deployment
components
intermediary
components
reduce
interaction
latency
enforce
security
encapsulate
legacy
systems
describe
software
engineering
principles
guiding
rest
interaction
constraints
chosen
retain
principles
contrasting
constraints
architectural
styles
past
six
years
rest
architectural
style
used
guide
design
development
architecture
modern
web
presented
chapter
6
work
done
conjunction
authoring
internet
standards
hypertext
transfer
protocol
http
uniform
resource
identifiers
uri
two
specifications
define
generic
interface
used
component
interactions
web
like
real
world
systems
components
deployed
web
architecture
obey
every
constraint
present
architectural
design
rest
used
means
define
architectural
improvements
identify
architectural
mismatches
mismatches
occur
due
ignorance
oversight
software
implementation
deployed
violates
architectural
constraints
mismatches
avoided
general
possible
identify
become
standardized
several
mismatches
within
modern
web
architecture
summarized
chapter
6
along
analyses
arose
deviate
rest
summary
dissertation
makes
following
contributions
software
research
within
field
information
computer
science
framework
understanding
software
architecture
architectural
styles
including
consistent
set
terminology
describing
software
architecture
classification
architectural
styles
network
based
application
software
architectural
properties
induce
applied
architecture
distributed
hypermedia
system
rest
novel
architectural
style
distributed
hypermedia
systems
application
evaluation
rest
architectural
style
design
deployment
architecture
modern
world
wide
web
top
prev
next
roy
thomas
fielding
2000
rights
reserved
reference
work
