ics 31 lab 2 
lab assignment 2 
ics
31
david
kay
uc
irvine
winter
2013
lab
assignment
2
assignment
due
end
lab
friday
january
18
preparation
part
individually
coming
lab
1
just
getting
enrolled
class
everything
course
refrence
sheet
syllabus
heading
week
get
started
ics
31
includes
registering
checkmate
ics
uci
edu
piazza
com
filling
questionnaire
eee
uci
edu
survey
ics31
w13
turning
photo
ta
2
read
sections
2
3
2
6
perkovic
text
trying
practice
problems
looking
solutions
reading
note
beginning
section
2
3
list
pet
names
homogeneous
items
type
strings
next
author
shows
heterogenous
list
one
items
various
types
class
will
use
lists
homogeneous
data
example
can
apply
operation
every
item
list
heterogeneous
collections
data
will
use
namedtuples
discussed
class
fractions
module
just
use
float
numbers
book
mentions
situations
large
small
numbers
need
calculate
precisely
related
situation
occurs
need
calculate
values
like
1
3
represented
precisely
decimal
number
long
chain
computations
difference
0
33333333
1
3
can
build
significant
value
called
roundoff
error
use
fraction
library
computations
convert
float
end
avoid
potential
roundoff
errors
section
2
6
introduces
python's
turtle
graphics
library
play
around
little
coming
lab
3
read
sections
3
3
3
5
perkovic
textbook
can
skip
section
middle
page
72
confusing
helpful
get
sections
soon
time
can
go
ahead
read
chapter
order
going
talking
two
sections
first
read
practice
problems
3
8
3
9
3
11
average
function
3
14
3
15
reading
note
author
uses
term
user
defined
functions
modern
accurate
term
programmer
defined
functions
decades
ago
computer
user
person
wrote
software
today
user
end
user
rarely
ever
writes
code
functions
might
single
important
concept
first
quarter
programming
important
concept
need
lot
concepts
write
useful
programs
encapsulating
operations
named
function
using
function
component
still
larger
functions
basis
software
development
functions
also
sometimes
called
procedures
methods
subroutines
subprograms
sometimes
terms
used
subtly
different
ways
sometimes
4
go
back
read
assignment
advice
especially
three
minute
rule
5
read
lab
work
part
assignment
come
lab
monday
just
get
idea
partner
lab
work
part
partner
lab
choose
partner
assignment
make
sure
ta
knows
partner
remember
choose
different
partner
lab
assignment
work
partner
week
make
sure
know
partner's
name
first
last
contact
information
email
cellphone
whatever
case
one
make
lab
assignment
will
create
python
file
called
lab2
py
type
answers
parts
assignment
file
non
python
text
can
comments
multi
line
triple
quoted
strings
first
line
file
type
comment
withthe
names
ids
partners
identifying
information
like
paula
programmer
11223344
andrew
anteater
44332211
ics
31
lab
sec
7
lab
asst
2
python
code
file
produce
specified
results
run
file
finished
assignment
submit
file
via
checkmate
good
idea
partner
keeps
copy
lab
work
end
session
just
case
someone
make
next
lab
first
day
class
wrote
ran
sequence
statements
hours
int
input
'how
many
hours
'
print
'this
many
hours
'
hours
rate
int
input
'how
many
dollars
per
hour
'
print
'this
many
dollars
per
hour
'
rate
print
'weekly
salary
'
hours
rate
1
copy
code
paste
lab2
py
file
run
make
sure
works
expect
modify
code
print
dollar
sign
dollar
amount
now
worry
precise
spacing
precise
number
digits
decimal
point
learn
specify
later
2
write
new
sequence
statements
executed
might
produce
results
look
like
bold
faced
text
typed
user
hello
name
alice
anteater
hello
alice
anteater
nice
meet
old
19
next
year
will
20
years
old
good
bye
foregoing
may
enough
get
going
problem
couple
tips
bits
advice
may
help
give
boost
code
write
ask
user
name
age
code
work
without
change
matter
name
age
user
types
called
writing
code
general
sense
general
purpose
code
works
reasonable
data
opposite
code
includes
alice
anteater's
actual
name
age
19
python
code
code
always
print
thing
every
time
called
hard
coded
data
much
less
flexible
useful
see
situations
hard
coding
certain
constants
right
approach
one
one
key
approach
writing
program
base
similar
program
already
even
professional
programmers
professional
development
environments
contain
pre
written
frameworks
different
kinds
tasks
internet
full
open
source
code
repositories
professionals
can
use
avoid
reinventing
wheel
case
can
start
salary
code
copied
pasted
earlier
contains
nearly
elements
need
name
age
task
just
need
reassemble
change
words
produce
new
behavior
copenhagen
chamber
commerce
hired
write
program
will
convert
foreign
currencies
equivalent
amount
danish
krone
program
will
prompt
user
input
four
items
order
name
business
using
program
number
euros
business
number
british
pounds
number
dollars
program
will
produce
output
business
name
list
much
currency
business
foreign
amount
danish
krone
equivalent
one
foreign
currency
per
line
business's
total
amount
money
krone
assume
following
exchange
rates
effect
one
euro
7
46
krone
one
british
pound
9
02
krone
one
dollar
5
59
krone
implementation
note
one
situations
hard
coding
constants
appropriate
since
program
going
look
actual
exchange
rates
internet
may
something
ics
32
though
top
python
code
three
assignment
statements
define
constants
look
like
krone
per
euro
7
46
will
use
defined
constants
appropriate
program's
calculations
example
business
name
tycho
brahe
enterprises
£á100
200
1000
displayed
results
shown
user's
input
shown
boldface
please
provide
information
business
name
tycho
brahe
enterprises
number
euros
100
number
pounds
200
number
dollars
1000
copenhagen
chamber
commerce
business
name
tycho
brahe
enterprises
100
euros
746
0
krone
200
pounds
1804
0
krone
1000
dollars
5590
0
krone
total
krone
8140
0
worry
precise
spacing
number
digits
decimal
point
learn
control
later
part
assignment
depends
material
will
cover
class
tuesday
able
given
code
may
copy
paste
file
work
collections
import
namedtuple
book
namedtuple
'book'
'title
author
year
price'
favorite
book
'adventures
sherlock
holmes'
'arthur
conan
doyle'
1892
21
50
another
book
'memoirs
sherlock
holmes'
'arthur
conan
doyle'
1894
23
50
still
another
book
'return
sherlock
holmes'
'arthur
conan
doyle'
1905
25
00
write
expressions
using
variables
favorite
another
still
another
evaluate
following
1
title
book
variable
still
another
2
price
book
memoirs
sherlock
holmes
3
average
price
three
books
4
true
false
based
whether
publication
year
book
variable
favorite
1900
next
write
two
assignment
statements
5
change
price
book
return
sherlock
holmes
26
00
6
change
price
book
return
sherlock
holmes
increasing
20
define
namedtuple
called
animal
animals
zoo
fields
animal's
name
species
age
weight
favorite
food
define
variables
hold
elephant
called
jumbo
50
years
old
weighs
1000
kg
eats
peanuts
ii
platypus
named
perry
7
years
old
weighs
1
7
kg
eats
shrimp
finally
write
boolean
expression
whose
value
true
weight
animal
represented
first
variable
less
weight
animal
represented
second
variable
might
asking
useful
write
expression
like
know
looking
data
jumbo
weighs
perry
answer
variables
can
vary
might
program
different
animals
different
weights
animals
get
stored
variables
defined
expression
wrote
uses
whatever
value
variable
currently
can
re
use
expression
whatever
animals
want
long
store
animals'
information
variables
defined
used
expression
good
write
general
versatile
code
like
add
statement
book
code
booklist
favorite
another
still
another
1
write
boolean
expression
whose
value
true
first
book
list
remember
index
number
first
book
cheaper
second
book
list
false
otherwise
lab2
py
file
just
print
expression
2
write
print
another
boolean
expression
whose
value
true
first
book
list
recently
published
last
book
list
write
using
booklist
2
last
book
instead
use
expression
whose
value
last
book
list
matter
long
list
class
discussed
programming
language
gives
us
predefined
built
building
blocks
like
ints
strings
like
len
gives
us
ways
combine
complicated
powerful
features
can
use
develop
software
namedtuples
example
create
book
version
python
new
type
data
can
use
programs
one
theme
course
can
build
work
data
structures
way
create
list
seven
restaurants
calling
rc
restaurant
collection
copy
code
lab2
py
file
collections
import
namedtuple
restaurant
namedtuple
'restaurant'
'name
cuisine
phone
dish
price'
restaurant
attributes
name
kind
food
served
phone
number
best
dish
price
dish
rc
restaurant
thai
dishes
thai
334
4433
mee
krob
12
50
restaurant
nobu
japanese
335
4433
natto
temaki
5
50
restaurant
nonna
italian
355
4433
stracotto
25
50
restaurant
jitlada
thai
324
4433
paht
woon
sen
15
50
restaurant
nola
new
orleans
336
4433
jambalaya
5
50
restaurant
noma
modern
danish
337
4433
birch
sap
35
50
restaurant
addis
ababa
ethiopian
337
4453
yesiga
tibs
10
50
values
described
write
python
expression
using
rc
produces
value
enclose
print
statement
lab2
py
file
1
name
third
restaurant
list
remember
third
restaurant
number
3
2
true
false
whether
first
fourth
restaurants
serve
kind
food
3
price
best
dish
last
restaurant
list
write
one
works
lists
length
just
7
4
list
restaurants
arranged
alphabetically
restaurant
name
need
one
statement
print
statement
5
best
dish
restaurant
alphabetically
last
need
extra
statement
solution
work
lists
length
6
new
list
containing
4
restaurants
first
two
alphabetically
last
two
alphabetically
one
work
lists
length
may
need
couple
extra
statements
extend
method
see
help
list
end
chapter
2
exercises
2
26
2
27
next
exercise
2
28
shapes
line
drawing
statement
statement
change
different
shape
can
come
expression
uses
variable
call
sides
compute
number
changing
statement
whatever
value
3
sides
may
consult
outside
partnership
issue
think
just
grab
answer
pick
one
2
29
2
30
pick
one
2
32
2
33
2
34
2
35
2
36
write
series
turtle
graphics
statements
draw
eye
least
basic
eye
shape
pupil
iris
feel
free
make
much
fancier
like
show
final
results
tutor
ta
impress
remember
partner
must
complete
partner
evaluation
form
submit
individually
connecting
eee
uci
edu
choosing
survey
tool
lab
section
ics
31
make
sure
know
partner's
name
first
last
can
evaluate
right
person
please
complete
evaluation
end
day
friday
saturday
morning
latest
takes
couple
minutes
hurts
participation
score
turn
submit
via
checkmate
lab2
py
file
containing
solutions
parts
excellent
idea
go
back
re
read
parts
carefully
now
make
sure
completed
steps
specified
also
excellent
idea
run
file
one
last
time
make
sure
correct
results
appear
error
messages
run
problems
probably
one
function
name
change
one
names
everywhere
necessary
try
run
also
remember
student
must
complete
partner
evaluation
form
logging
eee
uci
edu
selecting
survey
tool
evaluations
contribute
class
participation
score
get
habit
every
week
friday
submitted
assignment
survey
closes
saturday
written
david
kay
fall
2012
ics
31
modified
david
kay
winter
2013
david
kay
kay
uci
edu
sunday
january
13
2013
5
52
pm
