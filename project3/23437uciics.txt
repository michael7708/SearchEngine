ics 31 lab 6 
lab assignment 6 
ics
31
david
kay
uc
irvine
winter
2013
lab
assignment
6
assignment
due
end
lab
friday
february
15
preparation
part
individually
coming
lab
1
read
section
4
2
textbook
material
already
seen
2
exercises
4
12
4
15
4
17
4
18
everyone
able
independently
require
creative
algorithmic
thinking
just
need
look
sections
text
see
various
language
features
work
run
trouble
check
ta
right
away
3
read
sections
4
3
4
4
textbook
practice
problems
sections
cover
file
processing
new
kinds
errors
can
occur
work
files
feel
free
read
section
4
5
covering
directly
lab
work
part
partner
lab
choose
partner
assignment
make
sure
ta
knows
partner
remember
choose
different
partner
lab
assignment
work
partner
week
make
sure
know
partner's
name
first
last
contact
information
email
cellphone
whatever
case
one
make
lab
prepare
lab6
py
file
previous
labs
including
line
like
paula
programmer
11223344
andrew
anteater
44332211
ics
31
lab
sec
7
lab
asst
6
said
software
models
real
world
one
aspect
real
world
sometimes
want
model
randomness
writing
software
play
card
game
want
cards
come
every
time
designing
simulation
say
flow
customers
supermarket
determine
many
checkers
need
duty
want
one
customer
arrive
like
clockwork
every
30
seconds
want
realistic
less
predictable
flow
traffic
achieve
randomness
software
using
random
number
generator
python
library
functions
dealing
randomness
called
random
randrange
function
generates
random
integers
specified
range
randrange
5
returns
number
either
0
1
2
3
4
like
range
python
randrange
refers
numbers
starting
zero
going
including
argument
given
two
arguments
randrange
function
uses
first
lower
bound
range
randrange
1
5
returns
number
either
1
2
3
4
1
start
statement
random
import
randrange
write
simple
loop
prints
50
random
numbers
0
10
inclusive
want
10s
results
next
write
simple
loop
prints
50
random
numbers
1
6
inclusive
like
rolling
standard
six
sided
dice
check
results
carefully
50
numbers
possibility
one
value
especially
first
last
show
code
correct
2
many
dice
games
roll
two
six
sided
dice
resulting
totals
ranging
2
sometimes
called
snake
eyes
single
dot
dice
12
sometimes
called
boxcars
rectagular
cars
freight
trains
write
function
called
roll2dice
takes
parameters
returns
number
reflects
random
roll
two
dice
hint
quite
simple
returning
one
random
number
2
12
inclusive
two
real
dice
results
occur
frequently
others
test
function
calling
50
times
loop
printing
result
time
note
precise
testing
code
involving
randomness
hard
whole
point
unpredictable
data
time
next
part
problem
shows
one
approach
problem
3
write
function
called
distribution
rolls
takes
one
number
number
times
roll
two
dice
prints
distribution
values
rolls
form
shown
output
possible
output
distribution
rolls
200
distribution
dice
rolls
2
7
3
5
3
14
7
0
4
15
7
5
5
19
9
5
6
24
12
0
7
35
17
5
8
24
12
0
9
28
14
0
10
18
9
0
11
9
4
5
12
7
3
5
200
rolls
details
cover
output
formatting
class
tuesday
work
print
values
without
lining
use
read
section
4
2
textbook
need
list
numbers
counting
possible
rolls
think
easy
way
get
tally
roll
good
11
separate
variables
count2s
count3s
count4s
histogram
shows
200
rolls
wanted
try
much
larger
numbers
scale
histogram
differently
one
star
counts
say
20
rolls
cryptography
science
secret
writing
messages
people
understand
unless
secret
key
diplomats
generals
used
cryptography
thousands
years
commerce
uses
today
secure
web
transactions
can
encrypt
message
send
even
means
might
reveal
encrypted
message
unauthorized
parties
someone
authorized
person
key
can
easily
decrypt
also
techniques
unauthorized
person
can
use
try
break
encryption
read
message
without
key
called
cryptanalysis
codebreaking
many
different
ways
encrypting
messages
susceptible
cryptanalysis
others
cipher
one
category
encryption
methodology
ciphers
take
characters
message
transform
characters
one
kind
simple
cipher
substitution
cipher
example
substituting
'b'
'a'
'c'
'b'
cipher
cat
become
dbu
can
contrast
ciphers
codes
technical
distinction
codes
work
words
phrases
level
meaning
world
war
ii
us
army
used
soldiers
spoke
navajo
language
transmit
messages
radio
none
opponents
understand
navajo
even
recognize
language
code
computational
encryption
employs
ciphers
caesar
cipher
named
roman
emperor
julius
caesar
said
originated
works
like
example
described
letter
original
message
called
plaintext
changed
different
letter
example
'a'
becomes
'b'
'b'
becomes
'c'
one
example
say
key
1
letter
moves
1
position
later
alphabet
26
possible
caesar
ciphers
one
change
plaintext
message
encrypted
message
called
ciphertext
encrypting
message
hi
caesar
cipher
whose
key
3
give
ciphertext
kl
wkhuh
1
write
two
functions
caesar
encrypt
caesar
decrypt
takes
two
arguments
string
containing
message
plaintext
encryption
ciphertext
decryption
int
key
indicating
far
alphabet
find
substitute
letter
encryption
function
returns
ciphertext
decryption
function
returns
plaintext
always
follow
design
recipe
particular
make
enough
examples
test
understanding
functions'
behavior
match
code
behavior
two
details
plaintext
turn
upper
case
letters
lower
case
letters
plaintext
ciphertext
leave
non
letters
unchanged
right
tools
function
can
written
two
lines
code
plus
function
headers
docstrings
think
write
still
stuck
may
wish
consult
hints
one
time
convenient
global
constant
called
alphabet
contains
26
lower
case
letters
order
ii
work
want
use
translate
method
look
make
sure
understand
use
seeing
arguments
takes
may
suggest
things
need
compute
iii
also
convenient
function
takes
number
produces
rotated
alphabet
specified
number
characters
taken
front
added
end
string
okay
time
write
functions
test
2
partner
part
independently
make
message
without
telling
partner
encrypt
message
key
choosing
copy
encrypted
message
email
message
send
partner
put
key
subject
line
receive
email
partner
sent
decrypt
using
key
received
good
security
include
key
message
course
matter
us
lab
real
life
like
writing
pin
atm
card
key
distribution
issue
modern
cryptography
need
secure
independent
way
get
key
intended
recipient
ciphertext
3
time
check
key
correct
range
0
25
better
yet
make
keys
greater
25
wrap
around
example
caesar
encrypt
cat
29
returns
thing
caesar
encrypt
cat
3
hint
use
mod
operator
suppose
list
strings
containing
english
text
like
four
score
seven
years
ago
fathers
brought
forth
continent
new
nation
conceived
liberty
dedicated
proposition
men
created
equal
now
engaged
great
civil
war
testing
whether
nation
nation
conceived
dedicated
can
long
endure
might
additional
spacing
punctuation
shown
last
two
lines
1
write
function
print
line
numbers
takes
list
strings
prints
string
preceded
line
number
1
four
score
seven
years
ago
fathers
brought
forth
2
continent
new
nation
conceived
liberty
dedicated
3
proposition
men
created
equal
now
4
engaged
great
civil
war
testing
whether
nation
5
nation
conceived
dedicated
can
long
endure
10
lines
text
line
nicely
use
format
method
print
line
number
five
character
wide
field
nifty
enhancement
make
line
number
field
width
exactly
long
display
longest
line
number
2
write
function
stats
takes
list
strings
prints
statistics
follows
16824
lines
list
483
empty
lines
53
7
average
characters
per
line
65
9
average
characters
per
non
empty
line
follow
formatting
shown
3
write
function
list
words
takes
list
strings
returns
list
individual
words
white
space
punctuation
removed
except
apostrophes
single
quotes
look
string
operations
list
operations
determine
need
task
go
back
restaurants
program
last
week
modified
handle
menus
lists
dish
structures
may
start
code
either
partner
submitted
getting
speed
code
someone
else
initially
wrote
real
world
programmer's
skill
real
programming
modifying
extending
already
existing
product
also
okay
start
fresh
make
dishlist
menu
modifications
scratch
sometimes
best
approach
even
already
code
task
existing
code
solid
work
hard
understand
makes
sense
try
build
code
shaky
foundation
besides
take
nearly
long
second
time
already
thought
issues
already
learned
something
mistakes
made
donald
knuth
stanford
might
america's
famous
computer
scientist
suggested
software
development
method
write
code
get
working
throw
away
write
scratch
point
people
tend
cling
code
already
written
even
bad
code
dragging
development
starting
afresh
frees
programmer
burden
previous
bad
decisions
allows
getting
right
time
1
modify
program
whenever
restaurant
displayed
additional
line
included
average
price
12
45
average
calories
455
6
follow
formatting
shown
2
add
command
main
menu
allows
user
search
display
restaurants
serve
specified
cuisine
along
average
price
menus
restaurants
serve
cuisine
3
add
command
main
menu
allows
user
search
display
restaurants
serve
dish
whose
name
contains
given
word
phrase
realistic
forcing
user
type
exact
name
dish
least
user
can
just
type
fava
beans
match
dishes
include
phrase
remember
partner
must
complete
partner
evaluation
form
submit
individually
connecting
eee
uci
edu
choosing
survey
tool
lab
section
ics
31
make
sure
know
partner's
name
first
last
can
evaluate
right
person
students
forgetting
specify
partner's
name
survey
now
forget
partner's
name
give
credit
completing
evaluation
please
complete
evaluation
end
day
friday
saturday
morning
latest
takes
couple
minutes
hurts
participation
score
turn
submit
via
checkmate
two
files
lab6
py
file
containing
solutions
parts
separate
python
file
containing
modified
restaurants
program
part
remember
said
previous
labs
rereading
assignment
rerunning
python
files
also
remember
student
must
complete
partner
evaluation
form
logging
eee
uci
edu
selecting
survey
tool
evaluations
contribute
class
participation
score
get
habit
every
week
friday
submitted
assignment
survey
closes
saturday
miss
forget
indicate
partner's
name
get
credit
filling
missing
one
may
significant
effect
grade
easy
points
everyone
else
getting
written
david
kay
fall
2012
ics
31
based
part
assignments
ics
h21
informatics
41
modified
david
kay
winter
2013
david
kay
kay
uci
edu
friday
february
15
2013
5
41
pm
