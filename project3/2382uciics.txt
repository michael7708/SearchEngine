cryptogram helper algorithm 
http www ics uci edu eppstein cryptogram algo html 
cryptogram
helper
algorithm
algorithm
used
applet's
solve
button
deterministic
iterative
procedure
based
around
26x26
matrix
probabilities
likely
algorithm
thinks
given
code
letter
replaced
given
text
letter
matrix
starts
probabilities
equal
loading
dictionary
english
word
frequencies
repeats
following
steps
word
dictionary
matches
word
cryptogram
word's
frequency
multiplied
matrix
entries
individual
letters
giving
overall
probability
seeing
word
position
pair
code
word
possible
decryption
word
build
26x26
matrix
probability
finding
word
large
possible
uniform
probabilities
unrelated
letters
replace
original
matrix
new
matrix
formed
weighted
average
word
matrices
weights
word
probabilities
computed
first
step
minimum
weight
perfect
matching
algorithm
computes
likely
decryption
current
matrix
try
possible
ways
swapping
two
letters
decryption
keeping
swap
improves
quality
number
recognized
words
product
frequencies
words
find
good
swap
also
adjust
matrix
make
decryption
likely
future
iterations
word
decryption
use
dictionary
find
words
replace
without
changing
anything
rest
decryption
find
words
use
one
highest
frequency
iteration
iteration
number
quality
current
translation
shown
browser's
status
line
decryption
shown
main
window
best
one
found
far
necessarily
one
latest
iteration
see
graham
toal's
cryptogram
source
code
page
alternative
cryptogram
solving
algorithms
return
cryptogram
helperview
source
