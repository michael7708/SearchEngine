honors cs seminar undergrad non majors 
an honors computer science seminar undergraduate non majors 
abstract
describe
course
offered
six
years
part
honors
collegium
ucla
small
seminar
introduced
non
major
honors
students
concepts
current
issues
computer
science
culminating
field
study
project
applying
computing
area
student's
interest
background
ucla
honors
collegium
offers
series
small
seminar
classes
designed
provide
honors
students
opportunity
close
interaction
distinguished
faculty
interdisciplinary
topics
roughly
dozen
courses
per
quarter
offered
titles
ranging
geometry
relativity
mind
brains
humans
computers
human
dimensions
global
environmental
change
gender
race
construction
greek
political
thought
students
grade
point
averages
least
3
0
4
0
completed
english
composition
requirements
eligible
faculty
wide
range
disciplines
teach
honors
collegium
time
reimbursed
home
departments
course
description
1986
1991
author
taught
honors
collegium
course
called
computers
science
computer
science
described
catalog
follows
course
will
furnish
students
depth
fundamental
understanding
computers
nature
automatic
computation
theory
current
practice
information
computers
can
represent
can
process
distinctions
human
thought
computer's
processing
social
effects
computerization
reliance
computed
results
capabilities
limitations
computer
technology
today
future
students
will
develop
foundation
making
informed
decisions
relating
computing
framework
developing
technical
expertise
rationale
behind
grandiose
agenda
partly
help
students
appreciate
intellectual
issues
underlie
computer
science
also
practical
purpose
students
course
plan
become
computing
professionals
university
students
will
probably
manage
computing
professionals
make
purchasing
management
decisions
computing
influence
public
policy
computing
want
develop
framework
making
decisions
informed
way
given
constraints
single
one
quarter
course
non
technical
backgrounds
one
approach
courses
like
cover
programming
algorithms
degree
mathematical
formality
indeed
honors
collegium
course
created
recently
take
approach
using
text
goldschlager
listerendnotes
took
approach
de
emphasizing
formal
content
algorithm
design
analysis
example
actual
coding
felt
hardly
enough
time
topics
justice
still
cover
larger
issues
especially
given
students
mathematical
sophistication
necessary
appreciate
formal
treatment
recent
offering
used
two
texts
general
introduction
biermannendnotes
biographical
supplement
slaterendnotes
supplement
various
readings
daedalus
issue
artificial
intelligence
reprinted
endnotes
parnas
article
sdiendnotes
course
met
ten
week
quarter
week
three
hours
discussion
lecture
led
instructor
usually
accompanied
graduate
student
ta
provided
electronic
mail
internet
news
access
students
encouraged
explore
beyond
required
hands
computing
course
graded
class
participation
field
study
term
project
described
individual
half
hour
oral
final
exams
whose
purpose
gauge
conversant
student
issues
test
specific
set
factual
knowledge
course
outline
give
student
basic
terminology
concepts
computing
hardware
software
algorithms
programs
processor
memory
levels
categories
programming
languages
students
required
view
six
50
minute
videotapes
topics
prior
start
class
end
first
week
provided
common
background
course
build
course
followed
rough
outline
week
1
computers
context
survey
current
major
problems
computing
discussion
scenarios
raising
ethical
issues
every
student
feel
comfortable
stating
opinion
issues
even
without
technical
expertise
week
2
computer
misuse
abuse
computer
hacking
crime
security
review
technical
questions
raised
videotapes
week
3
hardware
software
storing
numeric
textual
pictorial
information
characteristics
diversity
storage
input
output
devices
interpreting
technical
specifications
use
campus
computer
store's
price
lists
include
detailed
system
specifications
guide
issues
week
4
computer
systems
operating
systems
computer
networks
distributed
computing
electronic
mail
bulletin
boards
week
5
limits
computation
intractable
noncomputable
problems
dealing
problems
software
quality
formal
verification
vs
testing
vs
software
fault
tolerance
multiple
design
teams
week
6
limits
computation
representing
complex
data
human
experience
knowledge
simulation
human
thought
processes
potential
limits
artificial
intelligence
including
turing
test
week
7
computerization
long
range
reliance
hiding
behind
computer
generated
results
increasing
reliance
automated
processes
resulting
changes
human
skills
responsibility
malfunction
computer
systems
weeks
8
10
students'
term
project
presentations
field
study
project
students'
work
course
devoted
field
study
term
project
expected
apply
computing
area
interest
project
stated
broadly
possible
students'
projects
ranged
mundane
acquisition
small
business
computing
systems
use
graphics
model
results
plastic
surgery
computerized
scoring
fencing
tournaments
adoption
implementation
touch
tone
telephone
course
enrollment
campus
encouraged
students
use
internet
news
system
source
information
project
description
received
students
appears
appendix
evaluation
many
projects
astonishingly
thorough
insightful
others
consisted
primarily
hand
waving
occurred
cases
students
fully
appreciate
limits
technical
expertise
holistically
graded
oral
final
exam
great
success
despite
students'
initial
trepidation
afforded
instructor
opportunity
pursue
depth
areas
student
knew
comfortable
given
students'
high
academic
standing
embarrassing
situations
student
unable
make
decent
showing
rare
students'
use
electronic
mail
network
news
less
completely
successful
burden
learning
access
protocols
unfamiliar
timesharing
system
distance
available
terminals
daily
ambit
proved
great
overcome
students
used
system
infrequently
friendlier
systems
universal
access
will
remedy
course
well
received
offered
even
instructor
moved
teaching
duties
different
campus
university
students
appreciated
opportunity
explore
issues
particularly
seminar
environment
indicated
eyes
opened
breadth
computer
science
acknowledgements
author's
teaching
assistants
contributed
immeasurably
development
success
course
jody
paul
scott
turner
edmond
mesrobian
john
heidemann
references
appendix
field
study
computing
term
project
description
