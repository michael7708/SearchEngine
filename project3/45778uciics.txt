system initiation planning systems come 
activities 
system
initiation
planning
systems
come
situations
new
feasible
systems
replace
supplement
existing
information
processing
mechanisms
whether
previously
automated
manual
informal
requirement
analysis
specification
identifies
problems
new
software
system
suppose
solve
operational
capabilities
desired
performance
characteristics
resource
infrastructure
needed
support
system
operation
maintenance
functional
specification
prototyping
identifies
potentially
formalizes
objects
computation
attributes
relationships
operations
transform
objects
constraints
restrict
system
behavior
forth
partition
selection
build
vs
buy
vs
reuse
given
requirements
functional
specifications
divide
system
manageable
pieces
denote
logical
subsystems
determine
whether
new
existing
reusable
software
systems
correspond
needed
pieces
architectural
design
configuration
specification
defines
interconnection
resource
interfaces
system
subsystems
components
modules
ways
suitable
detailed
design
overall
configuration
management
detailed
component
design
specification
defines
procedural
methods
data
resources
within
modules
component
transformed
required
inputs
provided
outputs
component
implementation
debugging
codifies
preceding
specifications
operational
source
code
implementations
validates
basic
operation
software
integration
testing
affirms
sustains
overall
integrity
software
system
architectural
configuration
verifying
consistency
completeness
implemented
modules
verifying
resource
interfaces
interconnections
specifications
validating
performance
system
subsystems
requirements
documentation
revision
system
delivery
packaging
rationalizing
recorded
system
development
descriptions
systematic
documents
user
guides
form
suitable
dissemination
system
support
deployment
installation
providing
directions
installing
delivered
software
local
computing
environment
configuring
operating
systems
parameters
user
access
privileges
running
diagnostic
test
cases
assure
viability
basic
system
operation
training
use
providing
system
users
instructional
aids
guidance
understanding
system's
capabilities
limits
order
effectively
use
system
software
maintenance
sustaining
useful
operation
system
host
target
environment
providing
requested
functional
enhancements
repairs
performance
improvements
conversions
