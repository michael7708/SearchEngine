smart ics core knowledge skills chart bren school information computer sciences 
ics 23 cse 23 
site
will
look
much
better
browser
supports
web
standards
accessible
browser
internet
device
school
bren
ics
mission
dean's
welcome
bren
gift
donald
bren
hall
visit
bren
school
contact
us
equity
diversity
departments
computer
science
informatics
statistics
research
research
areas
research
centers
research
highlights
education
graduate
apply
degrees
tuition
costs
courses
faq
research
areas
policies
forms
contact
counselor
graduate
housing
computing
support
visit
bren
school
undergraduate
computing
support
computer
lab
information
contact
counselor
course
listings
degrees
faq
financial
aid
honors
program
housing
ics
jobs
mentor
program
policies
recently
admitted
student
council
student
life
student
resources
tuition
costs
prospective
undergrad
uci
parents
people
faculty
staff
graduate
students
community
alumni
friends
parent
programs
leadership
council
make
gift
news
get
involved
tech
talks
information
sessions
sponsor
projects
leadership
council
corporate
partners
sponsor
interns
icsjobs
butterworth
competition
bren
school
home
undergraduate
admissions
transfer
students
smart
ics
program
core
knowledge
skills
smart
ics
core
knowledge
skills
chart
core
knowledge
skills
ics
23
cse
23
fundamental
data
structures
courses
6d
21
22
51
52
132
sections
catalog
description
course
prerequisites
restrictions
prerequisite
skills
concepts
minimum
knowledge
skills
ics
23
cse
23
catalog
descriptionfocuses
implementation
mathematical
analysis
fundamental
data
structures
algorithms
covers
storage
allocation
memory
management
techniques
ics
23
cse
23
course
prerequisitesics
22
cse
22
grade
better
engineering
eecs
40
ics
23
cse
23
restrictionsonly
one
course
ics
23
cse
23
ics
h23
may
taken
credit
ics
23
cse
23
knowledge
prerequisites
skills
conceptsstudents
must
passed
ics
22
cse
22
grade
better
expected
knowledge
skills
specified
ics
22
cse
22
ics
23
cse
23
minimum
knowledge
skillselementary
analysis
algorithms
determine
asymptotic
time
usage
simple
short
fragments
code
mastery
determine
recurrence
time
usage
simple
recursive
procedure
mastery
data
structures
listed
mastery
proficiency
able
describe
space
usage
worst
case
average
case
appropriate
time
complexity
explain
affect
choice
appropriate
solution
one
available
mastery
recognize
difference
omega
theta
notation
proficiency
solve
problems
involving
omega
theta
notation
proficiency
multi
dimensional
arrays
understand
multi
dimensional
arrays
behave
compared
single
dimension
arrays
proficiency
lists
traverse
generalized
list
structures
proficiency
use
iterable
objects
iterators
proficiency
understand
amortized
complexity
bounds
worst
case
average
sequence
operations
applied
arraylist
proficiency
general
trees
recognize
generate
preorder
postorder
level
order
traversals
proficiency
describe
tree
using
conventional
terms
parent
child
ancestor
descendent
node
leaf
root
height
proficiency
describe
implementation
using
linked
structures
proficiency
binary
trees
apply
basic
definitions
terminology
binary
trees
parent
descendant
height
mastery
determine
pre
post
level
order
traversals
given
binary
tree
mastery
implement
recursive
traversal
binary
trees
simple
applications
recursive
computation
height
mastery
priority
queues
describe
abstract
behavior
example
describing
changes
results
series
operations
priority
queue
including
enqueue
dequeue
front
peek
isempty
operations
mastery
implement
priority
queue
using
linked
list
using
heap
proficiency
searching
describe
search
structures
section
analyze
performance
construction
insertion
deletion
searching
terms
notation
mastery
binary
search
tree
insertions
searches
deletions
paper
mastery
insertions
deletions
avl
trees
paper
proficiency
derive
recurrence
average
case
behavior
binary
search
trees
exposure
insertions
deletions
skip
lists
paper
proficiency
execute
hashing
separate
chaining
paper
mastery
implement
hash
table
using
separate
chaining
proficiency
evaluate
choices
divisor
division
hashing
mastery
understand
open
addressing
appropriate
technique
exposure
construct
hash
functions
strings
objects
proficiency
graphs
apply
definitions
terminology
directed
vs
undirected
graphs
cycles
paths
components
mastery
understand
characteristics
relative
advantages
adjacency
matrix
vs
adjacency
list
representations
mastery
perform
depth
first
search
breadth
first
search
paper
mastery
implement
depth
first
search
breadth
first
search
mastery
find
topological
ordering
directed
acyclic
graph
paper
mastery
describe
efficient
algorithm
finding
shortest
paths
constructing
minimum
spanning
trees
proficiency
non
linear
data
structure
implementation
implement
non
linear
data
structure
tree
binary
search
tree
skip
list
proficiency
sorting
describe
insertion
sort
quicksort
mergesort
heap
sort
mastery
analyze
running
times
insertion
sort
quicksort
mergesort
heap
sort
proficiency
explain
quicksort
mergesort
applications
divide
conquer
paradigm
mastery
use
decision
tree
show
lower
bound
sorting
using
direct
key
comparisons
proficiency
execute
bucket
sort
radix
sort
paper
explain
linear
running
time
violate
lower
bound
sorting
using
direct
key
comparisons
proficiency
data
structures
algorithms
external
memory
describe
properties
external
memory
affect
algorithm
design
mastery
describe
performance
construction
insertion
searching
deletion
trees
proficiency
insertion
searching
trees
paper
proficiency
describe
general
terms
delete
keys
tree
exposure
describe
external
memory
mergesort
proficiency
memory
management
understand
main
principles
memory
management
including
allocation
deallocation
garbage
collection
fragmentation
compaction
coalescing
proficiency
union
find
describe
data
structure
union
find
able
execute
union
find
operations
paper
structure
proficiency
return
top
page
uc
copyright
uci
directory
intranet
site
map
icswebmaster
ics
uci
edu
updated
june
11
2012
