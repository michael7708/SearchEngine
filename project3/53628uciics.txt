
nfa cpp 
id
nfa
cpp
5027
2010
02
18
19
41
48z
rares
nfa
cpp
implementation
nfa
class
copyright
2004
2007
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
october
2004
author
liang
jin
include
stdafx
include
nfa
construction
destruction
nfa
nfa
0
nodenumbersassigned
false
nfa
nfa
int
0
nodes
size
delete
nfanode
nodes
void
nfa
assignnodenumbers
assigning
node
numbers
int
index
0
index
nodes
size
index
nfanode
node
nfanode
nodes
index
node
nodenumber
index
performs
deep
copy
automaton
return
deep
copy
automaton
nfa
nfa
clone
test
clone
assignnodenumbers
copying
nodes
vector
newnodes
nfanode
newfinalstatenode
new
nfanode
epsilon
true
false
nfanode
newinitstatenode
new
nfanode
epsilon
false
true
int
index
subindex
index
0
index
nodes
size
index
nfanode
node
nfanode
nodes
index
nfanode
newnode
new
nfanode
node
name
node
finalstate
node
initstate
newnode
nodenumber
node
nodenumber
newnode
level
node
level
newnodes
push
back
newnode
node
finalstate
newfinalstatenode
newnode
node
initstate
newinitstatenode
newnode
copying
transitions
index
0
index
nodes
size
index
nfanode
node
nfanode
nodes
index
nfanode
newnode
nfanode
newnodes
index
int
node
branches
size
node
branches
size
subindex
0
subindex
node
branches
size
subindex
nfatransition
transition
nfatransition
node
branches
subindex
nfatransition
edge
new
nfatransition
nfanode
newnodes
transition
outnode
nodenumber
newnode
newnode
branches
push
back
edge
nfanode
newnodes
transition
outnode
nodenumber
backbranches
push
back
edge
node
branches
size
node
downbranches
size
subindex
0
subindex
node
branches
size
subindex
nfatransition
transition
nfatransition
node
downbranches
subindex
nfatransition
edge
new
nfatransition
nfanode
newnodes
transition
outnode
nodenumber
newnode
newnode
downbranches
push
back
edge
nfanode
newnodes
transition
outnode
nodenumber
upbranches
push
back
edge
creating
new
nfa
nfa
output
new
nfa
output
output
nodes
newnodes
output
finalstatenode
newfinalstatenode
output
initstatenode
newinitstatenode
system
arraycopy
specialinalphabet
0
output
specialinalphabet
0
specialinalphabet
length
return
output
void
nfa
inserthead
nfanode
newinitnode
initstatenode
initstate
false
nfatransition
edge
new
nfatransition
initstatenode
newinitnode
newinitnode
branches
push
back
edge
initstatenode
backbranches
push
back
edge
initstatenode
newinitnode
nodes
insert
nodes
begin
newinitnode
recalculation
number
void
nfa
inserthead
char
character
nfanode
newinitnode
new
nfanode
character
false
true
0
initstatenode
initstate
false
nfatransition
edge
new
nfatransition
initstatenode
newinitnode
newinitnode
branches
push
back
edge
initstatenode
backbranches
push
back
edge
initstatenode
newinitnode
nodes
insert
nodes
begin
newinitnode
void
nfa
printme
assignnodenumbers
int
0
iprintmeall
prepare
build
graph
add
epsilon
node
reorder
node
number
void
nfa
prepareforgraph
assignnodenumbers
inserthead
epsilon
assignnodenumbers
nfanode
nfa
getnode
int
index
return
nfanode
nodes
index
int
nfa
nodenum
return
nodes
size
void
nfa
convertfromtrie
trie
trie
int
sindex
nfanode
initstate
new
nfanode
epsilon
false
true
1
nodes
push
back
initstate
initstatenode
initstate
nfanode
finalstate
new
nfanode
epsilon
true
false
trienode
trienode
nfanode
tempnode
alph
size
0
alph
size
tempnode
null
int
levels
alph
size
char
name
0
alph
size
trie
root
child
null
trienode
trie
root
child
trienode
iscompressed
false
compressed
node
name
trie
getsinglename
trienode
names
name
epsilon
epsilon
levels
2
else
epsilon
dont
increase
level
levels
1
nfanode
newnode
new
nfanode
name
false
false
levels
nfatransition
edge
new
nfatransition
newnode
initstate
newnode
backbranches
push
back
edge
initstate
branches
push
back
edge
nodes
push
back
newnode
insertto
newnode
levels
tempnode
newnode
trienode
count
0
leaf
node
add
link
final
state
newnode
finalstate
true
nfatransition
newedge
new
nfatransition
finalstate
newnode
newnode
branches
push
back
newedge
finalstate
backbranches
push
back
newedge
tempnode
null
else
compressed
node
nfanode
newparent
initstate
levels
2
0
trienode
com
depth
set
new
node
final
state
nfanode
newnode3
new
nfanode
epsilon
true
false
levels
sindex
0
sindex
alph
size
sindex
trie
getnameexist
trienode
names
sindex
true
nfanode
newnode2
new
nfanode
trie
getcharfromindex
sindex
false
false
levels
nfatransition
edge1
new
nfatransition
newnode2
newparent
newparent
branches
push
back
edge1
newnode2
backbranches
push
back
edge1
nfatransition
edge2
new
nfatransition
newnode3
newnode2
newnode2
branches
push
back
edge2
newnode3
backbranches
push
back
edge2
nodes
push
back
newnode2
insertto
newnode2
levels
nodes
push
back
newnode3
insertto
newnode3
levels
add
edge
final
accepting
state
nfatransition
newedge
new
nfatransition
finalstate
newnode3
newnode3
branches
push
back
newedge
finalstate
backbranches
push
back
newedge
newparent
newnode3
levels
tempnode
newparent
levels
trienode
count
0
leaf
node
add
link
final
state
tempnode
null
0
alph
size
trie
root
child
null
tempnode
null
converttrie
tempnode
trie
root
child
finalstate
levels
trie
finalstate
level
100000
nodes
push
back
finalstate
finalstatenode
finalstate
return
void
nfa
converttrie
nfanode
parent
trienode
node
nfanode
finalstate
int
level
trie
trie
int
sindex
trienode
datanode
nfanode
parents
alph
size
0
alph
size
parents
null
int
levels
alph
size
char
name
0
alph
size
node
child
null
datanode
node
child
datanode
iscompressed
false
compressed
node
name
trie
getsinglename
datanode
names
name
epsilon
levels
level
1
else
levels
level
nfanode
newnode
new
nfanode
name
false
false
levels
nfatransition
edge
new
nfatransition
newnode
parent
newnode
backbranches
push
back
edge
parent
branches
push
back
edge
nodes
push
back
newnode
insertto
newnode
levels
parents
newnode
datanode
count
0
leaf
node
add
link
final
state
nfatransition
newedge
new
nfatransition
finalstate
newnode
newnode
branches
push
back
newedge
finalstate
backbranches
push
back
newedge
newnode
finalstate
true
parents
null
else
compressed
node
nfanode
newnode1
new
nfanode
epsilon
true
false
level
nfatransition
edge4
new
nfatransition
newnode1
parent
parent
branches
push
back
edge4
newnode1
backbranches
push
back
edge4
nfanode
newparent
parent
nfanode
newparent
newnode1
levels
level
1
0
datanode
com
depth
nfanode
newnode3
new
nfanode
epsilon
true
false
levels
sindex
0
sindex
alph
size
sindex
trie
getnameexist
datanode
names
sindex
true
nfanode
newnode2
new
nfanode
trie
getcharfromindex
sindex
false
false
levels
nfatransition
edge1
new
nfatransition
newnode2
newparent
newparent
branches
push
back
edge1
newnode2
backbranches
push
back
edge1
nfatransition
edge2
new
nfatransition
newnode3
newnode2
newnode2
branches
push
back
edge2
newnode3
backbranches
push
back
edge2
nodes
push
back
newnode2
insertto
newnode2
levels
nodes
push
back
newnode3
insertto
newnode3
levels
add
edge
final
accepting
state
nfatransition
newedge
new
nfatransition
finalstate
newnode3
newnode3
branches
push
back
newedge
finalstate
backbranches
push
back
newedge
newparent
newnode3
levels
parents
newparent
levels
datanode
count
0
parents
null
0
alph
size
node
child
null
parents
null
converttrie
parents
node
child
finalstate
levels
trie
return
void
nfa
insertto
nfanode
node
int
level
int
size
size
nodes
size
vector
iterator
nodes
begin
0
size
nfanode
nodes
level
