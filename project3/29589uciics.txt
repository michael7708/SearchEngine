theseus 
theseus project website 
overviewmethodologypublicationsfundingpersonnel
introduction
theseus
prototype
interface
can
increase
software
developer's
perceived
trustworthiness
distributed
team
members
exposing
important
information
set
appropriate
visualizations
theseus
web
application
built
using
gwt
google
web
toolkit
integrates
developer's
google
contacts
projects'
work
item
repositories
issue
trackers
mail
source
code
contextual
factors
time
zone
give
developer
insights
colleagues
availability
responsiveness
motivation
trust
significant
human
oriented
aspect
successful
productive
collaborations
lack
information
distributed
colleagues
can
work
developing
trust
distributed
teams
remote
workers
likely
much
less
information
lower
quality
information
remote
partners
example
chris
known
alex
working
three
projects
past
two
months
brazil
working
fixing
bugs
modified
expectations
respect
availability
research
shown
lack
situational
knowledge
reduced
ability
process
effectively
can
cause
individuals
remote
teams
attribute
breakdowns
individual
rather
situation
eroding
team
cohesion
lasting
solutions
instance
loss
trust
difficult
repair
actually
observed
world
developer's
failure
deliver
work
time
clashes
expectations
perceived
ability
deliver
time
trust
can
slow
build
collaborators
explanations
distributed
software
developers
give
breakdowns
called
attributions
figure
1
figure
1
dispositional
attributions
reflective
low
perceived
trustworthiness
situational
attributions
reflective
high
perceived
trustworthiness
several
aspects
process
setting
expectations
context
globally
distributed
software
development
can
addressed
improved
first
developing
sense
trust
can
take
time
due
lack
information
colleagues'
activities
lack
ways
manage
information
order
set
realistic
expectations
distributed
developers
can
ultimately
reach
levels
trust
collocated
team
members
just
takes
longer
tool
can
partially
automate
process
can
provide
time
savings
second
software
development
interactions
help
set
expectations
typically
hidden
project
repositories
incomplete
documents
time
figure
2
figure
2
collaborative
traces
cts
epresentations
past
current
activity
group
developers
manipulating
software
development
artifacts
lack
situational
information
colleagues
can
negatively
importantly
inaccurately
bias
trust
judgments
developer
involved
multiple
projects
across
several
time
zones
one
expect
day
responses
example
approach
renders
information
explicitly
project
team
artifacts
can
prepare
people
make
trust
judgments
based
meaningful
complete
data
third
sheer
number
artifacts
involved
makes
data
presented
textual
form
difficult
interpret
visualizations
can
effective
revealing
summarizing
information
continue
approach
