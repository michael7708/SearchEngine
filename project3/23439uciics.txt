ics 31 lab 8 
lab assignment 8 
ics
31
david
kay
uc
irvine
winter
2013
lab
assignment
8
assignment
due
end
lab
friday
march
1
reports
lab
indicate
students
still
reading
lab
problems
carefully
succeed
programmer
class
just
skim
problem
specifications
get
general
idea
can
first
time
go
back
read
detail
check
back
yet
run
questions
difficulties
said
bears
repeating
read
problem
sure
understand
precisely
code
supposed
come
examples
show
code's
behavior
inputs
arguments
expected
results
will
become
assertions
tests
follow
design
recipe
annotations
types
parameters
return
value
docstring
comments
give
brief
purpose
statement
assertions
tests
tas
tutors
able
help
unless
can
show
things
preparation
part
individually
1
need
go
back
re
read
assigned
portions
textbook
opportunity
2
will
post
code
implement
music
management
program
like
one
will
work
class
week
using
computer
download
run
code
make
sure
works
environment
read
reading
code
important
skill
one
beginning
programmers
ignore
often
sure
code
easy
read
novel
need
go
carefully
ask
works
let
intimidate
just
take
one
function
time
lab
work
part
partner
lab
choose
partner
assignment
make
sure
ta
knows
partner
remember
choose
different
partner
lab
assignment
work
partner
week
make
sure
know
partner's
name
first
last
contact
information
email
cellphone
whatever
case
one
make
lab
prepare
lab8
py
file
previous
labs
including
line
like
paula
programmer
11223344
andrew
anteater
44332211
ics
31
lab
sec
7
lab
asst
8
definitions
familiar
course
namedtuple
'course'
'dept
num
title
instr
units'
field
string
except
number
units
ics31
course
'ics'
'31'
'intro
programming'
'kay'
4
0
ics32
course
'ics'
'32'
'programming
libraries'
'thornton'
4
0
wr39a
course
'writing'
'39a'
'intro
composition'
'alexander'
4
0
wr39b
course
'writing'
'39b'
'intermediate
composition'
'gross'
4
0
bio97
course
'biology'
'97'
'genetics'
'smith'
4
0
mgt1
course
'management'
'1'
'intro
management'
'jones'
2
0
student
namedtuple
'student'
'id
name
level
major
studylist'
strings
except
studylist
list
courses
sw
student
'11223344'
'anteater
peter'
'fr'
'psb'
ics31
wr39a
bio97
mgt1
sx
student
'21223344'
'anteater
andrea'
'so'
'cs'
ics31
wr39b
bio97
mgt1
sy
student
'31223344'
'programmer
paul'
'fr'
'cog
sci'
ics32
wr39a
bio97
sz
student
'41223344'
'programmer
patsy'
'sr'
'psb'
ics32
mgt1
studentbody
sw
sx
sy
sz
1
define
function
students
level
takes
list
students
string
representing
class
level
'fr'
'so'
returns
list
students
whose
class
level
matches
parameter
kind
task
called
filtering
takes
list
returns
just
selected
items
list
according
selection
criterion
case
matching
class
level
2
define
function
students
majors
another
filtering
task
takes
list
students
list
strings
string
represents
major
returns
list
students
majors
specified
list
3
define
function
students
class
takes
list
students
two
strings
department
name
course
number
'ics'
'31'
returns
list
students
enrolled
specified
class
include
definitions
functions
second
midterm
def
course
equals
c1
course
c2
course
bool
'''
return
true
department
number
c1
match
department
number
c2
false
otherwise
'''
def
course
studylist
course
sl
'list
course'
bool
'''
return
true
course
equals
course
list
sl
equality
means
matching
department
name
course
number
false
otherwise
'''
def
student
enrolled
student
department
str
coursenum
str
bool
'''
return
true
course
department
course
number
student's
studylist
false
otherwise
'''
4
define
function
student
names
takes
list
students
returns
list
just
names
students
called
mapping
operation
apply
one
operation
extracting
name
case
every
item
list
collect
results
5
using
similar
filtering
mapping
operations
can
easily
compute
results
like
following
list
students
majors
school
ics
majors
'cs'
'cse'
'bim'
'infx'
'cgs'
'se'
'ics'
list
names
students
majors
school
ics
number
students
majors
school
ics
called
reducing
operation
sometimes
folding
accumulating
reduces
sequence
single
value
adding
items
list
names
seniors
majors
school
ics
number
seniors
majors
school
ics
percentage
majors
school
ics
seniors
number
freshmen
majors
school
ics
enrolled
ics
31
average
number
units
freshmen
ics
31
enrolled
quantity
described
write
statement
short
series
statements
compute
print
enhance
test
data
collection
can
run
meaningful
tests
may
share
test
data
classmates
outside
pairs
download
icstunes
program
lab
machine
whatever
machine
partner
using
run
make
sure
works
work
part
may
changes
copies
icstunes
py
file
downloaded
use
lab8
py
file
parts
assignment
1
write
function
called
song
str
takes
song
returns
string
containing
song's
information
easily
readable
format
suitable
printing
can
choose
exact
layout
write
function
called
album
str
takes
album
returns
string
containing
album's
information
including
song
str
information
song
album
easily
readable
format
suitable
printing
test
functions
printing
couple
sorted
collections
first
part
icstunes
file
finally
write
function
called
songdisplay
str
takes
songdisplay
returns
string
containing
information
easily
readable
form
suitable
printing
test
using
results
top
played
located
bottom
icstunes
file
2
previously
albums'
year
title
length
id
write
key
function
call
sort
method
sort
collection
music
number
tracks
album
lowest
highest
print
resulting
collection
using
album
str
next
sort
collection
music
key
rearrange
perform
number
tracks
sorting
task
calling
collection
sort
printing
resulting
sorted
collection
3
write
funciton
called
unplayed
songs
takes
music
collection
list
albums
returns
list
songdisplays
one
song
never
played
print
resulting
list
using
songdisplay
str
please
note
go
without
saying
point
print
statement
go
inside
unplayed
songs
function
function
specified
returns
list
songdisplays
print
result
calling
program
call
function
problem
specifies
4
write
function
called
length
songdisplay
takes
songdisplay
returns
length
song
quick
easy
5
write
function
called
favorite
album
takes
list
albums
returns
album
favorite
define
favorite
album
one
user
spent
time
listening
total
time
user
spent
listening
album
computed
play
counts
song
lengths
try
work
function
together
learn
use
following
hints
totally
stuck
take
just
one
time
write
function
song
listening
time
takes
single
song
returns
total
number
seconds
user
spent
listening
see
ii
write
function
album
listening
time
takes
album
returns
total
listening
time
songs
album
together
iii
use
sort
collection
sort
functions
defined
implement
favorite
album
figure
hand
album
collection
music
greatest
listening
time
okay
collaborate
classmates
outside
partnership
specific
fact
print
using
album
str
course
result
calling
favorite
album
collection
music
see
matches
hint
songdisplays
involved
part
6
generalize
top
played
function
make
apply
broader
range
criteria
just
play
counts
follows
write
function
called
top
takes
list
albums
number
plus
two
additional
parameters
name
function
can
use
sort
key
comparing
albums
boolean
true
want
highest
values
false
want
lowest
thus
use
new
top
produce
result
top
played
calling
top
music
3
play
count
songdisplay
true
use
produce
10
shortest
songs
calling
top
music
10
length
songdisplay
false
7
total
listening
time
way
determining
favorite
album
generalize
favorite
album
funciton
writing
function
called
favorite
album2
takes
list
albums
second
argument
favorite
measurement
function
favorite
album2
can
apply
album
comparing
results
determine
favorite
call
favorite
album2
behave
way
call
original
favorite
album
function
favorite
album2
music
album
listening
time
write
least
one
example
favorite
measurement
function
total
listening
time
test
favorite
album2
function
applying
new
function
hint
songdisplays
involved
part
8
music
manager
programs
typically
provide
search
box
can
type
keyword
program
searches
collection
songs
containing
keyword
title
artist
album's
title
write
function
called
collection
search
behaves
way
taking
collection
string
parameters
returning
list
songdisplays
songs
whose
title
artist
album
title
include
string
hope
notice
task
similar
one
already
done
recent
lab
9
submit
icstunes
py
file
including
modifications
original
code
modify
via
checkmate
running
file
demonstrate
operation
part
problem
time
permits
take
opportunity
go
back
finish
previous
weeks'
lab
problems
complete
point
less
credit
let
gain
experience
problems
provided
may
current
partner
individually
remember
partner
must
complete
partner
evaluation
form
submit
individually
connecting
eee
uci
edu
choosing
survey
tool
lab
section
ics
31
make
sure
know
partner's
name
first
last
can
evaluate
right
person
please
complete
evaluation
end
day
friday
saturday
morning
latest
turn
submit
via
checkmate
lab8
py
file
containing
solutions
part
icstunes
py
file
solutions
part
remember
said
previous
labs
rereading
assignment
rerunning
python
files
also
remember
student
must
complete
partner
evaluation
form
logging
eee
uci
edu
selecting
survey
tool
evaluations
contribute
class
participation
score
written
david
kay
fall
2012
ics
31
based
part
assignments
ics
h21
informatics
41
modified
david
kay
winter
2013
david
kay
kay
uci
edu
wednesday
february
27
2013
11
38
