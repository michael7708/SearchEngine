source code super ego £` join 
superego 
source
code
super
ego
£`
join
last
updated
2
13
2013
introduction
super
ego
fast
memory
algorithm
performs
well
studied
similarity
join
operation
known
£`
join
given
two
dimensional
datasets
parameter
£`
task
£`
join
find
pairs
points
distance
£`
often
euclidean
distance
used
compute
distance
distance
defined
lp
norm
operation
often
employed
data
mining
areas
finding
pairs
similar
objects
objects
first
mapped
feature
representation
dimensional
space
challenge
perform
£`
join
efficiently
super
ego
achieves
state
art
results
cite
using
super
ego
code
please
cite
dmitri
kalashnikov
super
ego
fast
multi
dimensional
similarity
join
vldb
journal
2013
download
paper
publication
describes
super
ego
detail
bibtex
entry
publications
article
vldbj13
dvk
author
dmitri
kalashnikov
title
super
ego
fast
multi
dimensional
similarity
join
journal
vldb
journal
year
2013
downloading
code
super
ego
code
can
de
downloaded
superego
code
zip
license
superego
data
zip
super
ego
implemented
code
designed
unix
generalthe
code
tested
mac
os
ver
10
8
2gcc
4
7
used
compile
code
install
gcc
4
7
mac
install
macport
sudo
port
install
gcc47code
generated
gcc
faster
default
compiler
compiling
code
unzip
superego
code
zip
file
code
inside
super
ego
folder
main
file
test
cpp
unzip
sample
dataset
file
resulting
file
colorhist
txt
edit
const
file
set
desired
data
dimensionality
num
dim
path
input
file
data
file
edit
mak
batch
file
change
path
gcc's
compiler
located
system
compile
run
mak
inside
super
ego
folder
compilation
will
produce
executable
file
called
index
running
code
index
eps
sz
sz
skew
num
thread
options
epsthe
value
£`
use
£`
join
szcardinilaity
dataset
thousands
specifying
68
corresponds
68
000
szcardinilaity
dataset
thousands
specifying
25
corresponds
25
000
skewparameter
skew
can
set
0
2
3
mean
0
uniform
code
will
generate
uniform
dimensional
datasets
2
file
code
will
load
dimensional
data
file
specified
const
3
uniform
self
join
code
will
generate
uniform
join
num
threadthe
number
parallel
threads
execution
use
best
number
typically
corresponds
level
parallelism
machine
also
can
determined
experimentally
per
machine
increasing
starting
1
observing
value
performance
best
examples
1
performing
£`
join
uniform
datasets
£`
0
1
68
000
25
000
number
threads
8
dimensionality
generated
data
will
determinied
num
dim
varible
const
file
index
0
1
68
25
0
8
2
performing
self
join
uniform
datasets
£`
0
2
45
000
number
threads
4
dimensionality
generated
data
will
determinied
num
dim
varible
const
file
index
0
2
45
45
3
4
3
performing
self
join
real
dataset
colorhist
£`
0
1
whose
cardiniality
68
000
using
8
threads
const
variables
num
dim
data
file
set
32
path
colorhist
txt
respectively
code
recompiled
index
0
1
68
68
2
8
back
kalashnikov's
homepage
copyright
2013
dmitri
kalashnikov
rights
reserved
