

xbif
parser
reads
xbif
file
converts
simple
file
format
author
radu
marinescu
import
sys
xml
dom
import
minidom
class
xbifparser
variables
probabilities
observations
0
id2name
def
name2id
self
var
return
self
variables
var
0
def
read
self
filename
print
'parsing
file
'
filename
xmldoc
minidom
parse
filename
self
observations
0
variables
var
xmldoc
getelementsbytagname
'variable'
name
''
size
0
observed
1
child
var
childnodes
child
nodename
u'name'
name
child
childnodes
0
nodevalue
encode
'ascii'
elif
child
nodename
u'values'
size
int
child
childnodes
0
nodevalue
encode
'ascii'
elif
child
nodename
u'observed'
observed
int
child
childnodes
0
nodevalue
encode
'ascii'
self
observations
self
observations
1
id
len
self
variables
self
variables
name
id
size
observed
self
id2name
id
name
probabilities
cpt
xmldoc
getelementsbytagname
'probability'
scope
table
child
cpt
childnodes
child
nodename
u'for'
ch
child
childnodes
0
nodevalue
encode
'ascii'
scope
ch
elif
child
nodename
u'given'
par
child
childnodes
0
nodevalue
encode
'ascii'
scope
par
elif
child
nodename
u'table'
table
child
childnodes
0
nodevalue
encode
'ascii'
self
probabilities
scope
0
scope
table
print
data
v0
v1
self
variables
iteritems
print
v0
v1
p0
p1
self
probabilities
iteritems
print
p0
p1
def
write
self
filename
try
open
filename
'w'
print
'writing
file
'
filename
header
write
'network
unknown
n'
write
'f
lsb
n'
self
observations
write
'e
0
n'
else
write
'e
yes
n'
self
observations
write
'
n'
len
self
variables
variables
var
keys
self
id2name
keys
var
keys
sort
id
var
keys
name
self
id2name
id
content
self
variables
name
cpt
self
probabilities
name
parents
len
cpt
0
1
self
observations
write
'v
n'
content
0
content
1
parents
name
else
write
'v
n'
content
0
content
1
content
2
parents
name
probabilities
id
var
keys
name
self
id2name
id
cpt
self
probabilities
name
scope
cpt
0
write
'p
'
scope
1
write
'
'
self
name2id
write
'
n'
self
name2id
scope
0
table
cpt
1
chunk
table
split
len
chunk
0
write
'
'
chunk
strip
write
'
n'
close
print
'done
'
except
close
print
'error'
raise
xbif
xbifparser
infilename
sys
argv
1
xbif
read
infilename
outfilename
infilename
rstrip
xbif
simple
xbif
write
outfilename
