pair programming 
pair programming 
pair
programming
extreme
programming
xp
new
agile
programming
methodology
constructing
maintaining
programs
becoming
quite
popular
medium
size
programming
projects
xp
might
called
sociological
oriented
approach
developing
software
breaks
engineering
oriented
approaches
developing
software
concentrating
interactions
among
clients
programmers
interactions
programmers
programmers
course
will
focus
two
major
aspects
xp
first
aspect
xp
testing
xp
tests
detailed
code
written
programmers
will
know
coding
finished
code
passes
tests
dovetails
nicely
programming
via
iterated
enhancement
specify
test
every
new
phase
program
pass
later
will
use
driver
programs
test
classes
real
xp
testing
automated
much
possible
course
will
perform
tests
manually
will
discuss
junit
easy
use
system
automated
testing
second
aspect
xp
pair
programming
xp
two
programmers
must
always
work
together
writing
code
one
programmer
driver
person
keyboard
charge
changes
made
program
sitting
next
driver
navigator
observes
code
entered
spotting
problems
thinking
simplifications
helping
programming
style
debuging
errors
inventing
verifying
tests
generally
helping
problem
solving
needed
write
programs
pair
programming
dialog
two
people
trying
simultaneously
program
analyze
design
test
understand
together
program
better
conversation
many
levels
assisted
focused
computer
conversational
nature
pair
programming
also
enhances
software
development
process
beck
extreme
programming
explained
although
may
seem
stronger
programmer
will
work
studies
show
programmers
can
participate
benefit
weaker
one
sees
stronger
one
thinks
works
stronger
one
explaining
things
weaker
one
sounding
board
decisions
ends
better
understanding
program
also
bugs
confusing
one
programmer
often
transparent
another
finally
sometimes
one
programmer
will
see
simplification
see
ultimately
code
produced
together
better
reviewed
two
sets
eyes
concept
pair
peer
pressure
also
shown
useful
term
means
member
pair
pressured
perform
well
mundane
level
term
can
mean
time
made
work
together
students
show
time
work
working
much
easier
come
excuse
delay
starting
work
context
learning
programming
pair
programming
allows
two
students
collaborate
closely
closely
working
independently
long
programming
session
students
switch
driver
navigator
every
hour
programming
assignments
involve
multiple
programs
another
way
approach
pair
programming
let
student
driver
one
whole
program
changing
caution
many
ways
subvert
learning
experience
pair
programming
can
provide
even
numbered
programming
assignments
odd
numbered
ones
multi
program
assignment
write
half
programs
write
half
hand
joint
work
stronger
programmer
always
drive
let
navigate
sometimes
subversion
unintentional
stronger
student
just
takes
control
let
weaker
student
anything
since
much
course
grade
based
students
perform
class
programming
exams
must
complete
students
taking
shortcuts
programs
semester
will
ill
prepared
exams
partner
letting
participate
adequately
please
contact
can
resolve
problem
irreparable
harm
done
following
nine
minute
pair
programming
video
introduces
pair
programming
students
discusses
similar
list
do's
don'ts
page
click
either
flash
mov
wmv
see
movie
might
take
minutes
load
also
print
copy
accompanying
worksheet
alternative
shorter
video
bit
rougher
realistic
pair
programming
goals
demo
semester
assignments
pair
programming
will
prohibited
especially
early
ones
will
required
will
allowed
optional
assignment
will
indicate
rules
effect
relation
pair
programming
