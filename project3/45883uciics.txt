ics 32 winter 2013 code example the canvas widget object oriented programming using tkinter 
canvases custom drawing object oriented programming using tkinter 
ics
32
winter
2013
news
course
reference
schedule
project
guide
code
examples
alex
ics
32
winter
2013
code
example
canvas
widget
object
oriented
programming
using
tkinter
background
example
reworking
one
examples
section
9
3
perkovic
text
calling
scribble
application
consists
window
user
can
draw
holding
primary
mouse
button
moving
mouse
around
demonstrates
two
new
techniques
use
canvas
widget
custom
drawing
perhaps
importantly
use
object
oriented
programming
simplify
gui
implementation
canvas
widget
tkinter
library
includes
widget
called
canvas
provides
ability
programmatic
drawing
shapes
like
lines
rectangles
ovals
arcs
see
can
useful
tool
want
build
gui
particular
look
want
provide
user
ability
free
form
drawing
getting
started
canvas
widget
straightforward
create
one
way
create
widget
calling
tkinter
canvas
constructor
setting
options
using
keyword
arguments
canvas
tkinter
canvas
width
500
height
400
background
'white'
note
practice
also
want
set
master
option
participate
layout
canvas
object
can
draw
calling
one
different
methods
couple
demonstrated
canvas
create
line
100
150
250
275
fill
'black'
canvas
create
oval
125
175
250
225
outline
'black'
fill
'red'
first
one
draws
line
point
100
150
point
250
275
line's
color
black
second
one
draws
oval
ellipse
actually
fits
inside
box
drawn
bounded
top
left
coordinate
125
175
bottom
right
coordinate
250
225
oval
outline
black
filled
red
resulting
picture
looks
like
coordinates
canvas
widget
uses
coordinate
system
typical
two
dimensional
computer
graphics
will
differ
somewhat
might
become
accustomed
learned
algebra
two
dimensional
computer
graphics
customary
particular
point
described
coordinate
just
algebra
however
origin
point
0
0
generally
top
left
corner
coordinates
increase
move
right
coordinates
increase
move
example
area
measuring
500
pixels
wide
400
pixels
tall
coordinate
system
will
typically
look
like
0
0
499
0
0
399
499
399
see
canvas
might
resized
gets
little
trickier
get
exactly
want
see
work
around
issue
later
example
bound
methods
python
functions
python
objects
seen
previously
functions
python
objects
allows
us
store
variables
pass
parameters
return
functions
example
function
squares
number
def
square
return
function
takes
one
argument
function
applies
every
element
list
returns
list
results
def
apply
elements
results
element
elements
results
append
element
return
result
square
elements
list
simply
calling
apply
passing
square
function
parameter
1
2
3
4
5
apply
square
1
4
9
16
25
note
passed
square
function
parameter
follow
parentheses
simply
named
want
call
function
pass
result
apply
instead
wanted
pass
function
expression
square
3
calls
square
function
passes
argument
3
evaluates
function's
result
expression
square
evaluates
function
object
can
call
following
parentheses
passing
argument
methods
functions
can
become
bound
methods
seen
classes
contain
methods
called
objects
class
example
suppose
class
similar
one
previous
code
example
class
counter
def
init
self
self
count
0
def
count
self
self
count
1
return
self
count
def
reset
self
new
count
self
count
new
count
given
class
seen
can
call
methods
one
two
ways
counter
reset
3
counter
reset
3
call
reset
3
typical
way
write
call
method
says
want
call
reset
method
object
however
python
internally
translates
call
notation
saw
counter
reset
3
normally
write
makes
clearer
relationship
arguments
call
parameters
method
assigned
self
first
argument
passed
3
assigned
new
count
second
leave
parentheses
like
square
function
previously
things
get
interesting
counter
reset
function
counter
reset
0x02e23030
reset
bound
method
counter
reset
main
counter
object
0x02e21670
funny
looking
hexadecimal
numbers
akin
memory
addresses
probably
different
important
types
interesting
counter
reset
returns
function
object
just
like
square
wanted
call
need
pass
arguments
requires
counter
reset
method
requires
two
arguments
counter
object
self
integer
new
count
reset
returns
bound
method
object
instead
bound
method
one
self
parameter
already
bound
object
preceding
dot
case
want
call
bound
method
pass
missing
arguments
case
just
one
new
count
see
works
consider
following
example
counter
reset
3
reset
3
first
two
lines
set
variable
counter
reset
function
call
function
requires
two
arguments
want
call
pass
self
new
count
second
two
lines
set
variable
bound
method
reset
instead
bound
method
requires
one
argument
since
self
already
bound
call
passing
one
argument
bound
new
count
writing
object
oriented
guis
tkinter
based
gui
written
using
event
based
programming
techniques
means
ask
tkinter
handle
control
flow
watch
inputs
notify
us
events
occur
registered
interest
kinds
event
handler
functions
like
ones
handle
command
behavior
button
widget
take
parameters
take
single
parameter
event
object
describes
event
use
functions
opposed
methods
event
handlers
information
available
information
passed
might
know
something
event
occurring
now
access
information
happened
makes
even
simple
application
like
scribble
application
difficult
write
however
saving
grace
python
classes
object
oriented
programming
seen
classes
way
bring
together
data
operations
know
manipulate
data
objects
create
classes
just
store
things
know
things
data
store
case
guis
built
using
tkinter
beautifully
solve
problem
ensuring
necessary
information
available
event
handlers
event
handlers
methods
called
object
methods
will
access
event
object
passed
also
information
stored
within
object
long
necessary
information
stored
object's
attributes
will
available
event
handler
methods
using
bound
methods
event
handlers
trick
use
method
event
handler
tkinter
will
call
event
handler
like
function
pass
say
single
argument
event
object
can
method
also
requires
self
argument
parameter
answer
lies
bound
methods
presented
earlier
event
handler
bound
method
self
argument
already
bound
tkinter
need
pass
tkinter
calls
event
handler
passes
event
object
actually
calling
method
takes
self
event
object
meaning
access
two
things
needs
information
event
happening
now
form
event
objectany
necessary
information
things
happened
stored
attributes
self
use
bound
methods
event
handlers
demonstrated
code
example
code
link
scribble
application
built
lecture
slight
modifications
scribble
py
