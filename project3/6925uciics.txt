cs 154 lab 3 register file 
lab 3 
register
file
lab
3
objective
lab
assignment
design
implement
register
file
register
file
implements
32
registers
32
bits
wide
register
number
0
zero
register
content
always
0
changed
register
1
31
store
value
assigned
access
registers
beyond
31
allowed
use
data
address
control
ports
interface
register
file
3
data
ports
2
reading
1
writing
clock
cycle
values
2
registers
can
read
2
read
ports
1
2
1
can
written
write
port
3
data
ports
32
bit
wide
use
address
ports
rd
addr
1
rd
addr
2
wr
addr
supply
addresses
registers
will
read
written
example
rd
addr
1
set
1
rd
addr
2
set
3
value
register
1
3
can
read
data
port
1
2
time
addition
ports
register
file
needs
use
wr
en
control
signal
write
value
port
register
addressed
wr
addr
register
file
register
file
also
needs
clock
signal
port
clk
write
operations
synchronized
clock
will
need
array
vectors
implement
register
file
specification
due
monday
4
23
2012
3pm
draw
block
diagram
register
file
described
make
things
easier
register
file
8
registers
can
represent
middle
registers
show
register
0
1
2
7
may
use
following
basic
blocks
32
bit
register
write
enable
mux
3
8
decoder
register
write
enable
signal
literally
enables
writing
register
rising
edge
clock
signal
arrives
register
will
update
value
wr
en
1
otherwise
nothing
will
hapen
figure
1
32
bit
register
write
enable
mux
selectes
one
8
inputs
sends
output
according
3
bit
selection
signal
left
figure
2
multiplexer
8
32
bit
inputs
3
8
decoder
enabled
translates
3
bit
input
example
address
one
8
outputs
example
drive
8
enable
siganls
8
different
devices
figure
3
3
8
decoder
pay
attention
wiring
label
wires
proper
signal
names
mark
width
design
due
friday
4
28
2012
11
45pm
task
design
register
file
module
32
registers
template
vhdl
files
provided
interface
ports
already
defined
need
add
code
functionality
files
make
work
make
change
interface
since
using
array
implement
register
file
decoder
mux
component
implemented
automatically
array
reference
implementation
straight
forward
please
refer
prof
veidenbaum's
slides
slide
5
6
lecture
5
register
file
something
like
regfile
array
0
31
std
logic
vector
31
downto
0
declaration
slides
many
named
subtypes
constants
useful
will
good
idea
keep
declarations
seperate
package
future
labs
index
array
elements
type
integer
convert
signal
type
std
logic
vector
integer
use
funciton
integer
declared
ieee
numeric
std
package
argument
function
either
std
logic
unsigned
std
logic
signed
woudl
first
cast
std
logic
vector
std
logic
unsigned
pass
integer
example
use
wr
addr
array
index
use
regfile
integer
unsigned
wr
addr
use
process
implement
writing
operation
think
signals
sensitivity
list
wr
addr
wr
en
clk
pay
special
attention
r0
wr
addr
00000
update
happen
verification
due
friday
4
28
2012
11
45pm
test
bench
need
test
register
file
module
following
aspects
addressing
must
make
sure
reading
writing
specific
register
want
addresses
data
ports
need
tested
done
first
following
tests
will
test
register
must
make
sure
able
access
register
write
unique
values
different
registers
read
see
read
written
content
must
make
sure
register
holds
actually
written
stuck
errors
exist
bit
register
must
tested
write
000
0
111
1
register
read
see
read
written
input
signals
test
bench
1
clock
long
go
high
short
time
rising
clock
edge
use
assert
instruction
expected
values
detect
errors
produce
lab
block
diagram
register
file
designed
8
registers
please
submit
specification
monday
4
23
2012
3pm
vhdl
design
vhdl
test
bench
screen
shots
addressing
content
tests
please
submit
design
verification
friday
4
27
2012
11
45pm
