ics 65 fall 2012 schedule 
schedule 
ics
65
fall
2012
news
course
reference
schedule
project
guide
code
examples
alex
ics
65
fall
2012
schedule
assigned
readings
savitch
text
5th
edition
good
idea
skim
assigned
reading
lecture
main
ideas
attend
lecture
go
assigned
reading
fill
details
missed
initial
skim
reading
lecture
lectures
little
reading
corresponding
cases
block
reading
corresponds
one
lecture
cases
material
covered
lecture
discussed
textbook
datelecture
topicsreadingsproject
dueweek
0th
9
27
course
introduction
goalsthe
challenge
learning
second
programming
languagethe
challenge
learning
second
programming
languagehistorical
perspective
philosophical
backdropthe
design
goals
week
1tu
10
2
main
functiontypes
static
type
checkingbasic
built
data
typesexpressions
statementscontrol
structuresthe
distinction
lvalues
rvaluesdeclaration
vs
definitioncalling
declaring
functionsparameters
arguments
ch
1ch
2
1
2
3ch
3
th
10
4
behind
scenes
programthe
von
neumann
architecture
briefly
registers
instruction
pointers
stack
pointers
frame
pointerscalling
conventionsreferencespass
value
vs
pass
reference
ch
4
1
week
2tu
10
9
function
overloading
briefly
default
argumentsseparate
compilation
linkingthe
include
directiveguarding
multiple
inclusion
ch
4
2ch
11
1
th
10
11
std
string
typebehind
scenes
program
continued
heap
also
known
free
store
heap
based
memory
allocationthe
importance
cleaning
heap
allocated
memorystrings
parameterspointersnew
deletethe
nullptr
constant
ch
9
1ch
9
3ch
10
1
week
3tu
10
16
single
dimension
arraysstatically
allocated
arraysdynamically
allocated
arrayshow
arrays
pointers
relatedpassing
arrays
parameters
functionspointer
arithmeticthe
delete
operatorc
style
strings
mostly
avoid
constants
const
qualifierhow
const
affects
references
pointers
ch
5
1
5
3ch
10
2
th
10
18
need
creating
new
typesstructuresmember
variables
structurestatically
dynamically
allocated
structuresthe
operatorsbehind
scenes
program
continued
structures
laid
memorywhy
padding
sometimes
added
member
variables
structurethe
lack
distinction
built
types
user
defined
typesclasses
ch
6
week
4tu
10
23
declaring
classesaccess
control
public
private
constructorsmember
variables
member
functions
classthe
pointerseparating
interface
implementationmaking
class
const
awarestatically
dynamically
allocated
objects
ch
7
1
7
2
10
24project
1
due
11
59pmth
10
25
managing
object
lifetimedestructorscopy
constructorsoverloading
assignment
operatorguarding
self
assignmentbuilding
well
behaved
vector
class
ch
10
3
week
5tu
10
30
midterm
regular
lecture
time
location
th
11
1
std
standard
librarystandard
collections
vector
listiterators
ch
19
week
6tu
11
6
iterators
continued
auto
type
inference
briefly
generic
algorithmsstd
function
lambda
expressions
11
7project
2
due
11
59pmth
11
8
inheritanceconstructors
derived
classesorder
construction
destruction
class
membersvirtual
functions
polymorphism
ch
14ch
15
week
7m
11
12university
holiday
veterans'
daytu
11
13
destructors
sometimes
need
virtual
constructors
pure
virtual
functions
abstract
base
classesbehind
scenes
program
continued
inheritance
polymorphism
implemented
virtual
functions
added
cost
th
11
15
implicit
type
conversionsexplicit
constructorsoperator
overloading
ch
8
week
8m
11
19project
3
due
11
59pmtu
11
20
operator
overloading
continued
friend
functions
friend
classestemplate
functionswhy
provides
lousy
error
messages
misuse
template
ch
16
1
th
11
22university
holiday
thanksgiving
lecture
today
11
23university
holiday
thanksgivingweek
9tu
11
27
designing
classes
carefullycontractspreconditions
postconditionsclass
invariantsdocumenting
contractsexceptions
throwing
catching
exceptionsexception
safety
making
sure
contracts
hold
true
even
exceptions
thrown
ch
18
th
11
29
exception
safety
guaranteesthe
basic
guarantee
strong
guarantee
throw
guaranteeimplementing
exception
safe
version
vector
class
template
week
10m
12
3project
4
due
11
59pmtu
12
4
implementing
standard
library
compliant
containerwhat
needs
implemented
order
standard
library
complianthow
implement
iterators
begin
end
rbegin
rend
th
12
6
inheriting
implementations
interfacesprivate
protected
inheritance
su
12
9project
5
due
11
59pmfinals
weektu
12
11
final
exam
4
00pm
6
00pm
ics
174
