syllabus 

syllabus
fundamental
data
structures
ics
23
lecture
labs
1
3
winter
2013
introduction
page
contains
material
will
important
useful
throughout
entire
quarter
consider
contract
students
please
read
now
keep
handy
future
reference
can
search
page
browser
specific
information
typing
ctrl
selecting
edit
find
page
windows
ie
edit
find
page
firefox
entering
text
want
locate
many
questions
might
course
quarter
already
answered
inside
document
become
familiar
contents
also
contains
lots
good
advice
getting
course
catalog
description
focuses
implementation
mathematical
analysis
fundamental
data
structures
algorithms
covers
storage
allocation
memory
management
techniques
prerequisites
ics
22
cse
22
grade
better
informatics
42
grade
better
engineering
eecs
40
cse
23
one
course
ics
23
cse
23
may
taken
credit
note
will
spend
weeks
introducing
building
fundamental
java
topics
important
course
least
introduced
ics
22
interfaces
standard
collection
classes
linked
lists
trees
recursive
processing
linked
lists
trees
big
notation
ensure
students
learned
java
know
everything
think
fundamentally
important
using
vocabulary
will
use
course
blow
first
weeks
even
seems
like
pure
review
use
time
solidify
extend
knowledge
java
fundamentals
students
done
java
programming
recently
must
re
aquire
skills
quickly
part
course
voyage
discovery
seeking
new
landscapes
new
eyes
proust
course
philosophy
goal
ics
23
students
acquire
fluency
thinking
discussing
writing
programs
java
using
appropriate
abstractions
specifically
four
major
pillars
demonstrate
skill
solving
problems
programming
data
types
java
collection
classes
specifically
abstractions
stack
queue
priorityqueue
list
set
map
equivalenceclass
graph
iterators
demonstrate
skill
using
low
level
java
data
structures
primarily
arrays
self
referential
linked
structures
combinations
implement
data
types
correctly
efficiently
understand
big
oh
£s
big
omega
£c
big
theta
notation
demonstrate
ability
use
notations
analyze
implementations
collection
classes
analytically
empirically
understand
usefulness
limits
notations
understand
java
general
programming
ideas
aid
1
2
interfaces
iterators
linked
lists
trees
recursion
hashing
caching
anonymous
classes
decorator
adapter
patterns
eclipse
debugger
etc
will
spend
first
weeks
quarter
exploring
properties
collection
classes
using
write
programs
studying
simple
array
implementations
implementing
simple
collections
via
linked
lists
afterward
will
learn
advanced
data
structures
use
implement
complicated
abstractions
efficiently
course
emphasizes
object
oriented
programming
oop
foundational
unit
oop
class
syntactic
structure
describes
encapsulates
behavior
methods
implemented
control
structures
state
fields
implementing
data
structures
objects
classes
provide
excellent
motivation
context
exploring
interesting
aspects
programming
can
view
software
collection
interacting
objects
constructed
classes
often
many
objects
constructed
class
main
programming
methodology
will
learn
employ
tdd
test
driven
development
will
use
drivers
junit
test
code
junit
tests
can
automatically
test
retest
make
changes
passes
tests
meaning
may
correct
tests
might
insufficient
will
also
study
actively
use
java
tools
browsing
debugging
documenting
large
programs
programming
style
particularly
important
topic
understand
programming
really
need
develop
appropriate
aesthetics
allow
us
separate
elegant
programs
hacks
writing
activity
must
also
learn
self
critical
creations
can
continually
improve
skill
difficult
acquire
importance
extends
well
beyond
domain
programming
finally
become
expert
discipline
must
master
terminology
fluency
technical
terms
allows
us
communicate
even
think
accurately
concisely
therefore
materials
course
will
define
illustrate
repeatedly
use
many
important
technical
terms
concerning
programming
take
time
required
master
old
chinese
proverb
says
first
step
towards
wisdom
calling
things
right
names
textbook
recommended
primary
materials
course
will
come
lectures
notes
lectures
uci
bookstore
sells
textbooks
traditionally
used
throughout
ics
21
22
23
course
sequence
took
ics
22
will
probably
book
already
contains
much
useful
material
fundamentals
java
covers
quite
advanced
topics
well
horstmann
java
concepts
compatible
java
5
6
7
6th
edition
wiley
125
new
95
used
useful
book
introduction
java
book
reference
java
language
use
class
ics
22
23
following
book
recommended
goodrich
tamassia
data
structures
algorithms
java
fifth
edition
2010
wiley
130
new
100
used
can
get
cheap
fourth
edition
2006
will
suffice
prices
uci
bookstore
books
also
available
used
internet
see
directtextbook
crawls
web
cheap
prices
forget
account
shipping
costs
delivery
time
buy
uci
bookstore
used
copies
books
amazon
cheapest
listed
50
computing
platforms
programming
environments
standard
computing
platforms
course
intel
based
pcs
running
windows
operating
system
os
macintosh
pcs
running
mac
os
operating
system
either
pc
running
linux
programming
courses
schools
moving
towards
model
students
use
computers
roommates
friends
complete
programming
assignments
software
used
ics
23
available
free
web
assuming
students
already
installed
web
browser
high
speed
connection
world
wide
web
via
campus
network
cable
dsl
line
programming
environment
will
use
eclipse
probably
version
3
7
2
integrated
development
environment
ide
including
project
manager
editor
compiler
debugger
class
browser
help
facility
etc
will
also
use
sun
java
compiler
runtime
system
probably
version
1
7
5
ide
software
others
useful
course
available
online
resources
link
see
course
software
near
top
talk
instructor
ta
immediately
experiencing
problems
computing
platform
typically
takes
days
everyone
correctly
downloaded
installed
necessary
software
learned
use
properly
using
software
integral
every
programming
assignment
quarter
best
aggressive
master
software
quickly
computers
ics
labs
addition
using
machines
students
can
coursework
machines
ics
labs
described
link
detail
main
upside
using
ics
labs
will
easy
get
ics
23
staff
help
main
downside
will
using
computer
unless
portable
bring
labs
get
best
worlds
read
following
learn
ics
lab
account
activation
ics
courses
often
schedule
lab
hours
complement
lecture
hours
students
can
learn
use
software
tools
work
programming
assignments
supervision
ics
23
staff
members
quarter
labs
meet
rooms
ics
189
ics
183
rooms
contains
45
dell
optiplex
computers
running
windows
7
necessary
course
software
labs
typically
open
class
use
weekdays
normal
hours
8
00am
8
00pm
closed
weekends
lab
ics
364
general
purpose
lab
courses
scheduled
typically
open
students
weekdays
weekends
extended
hours
mtuwtht
8
00am
10
pm
8
00am
8
00pm
sasu
12
00pm
noon
6
00pm
can
examine
lab
schedules
labs
uc
buget
cutbacks
past
years
ics
23
staff
members
will
present
ics
364
find
inconvenient
use
labs
rather
work
dorm
room
campus
ics
23
staff
will
also
provide
limited
online
help
instant
messaging
forums
messageboard
also
excellent
way
get
help
finally
although
machines
ics
labs
also
provide
external
storage
space
unix
system
excellent
idea
obtain
usb
memory
stick
backup
work
computer
labs
instructoroffice
hours
welcome
students
individually
small
groups
come
talk
office
hours
whenever
happen
office
door
open
need
talk
come
office
hours
please
call
can
arrange
alternative
time
meet
maybe
even
can
resolve
entire
issue
telephone
also
see
email
section
excellent
way
ask
short
questions
arrange
meetings
will
glad
talk
ics
21
22
23
courses
computer
science
uci
whatever
else
want
discuss
although
uci
large
school
ics
smaller
school
within
ics
promotes
opportunities
close
faculty
student
interaction
especially
instructors
lecturers
unfortunately
opinion
students
take
full
advantage
opportunity
uci
especially
encourage
students
problems
course
visit
immediately
know
asking
lot
demoralizing
come
confused
payoff
recognizing
situation
acting
immediately
tremendous
primary
reason
students
fail
thrive
programming
courses
fall
behind
work
often
initially
small
misunderstanding
cumulative
nature
course
even
small
misunderstanding
can
quickly
grow
big
one
often
can
quickly
diagnose
rectify
problem
one
one
like
surgery
bit
painful
first
long
term
beneficial
getting
help
fast
can
critically
affect
overall
performance
course
many
times
seen
students
start
performing
one
grade
level
higher
coming
get
help
office
hours
typical
visit
lasts
20
minutes
typically
waiting
finally
plan
hold
equivalent
office
hours
labs
means
plan
attend
labs
students
can
talk
private
matters
can
even
step
outside
talk
labs
great
place
discuss
programming
tools
easy
us
sit
together
work
together
instructoronline
hours
hold
online
hours
every
day
class
meets
sunday
monday
tuesday
wednesday
thursday
9
00pm
10
00pm
will
logged
onto
aim
aol
instant
messenger
richardepattis
times
already
member
aim
sign
service
free
using
system
will
able
instant
message
well
use
audio
voice
connection
headset
microphone
can
im
questions
can
also
cut
paste
code
message
please
aware
may
multiple
conversations
therefore
react
slowly
might
expect
instructor
email
small
question
one
requiring
little
back
forth
discussion
directly
contact
staff
please
ask
sending
email
pattis
ics
uci
edu
experience
act
writing
detailed
description
problem
detailed
enough
someone
physically
present
can
understand
often
leads
student
solution
problem
frequently
even
get
chance
read
email
receive
second
message
saying
please
ignore
earlier
message
solved
problem
believe
seeds
solution
sown
act
carefully
composing
first
email
message
quote
website
phenomenon
another
effective
debugging
technique
explain
code
someone
else
will
often
cause
explain
bug
sometimes
takes
sentences
followed
embarrassed
never
mind
see
wrong
sorry
bother
works
remarkably
well
can
even
use
non
programmers
listeners
one
university
computer
center
kept
teddy
bear
near
help
desk
students
mysterious
bugs
required
explain
bear
speak
human
counselor
kernighan
pike
practice
programming
pp
123
teaching
attending
meetings
try
answer
email
every
hours
day
normally
will
answer
email
sent
10
00pm
early
next
morning
typically
answer
next
morning
problems
late
night
problems
staff
help
resolve
please
send
email
summarizing
problems
go
work
something
else
really
late
go
sleep
planning
finish
assignments
early
can
protect
big
problem
arises
night
fixed
next
day
want
fix
problem
night
assignment
due
problems
ones
general
interest
class
send
email
students
course
post
question
one
message
board
forums
see
everyone
can
see
question
answer
students
can
answer
other's
questions
often
said
understand
something
can
explain
someone
else
teachers
often
understand
things
well
coursewide
email
mesage
board
forums
electronic
educational
environment
eee
uci
allows
create
maintain
course
wide
mailing
list
archive
messages
sent
forums
message
boards
asking
answering
discussing
questions
created
merged
mailing
list
ics
23
students
ics23
w13
classes
uci
edu
mostly
will
use
course
wide
mailing
list
broadcast
information
students
students
might
also
use
tell
everyone
class
included
something
importnat
example
checkmate
submission
system
created
following
forums
java
eclipse
lecture
material
programming
assignments
quizzes
exams
useful
create
question
general
interest
interest
many
students
course
just
post
question
appropriate
forum
example
lecture
note
programming
assignment
etc
contains
unclear
even
contradictory
information
ask
clarification
someone
staff
will
read
reply
whatever
questions
asked
forums
fact
read
question
know
answer
generally
something
contribute
topic
encourage
reply
well
help
resolve
problem
even
sooner
class
email
forums
appropriate
questions
relevant
students
course
directly
email
see
questions
individualistic
nature
obviously
students
neither
solicit
post
answers
take
home
quizzes
programming
assignments
anything
else
interpreted
academic
misconduct
discussed
greater
detail
discussion
assignments
issues
clarification
fine
email
forums
excellent
idea
read
email
check
forums
least
daily
certainly
whenever
coursework
keep
date
coursewide
discussions
reading
email
checking
forums
can
save
lot
time
confusion
special
mechanism
can
invoke
forum
email
new
information
added
either
one
email
new
item
digest
sent
late
night
items
added
day
staff
tas
lab
tutors
will
various
staff
members
assist
running
course
will
one
ta
primarily
assist
labs
ta
will
also
grade
programming
assignments
question
programs
graded
please
contact
ta
first
contact
questions
remain
tutors
will
primarily
help
students
debug
programs
scheduled
lab
hours
consulting
ta
lab
tutors
will
help
diagnose
computer
programming
problems
guide
toward
solution
will
help
learn
program
answering
questions
expect
write
programs
sometimes
come
staff
specific
question
will
show
solve
general
problem
patient
staff
just
trying
teach
recognize
solve
problems
classroom
information
class
expect
students
attend
class
daily
35
years
teaching
observed
strong
correlation
attending
class
understanding
material
ultimately
affects
grades
course
materials
world
wide
web
www
great
resource
just
important
coming
class
paying
attention
participating
volunteering
information
know
asking
questions
confused
encourage
participate
raising
hand
sometimes
may
finish
point
making
calling
please
keep
hand
want
speak
question
material
typically
means
explained
something
incorrectly
poorly
incompletely
students
will
soon
maybe
right
leave
classroom
question
best
us
correct
problem
immediately
class
someone
bringing
attention
summary
class
runs
dershowitz
principle
question
authority
raise
hand
first
class
decorum
expect
students
attend
class
daily
arriving
time
announcements
made
start
class
often
important
expect
students
neither
carry
private
conversations
use
computers
answer
email
surf
web
day
trade
stocks
perform
activities
unrelated
course
unless
responsible
someone's
life
cell
phone
turned
otherwise
set
operate
silent
mode
mine
will
set
rings
silently
please
leave
class
minimum
disruption
rest
students
answer
cell
phone
rings
audibly
class
will
charged
points
interrupting
class
finally
know
must
leave
early
please
sit
door
can
exit
quietly
overall
please
strive
considerate
class
member
fellow
students
calendar
see
lecture
schedule
notes
programming
assignments
weekly
schedule
grades
quizzes
will
assign
eight
take
home
quizes
ensure
everyone
keeping
pace
learning
course
material
able
express
technical
matters
english
java
quizzes
will
take
home
instrument
will
distributed
end
lab
friday
collected
start
lecture
following
monday
weekend
will
much
time
need
work
quizzes
need
clarification
problems
please
email
class
discussion
list
post
forum
post
code
quizzes
open
book
will
able
use
class
materials
materials
web
answer
questions
quizzes
also
open
computer
mean
may
use
computer
check
work
must
work
quizzes
soliciting
sharing
answers
students
programming
assignments
will
assign
five
programming
assignments
ensure
everyone
getting
necessary
hands
programming
experience
working
programs
will
acquire
solid
fine
tuned
understanding
course
material
well
gain
important
process
programming
skills
programs
will
typically
discussed
started
lab
due
submitted
electronically
two
weeks
later
11
30pm
typical
programming
assignment
will
3
lab
meetings
2
weekends
work
expect
spend
time
class
finishing
assignments
encourage
students
work
groups
two
programming
assignments
approach
called
pair
programming
one
student
pair
will
submit
parts
program
names
lab
numbers
code
files
apart
pair
can
get
general
help
anyone
instructor
ta
lab
tutors
friends
etc
programs
best
kind
help
get
oral
describe
problem
possibly
showing
code
get
oral
answer
understand
can
translate
code
instances
learning
may
neither
copy
transcribe
written
orally
parts
another
student's
program
submit
programs
grading
expected
understand
parts
improved
process
programming
skills
writing
debugging
students
complete
programs
way
will
well
prepared
class
programming
exams
students
get
much
help
purpose
accidentally
will
difficult
time
exams
can
impact
grade
will
submit
solutions
programming
assignments
special
web
page
records
time
submitted
promote
good
time
management
skills
submit
program
least
24
hours
due
will
receive
2
points
extra
credit
submit
program
48
hours
early
will
receive
3
points
can
gain
3
points
extra
credit
early
submission
60
point
assignment
extra
credit
equivalent
half
letter
grade
improvement
general
bad
idea
submit
programs
48
hours
early
typically
will
return
graded
programs
monday
wait
receive
submitting
new
program
two
weeks
sufficient
time
complete
programming
assignments
know
long
teaching
experience
students
work
ahead
deadlines
learn
less
stressed
envrionment
students
working
right
deadline
concerned
getting
right
answer
less
concerned
learning
anything
side
coin
will
accept
late
programs
without
kind
prior
request
prior
typically
mean
night
must
turn
work
time
turn
partially
working
program
time
will
receive
partial
credit
turn
anything
time
must
assume
work
program
will
receive
credit
therefore
always
turn
whatever
work
finished
official
due
time
written
exams
will
assign
one
midterm
written
exam
one
final
written
exam
ensure
everyone
successfully
integrating
material
taught
problems
will
similar
assigned
weekly
quizzes
including
code
mathematics
english
answers
drawing
pictures
written
exams
closed
book
will
able
use
notes
class
materials
taking
exams
mathematics
will
simple
will
allowed
use
calculators
will
know
compute
logarithms
base
2
simple
numbers
mostly
powers
1
000
best
way
study
exams
quizzes
programming
assignments
sometimes
material
related
programming
assignments
appear
exams
review
quizzes
programs
expect
students
able
problems
quickly
accurately
final
exam
comprehensive
will
cover
material
entire
quarter
concentrate
bit
material
presented
midterm
exam
classprogramming
exams
will
assign
two
class
programming
exams
taken
lab
periods
ensure
everyone
can
write
debug
programs
first
exam
will
focus
using
collection
classes
second
manipulating
arrays
self
referential
data
structures
linked
lists
trees
course
will
know
lots
general
material
programming
java
solve
problems
effectively
well
use
eclipse
ide
programming
exams
will
closed
book
will
able
access
copy
javadoc
standard
java
library
will
grade
programs
90
correctness
inapropriate
use
java
overly
complicated
inefficient
programs
will
penalized
10
code
will
need
write
will
similiar
written
prior
programming
assignments
solutions
andreturned
graded
work
will
link
eee
drop
box
course
web
will
drop
solutions
quizzes
programming
assignments
written
programming
exams
soon
due
another
reason
accept
late
work
expect
students
will
carefully
examine
solutions
immediate
feedback
note
best
time
study
solution
day
distribute
just
spent
good
amount
time
working
solution
sooner
examine
solutions
receptive
wil
learning
something
finally
solutions
sometimes
contain
mistakes
first
person
email
correction
will
award
extra
credit
points
number
take
mistake
will
strive
return
graded
quizzes
next
class
meeting
turned
since
typically
turned
monday
will
typically
return
wednesday
will
strive
return
graded
programs
mondays
submit
new
programming
assignments
received
feedback
previous
assignment
finally
will
strive
return
written
programming
exams
within
week
given
important
believe
graded
work
incorrectly
encourage
see
immediately
discrepancy
case
programming
assignments
see
ta
first
discussion
can
positive
outcomes
either
will
agree
deserve
credit
want
receive
credit
due
will
better
understand
answer
wrong
right
answer
certainly
win
win
situation
case
carefully
examine
solution
come
see
final
grades
final
grade
computed
quizzes
programming
assignments
written
programming
exams
follows
instrument
points
eachpoints
total
grade
quizes82520020
programming
assignments56030030
lab
programming
exams25010010
midterm
written
exam116016016
final
written
exam124024024
note
60
grade
based
written
work
40
based
programming
looked
another
way
50
grade
based
work
supervised
times
class
50
based
unsupervised
take
home
untimed
work
based
percentage
final
grade
computed
follows
percentagefinal
grade90
100
a80
89
b70
79
c60
69
0
59
straight
calculation
based
curve
tend
grade
programming
assignments
liberally
quizzes
written
programming
exams
conservatively
expect
quarter
student
earn
quarter
earn
bs
quarter
earn
cs
final
quarter
earn
ds
fs
course
graded
curve
expectations
past
course
performance
mandated
numbers
fyi
winter
2011
quarter
actual
breakdown
27
38
bs
24
cs
9
ds
2
fs
winter
2012
quarter
actual
breakdown
33
24
bs
26
cs
11
ds
6
fs
finally
will
give
grades
along
letter
grades
typically
example
80
82
will
earn
grade
87
89
will
earn
grade
finishing
3
4
quizzes
2
3
programming
assignments
first
lab
programming
exam
midterm
exam
will
reasonable
indication
final
course
grade
course
will
still
heavily
depend
grades
earn
afterward
academic
integrity
first
read
official
bren
school
information
computer
sciences
cheating
policy
just
one
many
many
undergraduate
policies
become
familiar
following
information
restatement
policy
applies
course
originally
written
taught
cmu
will
also
asked
read
sign
handout
acknowledge
understand
academic
integerity
contract
force
course
policy
decision
whether
student
cheated
depends
intent
assignment
ground
rules
specified
instructor
behavior
student
following
two
guidelines
help
instructor
decide
cheating
occurred
programming
fuzziest
area
plagiarism
will
suspected
assignment
calls
independent
development
implementation
program
results
two
solutions
similar
one
solution
can
converted
series
simple
transformations
plagiarism
will
suspected
student
completed
assignment
explain
intricacies
solution
techniques
used
generate
solution
unreasonable
expect
complete
definition
cheating
cover
cases
situation
important
enough
merit
careful
individual
scrutiny
however
helpful
guidelines
precedents
examples
clearly
cheating
clearly
cheating
examples
cheating
turning
someone
else's
work
whole
part
without
knowledge
without
including
statement
collaboration
solution
allowing
another
student
turn
work
whole
part
without
including
statement
collaboration
solution
turning
completely
duplicated
assignment
even
comments
changed
variables
names
changed
whitespace
changed
code
appears
different
order
still
program
several
students
pairs
writing
one
assignment
turning
multiple
copies
represented
implicitly
explicitly
individual
student's
pair's
work
without
including
statement
collaboration
solution
receiving
graded
written
work
returning
written
work
regrading
altered
finding
solution
problem
web
submitting
without
explicit
attribution
solution
stealing
examination
solution
instructor
generally
examine
reading
hardcopy
copying
file
program
student
let
anyone
examine
make
copy
files
can
easily
lead
intended
unintended
academic
violation
ever
feel
talking
someone
program
legal
solution
will
similar
cite
consultation
header
comment
program
protects
university
disciplinary
action
although
instructor
free
grade
material
sees
fit
examples
cheating
turning
work
done
alone
help
course's
staff
submitting
one
assignment
group
students
group
work
explicitly
permitted
required
pair
programming
getting
giving
help
using
computers
getting
giving
help
solving
syntax
errors
high
level
discussions
course
material
better
understand
discussing
assignments
better
understand
key
studying
verbatim
someone
else's
code
reproducing
work
easy
copy
code
without
really
understanding
technically
programming
assignments
even
understanding
resulting
code
enough
someone
else
wrote
also
play
active
role
synthesizing
debugging
course
much
skills
knowledge
maybe
automatic
detection
cheating
recently
various
cheating
detection
software
systems
become
widely
available
use
search
engines
compare
selected
portions
submitted
papers
content
web
context
programming
compare
student's
program
submitted
classmates
quarter
previous
quarters
assignment
repeated
software
compare
programs
exactly
ignores
ordering
format
changes
variable
name
changes
variety
well
know
transformations
change
look
code
underlying
logic
many
courses
ics
use
software
spot
potential
cheating
cases
identifies
suspicious
behavior
instructors
carefully
examine
flagged
code
make
final
determination
whether
students
will
prosecuted
cheating
often
instructors
can
find
additional
evidence
cheating
software
points
simlar
code
penalties
ics
will
condone
cheating
students
classes
cheating
suspected
instructors
will
take
reasonable
action
establish
whether
actually
occurred
instructor's
opinion
instructor
will
apply
appropriate
disciplinary
policy
courses
typical
case
cheating
student
will
awarded
negative
credit
assignment
precept
assignment
receiving
points
better
cheating
particular
egregious
forms
cheating
cheating
exams
stealing
another
student's
work
submit
credit
higher
penalties
can
assessed
loss
letter
grade
immediate
failure
course
suspension
expulsion
uci
instructors
must
contact
student
within
15
calendar
days
discovering
evidence
academic
dishonesty
evaluating
relevant
work
notice
action
taken
instructor
will
also
forwarded
associate
undergraduate
dean
ics
associate
undergraduate
dean
student's
home
school
different
office
dean
division
undergraduate
education
offices
act
repository
information
case
student
commits
multiple
infractions
student
rights
event
faculty
member
accuses
student
cheating
imposes
penalty
student
right
appeal
case
associate
dean
undergraduate
education
faculty
member's
school
university
ombudsman
details
see
uci
academic
senate
policies
academic
honesty
final
words
personal
statement
cheating
undermines
fabric
education
atmosphere
uci
contrary
whatever
opinions
prejudices
superstitions
hold
one
fostering
cooperation
faculty
students
pursuit
learning
knowledge
wisdom
course
example
graded
absolute
scale
curve
student
cheats
higher
grade
students
receive
lower
grades
result
although
embarrassing
fail
assignment
getting
caught
cheating
much
worse
know
though
students
rarely
think
getting
caught
think
often
see
students
break
cry
get
caught
cheating
start
realize
consequences
actions
stress
level
goes
roof
immediately
affects
academic
social
parts
lives
process
distressing
although
must
confess
hardened
number
times
go
typically
multiple
times
quarter
pursuing
cases
university
level
takes
lot
time
reduces
time
can
spend
important
matters
relating
course
students
definitely
lose
lose
situation
cheating
like
playing
russian
roullete
may
get
away
times
times
cheat
likely
will
get
caught
1
excuse
hear
cheating
pressed
time
cheated
carefully
managing
time
can
avoid
problem
start
working
early
enough
run
problems
expect
run
problems
will
time
course
staff
help
learn
solve
also
understand
students
take
course
requirement
major
little
intrinsic
interest
subject
area
valid
excuse
cheating
either
seen
many
instances
recently
student
asks
friend
student
help
specifically
asks
see
b's
quiz
code
paper
computer
file
often
copies
b's
answer
without
b's
knowledge
understand
feels
pressure
give
help
favor
a's
cheating
discovered
made
bad
situation
receive
credit
worse
receives
negative
credit
reported
dean
student
affairs
according
uci's
rules
can
get
trouble
actions
seen
friendships
shattered
copies
b's
answers
without
telling
done
get
prosecuted
uci's
rules
like
driving
drunk
friends
let
friends
cheat
similar
situation
arises
cheating
quiz
questions
seen
many
students
cheat
one
question
quiz
receive
negative
score
whole
quiz
letter
dean
student
affairs
leaving
question
blank
result
small
point
deduction
university
action
recently
seen
uptick
problems
students
programming
pair
divide
work
instead
working
together
one
student
cheats
part
program
without
telling
partner
discover
cheating
lots
bad
will
students
get
trouble
final
statement
ask
pause
reflect
consequences
choosing
cheat
uci
includes
impacts
will
parents
siblings
friends
fellow
classmates
uci
cheating
invariably
wrong
decision
exceptions
policies
strict
policies
regarding
attending
classes
taking
quizes
submitting
programs
taking
class
exams
exceptions
exceptions
policies
include
valid
medical
excuses
documented
doctor
health
care
provider
officially
excusable
absence
emergencies
family
problems
religious
observances
job
interviews
sports
related
trips
etc
documented
office
dean
college
coach
etc
need
exception
email
soon
know
problem
ultimately
bring
copy
required
documentation
soon
possible
beforehand
know
problem
advance
next
day
able
attend
class
office
hours
advance
warning
will
need
keep
copy
records
advance
notice
problem
please
notify
email
beforehand
discuss
ramifications
