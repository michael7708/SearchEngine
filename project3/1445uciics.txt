honors ics 23 
syllabus 
honors
data
structures
algorithms
schedule
change
sandy
irani
teaching
class
professor
sandy
iraniu
class
meetings
3
30
4
50
tuesday
thursdays
pscb
140
office
hours
5
6
tuesdays
thursdays
appt
414d
cs
teaching
assistant
steve
moret
smoret
uci
edu
required
text
data
structures
problems
solving
java
mark
allen
weiss
discussion
tba
teaching
philosophy
guide
collaborator
learning
however
primary
responsibility
learning
rests
evaluate
use
available
resources
ask
questions
writes
lots
simple
programs
verify
deepen
understanding
various
concepts
homeworks
assignments
sufficient
use
concept
know
explain
concept
friend
teaching
often
reveals
holes
understanding
everytime
make
error
oppportunity
learn
enjoy
process
learning
course
goals
learn
properties
implementation
details
fundamental
data
structures
arrays
lists
queues
stacks
dictionaries
trees
often
heart
program
implementations
will
done
java
learn
elements
analysis
algorithms
including
notation
well
basic
elements
object
oriented
design
implementation
grading
will
approximately
4
quizzes
8
programming
assignments
coding
assignments
java
lowest
quiz
score
lowest
homework
score
will
dropped
approximately
final
quizzes
homework
will
count
equally
final
exam
will
based
text
lecture
notes
homeworks
quizzes
chapter
ends
summary
sure
know
every
concept
discussed
summary
preiss
text
fastest
way
get
questions
answers
email
either
steve
answers
general
interest
will
posted
bulletin
board
ics
h22
may
also
use
bulletin
board
ask
classmates
appropriate
help
form
inappropriate
help
will
result
grade
class
letter
file
required
text
text
data
structures
algorithms
object
oriented
design
patterns
java
bruno
preiss
suggested
text
book
java
can
learn
many
students
like
core
java
like
java
programming
language
3rd
edition
ken
gosling
et
al
java
language
notes
lecture
notes
java
language
available
line
java
notes
please
tell
find
errors
misrepresentations
intended
schedule
quick
overview
will
approximately
cover
first
8
chapters
preiss
plus
introductory
material
java
language
use
java
text
fill
gaps
will
assign
reading
java
book
instead
use
index
look
need
java
goals
programming
language
goals
program
achieve
goals
program
design
program
implementation
object
definition
java
object
decomposition
examples
complex
numbers
polynomials
object
hierarchies
triangles
read
appendix
1
preiss
select
java
text
using
peoples
classes
file
io
bufferedreader
printwriter
simple
lexical
analysis
string
tokenizer
sorting
treeset
fast
formatting
linked
lists
polynomials
hashtables
making
lexicon
reading
line
documentation
classes
via
cafe
gui
interface
event
driven
programming
inheritance
interfaces
inner
classes
frames
layout
managers
buttons
textfields
labels
textareas
actionlisteners
reading
online
documentation
java
text
needed
analysis
program
model
notation
finite
induction
programming
timing
henceforth
code
requires
space
time
complexity
analysis
1
read
chapter
3
preiss
fundamental
data
structures
arrays
dynamic
arrays
dynamic
programming
smith
waterman
algorithm
read
chapter
4
1
4
2
week
6
fundamental
data
strucutres
linked
lists
single
linked
lists
double
linked
lists
extra
pointers
read
preiss
4
3
week
7
stacks
queues
stack
array
stack
list
queue
array
read
chapter
6
week
8
ordered
lists
list
array
ordered
list
sorted
list
read
chapter
7
week
9
hash
tables
hash
functions
chaining
scatter
tables
linear
probing
quadratic
probing
double
hashing
removing
items
read
chapter
8
week
10
trees
binary
trees
tree
traversals
evaluating
expression
np
completeness
million
dollar
question
ary
trees
read
chapter
9
homework
assignments
homeworks
duly
weekly
need
typed
handwritten
assignments
will
accepted
object
design
use
visual
cafe's
ide
write
program
hand
code
may
help
using
visual
cafe
writing
program
suppose
design
computer
implementation
personal
telephone
book
english
provide
list
constructors
methods
expect
include
sentence
describing
method
constructor
write
code
example
telephonebook
constructs
empty
telephone
directory
done
class
complex
numbers
part
design
process
suppose
math
professor
hires
write
class
polynomials
provide
english
list
constructors
methods
write
code
peoples
classes
using
bufferedreader
stringtokenizer
write
program
count
number
words
file
precisely
define
word
use
double
treeset
currenttimemillis
time
sorting
100
200
12800
random
doubles
math
random
printout
table
times
times
times
logn
times
using
bufferedreader
hashtable
write
program
count
number
words
length
equal
length
last
name
file
xx
gui
interface
analysis
problems
xx
use
linked
list
class
provided
collections
class
implement
sparse
polynomial
implement
following
poly
string
looks
like
2x3
11x14
etc
use
stringtokenizer
add
delimiter
set
void
add
poly
adds
current
polynomial
int
degree
poly
returns
highest
degree
polynomial
extra
credit
void
mult
poly
multiplies
current
polynomial
extra
credit
double
solve
int
int
returns
solution
within
range
arrays
write
dynamic
arrays
array
singly
linked
list
doubly
linked
list
pointer
array
time
results
adding
elements
1
1000
linkedlists
expand
program
previous
assignment
include
deletion
time
deletion
first
create
fixed
array
size
1000
integers
random
order
now
can
delete
elements
representation
order
stacks
queues
ordered
lists
program
will
create
book
index
content
words
will
somewhat
arbitrarily
define
content
word
one
containing
least
7
characters
program
will
accept
file
output
ordered
list
word
linenumber
linenumber
etc
example
typically
output
line
might
government
lines
15
123
3004
hash
tables
trees
