introduction amrm 

objective
goal
morph
project
build
adaptive
memory
reconfiguration
management
amrm
architecture
demonstrates
100x
improvement
memory
system
performance
terms
latency
available
bandwidth
performance
gain
achieved
using
application
adaptive
architectural
mechanisms
hardware
assisted
blocking
prefetching
dynamic
cache
structures
optimize
movement
placement
application
data
memory
hierarchy
specifically
seek
address
mom
radar
cross
section
modeling
nas
conjugate
gradient
codes
achieve
least
order
magnitude
gain
performance
another
important
goal
morph
amrm
project
demonstrate
gains
memory
system
performance
achievable
across
range
applications
using
standard
processing
application
development
platforms
application
development
execution
environment
allows
application
directly
manage
memory
latency
bandwidth
needs
two
important
key
results
achieve
goal
smart
compiler
algorithms
support
identification
use
appropriate
architectural
assists
policies
associated
hardware
operating
system
strategies
achieve
safe
efficient
compile
time
runtime
memory
system
reconfiguration
thus
coordinated
compile
runtime
adaptation
management
fault
detection
isolation
containment
strategies
will
enable
multi
process
safe
computing
environment
approach
amrm
design
will
specifically
address
challenges
facing
optimum
data
placement
movement
memory
hierarchy
plan
begin
design
baseline
memory
system
architecture
supports
incorporation
re
programmable
hardware
blocks
processor
cache
memory
interconnection
fabric
baseline
architecture
will
mapped
optimal
prefetching
supports
memory
side
pointer
chasing
example
recognition
machine
working
set
size
miss
patterns
victim
caches
stream
buffers
bandwidth
management
translate
gather
assists
assists
will
evaluated
performance
gains
group
applications
including
sparse
matrix
conjugate
gradient
nas
cg
radar
cross
section
modeling
mom
rcs
database
tpc
oo7
codes
concurrently
will
also
explore
semantic
retention
techniques
enable
compilers
determine
memory
specific
application
characteristics
access
patterns
memory
footprint
detect
array
references
cause
memory
conflicts
operating
system
front
will
devise
techniques
ensure
process
isolation
validation
late
binding
adaptation
formalizing
notion
process
access
control
amrm
mapping
faults
hardware
mapping
protection
os
semantics
reconfigurable
circuit
structures
use
amrm
allow
ultra
fast
reconfiguration
block
isolation
will
designed
structures
will
used
build
adaptive
architectural
mechanisms
designed
hdl
models
latency
management
available
bandwidth
optimization
stride
prediction
skewing
based
memory
access
patterns
finally
optimize
dynamic
cache
structures
expect
amrm
machine
eventually
available
menu
memory
assists
organized
according
application
characteristics
runtime
memory
access
patterns
demonstrate
proof
concept
system
prototype
will
design
amrm
chip
prototype
amrm
chip
will
include
baseline
memory
hierarchy
reconfigurable
logic
resources
can
used
construct
manage
adaptive
cache
memory
adaptive
cache
architectural
mechanisms
will
controlled
compilers
using
semantic
retention
techniques
adaptive
machine
definition
amd
model
will
developed
used
semantic
retention
compilers
updated
adaptive
memory
structures
mechanisms
hardware
mapping
tools
amd
model
will
also
help
runtime
system
devise
protection
continuous
validation
hardware
address
specific
application
needs
architectural
assists
will
incorporated
core
operating
system
mechanisms
enable
usable
multi
process
safe
computing
environment
adaptive
cache
simulation
environment
will
built
evaluate
cost
performance
tradeoffs
support
evolution
software
controlled
application
adaptive
architectures
necessary
cad
tools
will
investigated
prototyped
automated
synthesis
mapping
hardware
assists
tools
will
specifically
address
efficient
modeling
simulation
architectural
assists
synthesis
performance
size
constraints
realizable
configuration
bit
streams
recent
accomplishments
new
start
current
plan
fy
1999
plan
achieve
three
major
milestones
define
architecture
amrm
system
devise
architectural
mechanisms
latency
bandwidth
management
aggressive
prefetching
dynamic
caching
build
software
synthesis
hardware
fault
models
will
used
later
protection
continuous
validation
techniques
amrm
design
will
designed
fabricated
mosis
impact
work
dod
applications
will
substantially
higher
memory
hierarchy
utilization
protecting
software
investments
legacy
code
specifically
dod
applications
nas
conjugate
gradient
mom
radar
cross
section
modeling
addition
object
oriented
relational
databases
security
sensitive
applications
protection
validation
strategies
central
will
derive
significantly
improved
memory
system
performance
conventional
static
hierarchical
memory
architectures
technology
transition
new
start
amrm
project
sponsored
defense
advanced
research
projects
agency
darpa
information
technology
office
ito
ng
framework
personalized
websites
kobsa
dvas
2010
06
15
13
00
biblio
designing
secure
systems
based
open
architectures
open
source
closed
source
components
walt
dvas
2012
10
03
09
31
biblio
evolutionary
design
complex
systems
open
technology
software
evolution
hyperware
architecture
process
taylor
2009
08
24
13
36
first
previous
456789101112
next
last
