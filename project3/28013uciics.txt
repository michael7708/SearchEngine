informatics 45 spring 2010 project 4 games without frontiers 
project 4 
informatics
45
spring
2010
news
course
reference
schedule
lab
manual
code
examples
alex
informatics
45
spring
2010
project
4
games
without
frontiers
project
plan
due
friday
may
28
11
59pm
program
due
sunday
june
6
11
59pm
lessons
learned
due
tuesday
june
8
11
59pm
required
work
project
individually
introduction
first
exposure
computers
kid
school
context
computer
games
educational
games
school
though
first
time
remember
sitting
behind
computer
radio
shack
trs
80
model
played
game
called
fastmath
pitted
two
players
one
another
trying
solve
arithmetic
problems
fast
possible
sure
just
boring
educational
game
time
captivated
still
remember
especially
loved
winning
though
always
win
long
computer
complete
collection
games
none
games
played
computer
classified
educational
direct
sense
though
games
sneaky
taught
surprising
collection
lessons
motivated
ask
many
interesting
questions
computing
endeavored
first
win
outright
modify
cheat
finally
write
scratch
games
days
course
photorealistic
surround
sound
appeal
today
nonetheless
fun
exciting
simplicity
made
writing
one's
game
seem
possible
today
era
tremendously
complex
games
built
gigantic
teams
programmers
designers
artists
truth
easier
build
simple
games
now
computers
become
much
powerful
tools
gotten
better
just
harder
compete
large
scale
professionally
developed
games
unfortunately
skills
develop
quickly
enough
always
aimed
high
relative
knew
tougher
internet
search
got
stuck
something
never
realized
goal
writing
games
became
interested
things
though
certainly
learned
lot
trying
project
offers
opportunity
build
game
previous
project
allow
propose
problem
can
take
option
working
problem
providing
provided
problem
will
require
explore
things
discussing
lecture
recently
overriding
paint
method
drawing
converting
low
level
user
input
like
mouse
clicks
key
presses
higher
level
actions
like
take
though
like
work
different
game
choosing
encouraged
games
may
seem
frivolous
know
everyone
likes
play
provide
fascinating
combination
problems
solved
software
engineering
human
computer
interface
networks
psychology
cognition
even
multiplayer
online
games
economics
sociology
game
developers
push
envelope
wide
variety
areas
many
lessons
can
applied
serious
contexts
even
interested
games
surprised
building
games
can
teach
software
reminder
partner
project
work
expected
completed
individually
partner
use
pair
programming
problem
project
provides
choice
problems
work
asked
choose
problem
posed
problem
choice
entirely
encourage
explore
ideas
neither
penalty
deciding
solve
provided
problem
instead
extra
credit
choosing
follow
instincts
connect
four
connect
four
well
known
board
game
also
known
names
like
four
row
captain's
mistress
two
players
drop
checkers
alternately
7x6
grid
attempt
line
four
row
horizontally
vertically
diagonally
unfamiliar
game
excellent
online
version
includes
visual
demonstration
game
played
can
found
link
requires
flash
can
found
link
provided
problem
project
asks
implement
version
connect
four
java
choose
implement
connect
four
fair
amount
freedom
terms
implement
though
program
meet
following
requirements
must
custom
drawn
board
rather
one
constructed
using
built
java
gui
components
precisely
draw
one
approach
something
similar
othello
board
drew
lecture
though
free
anything
else
like
clearly
represents
state
game
board
must
straightforward
user
interface
playing
game
course
straightforward
eye
beholder
possible
us
figure
play
game
connect
four
without
much
experimentation
feel
free
include
brief
message
explains
use
flash
version
connect
four
linked
nice
job
clear
given
time
game
whose
turn
game
ends
clear
player
won
without
user
scan
entire
board
looking
four
checkers
row
must
implement
game
logic
separately
user
interface
words
model
game
logic
must
separated
view
user
interface
unlike
othello
example
class
possible
play
one
game
connect
four
without
restart
program
ideally
also
possible
restart
game
time
even
current
game
though
requirement
extending
connect
four
problem
free
extend
connect
four
program
somewhat
arbitrarily
long
meets
requirements
one
possible
extension
might
implement
network
protocol
allow
two
instances
connect
four
game
play
one
another
case
one
wants
go
route
proposed
protocol
can
implement
programs
will
interoperable
client
contacts
serverserver
accepts
connectionclient
sends
i45connect4server
responds
go
causes
sides
start
game
client
playing
black
moving
first
server
playing
redclient
server
alternate
moves
sending
messages
form
move
columnnum
columnnum
number
1
7when
game
participants
disconnect
can
also
implement
different
protocol
like
though
may
sacrifice
interoperability
students'
programs
unless
students
agree
protocol
probably
worth
coming
protocol
unless
want
support
something
protocol
game
chat
ability
client
server
negotiate
will
play
color
size
board
will
point
limitation
protocol
handling
problem
one
player
making
invalid
move
practical
implementation
problem
worth
solving
example
side
can
respond
yes
message
whenever
receives
move
yes
indicating
move
okay
indicating
permitted
extend
connect
four
problem
without
consulting
first
long
program
meets
original
requirements
however
feel
free
contact
ahead
time
like
discuss
ideas
get
help
assessing
scope
can
feel
assured
biting
can
chew
coming
problem
rather
working
connect
four
problem
free
come
problem
instead
general
anything
goes
though
game
must
meet
requirements
specified
connect
four
game
specifically
must
custom
drawn
board
game
state
animation
sound
optional
must
straightforward
user
interface
least
enough
game
documentation
make
clear
play
must
implement
game
logic
separately
user
interface
clear
current
state
game
score
whose
turn
much
time
left
etc
somewhat
nebulous
requirement
since
depends
heavily
game
chosen
keep
mind
must
game
developing
lecture
whole
part
board
game
though
aware
interactive
games
difficult
implement
pose
bigger
risk
working
problem
need
get
approved
early
process
thursday
may
27
8
00pm
need
send
email
describes
game
plan
build
detailed
enough
can
assess
whether
problem
solvable
time
allowed
also
assume
ever
heard
game
plan
implement
please
either
describe
provide
link
description
roughly
expect
user
interface
will
look
like
done
word
use
outside
resources
aware
existing
versions
connect
four
written
java
available
online
go
without
saying
permitted
download
submit
whole
part
prior
experience
taught
otherwise
generally
like
keep
pretty
open
policy
outside
resources
pedagogically
wise
implementations
connect
four
limits
work
project
also
aware
variety
games
implemented
java
one
theoretically
choose
problem
download
submit
aware
existing
game
implementations
also
strictly
limits
work
project
planning
phase
planning
phase
always
will
crucial
since
need
think
problem
connect
four
otherwise
decide
approach
take
risks
lie
project
plan
required
write
project
plan
summarizes
planning
addressing
least
following
questions
free
always
include
additional
information
like
describe
fair
amount
detail
problem
plan
solve
plan
work
provided
problem
can
just
say
plan
work
provided
problem
move
unless
plan
extend
case
specify
plan
extend
will
user
interface
designed
will
drawing
board
game
state
look
like
list
tasks
expect
complete
finished
implementation
expecting
break
level
individual
methods
classes
just
like
see
big
picture
tasks
tasks
dependent
others
features
prototype
prototype
guided
prototyping
past
experience
aspects
project
pose
biggest
risk
success
anticipate
difficulty
guided
prototyping
past
experience
aspects
project
pose
least
risk
success
parts
expect
able
handle
relative
ease
project
plan
due
friday
may
28
11
59pm
see
section
titled
deliverables
information
submit
various
parts
project
writing
program
program
written
entirely
java
gui
built
using
swing
library
overridden
paint
method
used
paint
board
game
state
addition
swing
free
use
part
java
library
fine
helpful
additionally
permitted
use
components
open
source
components
help
realize
goal
though
permitted
use
parts
people's
programs
specific
game
game
logic
visualization
code
addition
delivering
program
also
need
submit
brief
document
explains
use
program
need
say
much
page
will
suffice
programs
guess
going
need
told
enough
information
can
understand
use
program
lastly
used
open
source
libraries
provided
jar
files
need
include
jar
files
submission
program
due
sunday
june
6
11
59pm
see
section
titled
deliverables
information
submit
various
parts
project
assessing
lessons
learned
completed
implementation
submitted
take
little
time
reflect
experience
writing
lessons
learned
document
lessons
learned
document
reflect
least
following
questions
extent
follow
project
plan
implementing
program
features
implement
differently
specified
plan
decide
implement
differently
couple
biggest
successes
project
features
felt
turned
well
challenges
able
overcome
forces
think
helped
successful
cases
couple
aspects
project
gone
better
think
problematic
done
differently
gone
better
ways
find
game
development
different
kinds
programming
quarter
lessons
learned
document
due
tuesday
june
8
11
59pm
see
seciton
titled
deliverables
information
submit
various
parts
project
deliverables
required
deliver
three
parts
project
checkmate
ics
built
online
assignment
submission
system
follow
link
discussion
submit
files
via
checkmate
aware
holding
rules
specified
document
including
one
says
responsible
submitting
version
project
want
graded
regrade
project
simply
submitted
wrong
version
accidentally
three
parts
project
due
date
project
plan
microsoft
word
doc
docx
rich
text
format
rtf
pdf
document
due
friday
may
28
11
59pm
program
three
things
collection
java
files
comprising
program
document
explaining
use
jar
files
containing
open
source
libraries
used
please
submit
zip
file
containing
things
files
compiled
class
files
parts
eclipse
workspace
sure
zip
java
files
still
folder
structure
imposed
eclipse
java
use
packages
program
due
sunday
june
6
11
59pm
lessons
learned
document
another
microsoft
word
doc
docx
rich
text
format
rtf
pdf
document
due
tuesday
june
8
11
59pm
partnered
aware
necessary
one
two
partners
submit
project
prefer
partner
submit
three
parts
will
identified
together
checkmate
ta
aware
partnerships
will
figure
project
submissions
belong
pairing
put
names
student
ids
partners
comment
top
java
files
documents
afterward
take
moment
sure
submitted
files
intended
missed
one
able
compile
run
program
can
result
substantial
penalty
since
able
evaluate
program's
correctness
minor
adjustments
alex
thornton
spring
2009
originally
written
alex
thornton
spring
2008
