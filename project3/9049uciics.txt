acm computing surveys sdcr working group storage i o cormen goodrich 
a bridging model parallel computation communication i o 
acm
computing
surveys
28a
4
december
1996
http
www
cs
jhu
edu
goodrich
pubs
io
html
copyright
1996
association
computing
machinery
inc
see
permissions
statement
strategic
directions
computing
research
working
group
storage
issues
large
scale
computing
position
statement
thomas
cormen
dartmouth
college
department
computer
science
6211
sudikoff
laboratory
hanover
nh
03755
3510
usa
thc
cs
dartmouth
edu
http
www
cs
dartmouth
edu
thc
michael
goodrich
johns
hopkins
university
department
computer
science
whiting
school
engineering
baltimore
md
21218
http
www
ics
uci
edu
goodrich
abstract
present
challenge
synthesizing
coherent
model
combines
best
aspects
parallel
disk
model
bulk
synchronous
parallel
models
develop
analyze
algorithms
use
parallel
computation
communication
categories
subject
descriptors
3
2
memory
structures
design
styles
mass
storage
magnetic
optical
primary
memory
4
4
input
output
data
communications
performance
analysis
design
aids
formal
models
worst
case
analysis
1
3
programming
techniques
concurrent
programming
parallel
programming
4
2
operating
systems
storage
management
secondary
storage
4
4
operating
systems
communications
management
input
output
message
sending
network
communication
2
data
storage
representations
contiguous
representations
5
files
sorting
searching
1
2
computation
abstract
devices
modes
computation
parallelism
concurrency
2
2
analysis
algorithms
problem
complexity
nonnumerical
algorithms
problems
sorting
searching
general
terms
algorithms
design
languages
performance
theory
additional
key
words
phrases
external
memory
secondary
memory
communication
disk
drive
parallel
disks
sorting
parallel
disk
model
bulk
synchronous
parallel
model
bridging
model
parallel
computation
communication
past
decade
seen
introduction
new
useful
models
analyzing
computational
communication
complexities
parallel
algorithms
well
useful
models
measure
complexity
yet
useful
model
measures
computational
communication
complexity
simultaneously
usefulness
model
implies
two
characteristics
first
model
realistic
sense
prediction
algorithm
correspond
observed
behavior
real
systems
second
model
simple
enough
use
understand
one
can
design
analyze
implement
algorithms
without
extensive
experience
model
maintain
bulk
synchronous
parallel
bsp
model
valiant
1990
logp
culler
et
al
1993
models
useful
computational
communication
complexities
parallel
algorithms
parallel
disk
model
pdm
vitter
shriver
1994
useful
complexity
bsp
logp
models
however
ignore
pdm
account
computation
communication
think
much
slower
computation
communication
pdm
apparently
captures
salient
factor
wall
clock
time
algorithms
use
parallel
apparent
may
case
however
early
experiences
algorithms
implemented
pdm
indicate
although
wall
clock
time
given
algorithm
follows
prediction
model
algorithms
bound
even
synchronous
blocking
time
spent
waiting
typically
less
50
total
wall
clock
time
behavior
suggests
parallel
disk
access
gives
rise
given
amount
computation
communication
particular
algorithm
sorting
algorithm
example
might
repeatedly
process
memoryloads
data
performing
large
parallel
read
memory
sort
across
processors
large
parallel
write
time
perform
memory
sorts
might
exceed
combined
times
parallel
reads
writes
although
roughly
among
memoryloads
typical
algorithms
developed
pdm
similar
hypothetical
sorting
algorithm
make
repeated
passes
data
pass
repeatedly
reads
large
amount
data
processes
writes
large
amount
data
processing
time
including
communication
tends
time
given
algorithm
course
varies
algorithm
algorithm
early
observations
continue
hold
gain
experience
implementing
algorithms
pdm
will
draw
conclusion
pdm's
predictive
power
helpful
analyzing
time
limited
omitting
computation
communication
note
however
striking
similarity
bsp
model
typical
pdm
algorithms
bulk
processing
bsp
model
example
communcation
network
processors
considered
prime
computational
bottleneck
hence
computation
organized
sequence
rounds
round
consists
processor
performing
computations
internal
memory
followed
sending
receiving
limited
number
messages
rounds
communication
bsp
algorithms
like
memoryload
processing
respectively
pdm
algorithms
challenge
therefore
synthesize
coherent
model
combines
best
aspects
pdm
bsp
models
develop
analyze
algorithms
use
parallel
computation
communication
along
model
need
programming
primitives
enable
algorithm
implementation
model
primitives
must
portable
performance
matching
model's
requirements
view
developing
model
challenge
believe
will
difficult
simultaneously
satisfy
two
requirements
realistic
yet
easy
use
concern
realistic
model
may
many
parameters
make
unusable
pdm
without
considering
processing
four
parameters
problem
size
memory
size
disk
block
size
disk
count
bsp
model
also
four
parameters
problem
size
processor
count
latency
network
gap
time
consecutive
messages
pipelined
computations
thus
natural
questions
ask
include
following
can
parameters
merged
synthesis
block
size
notion
bsp
might
consistent
pdm's
block
size
right
set
four
five
important
parameters
summary
think
valuable
propose
bridging
parallel
computational
model
incorporates
computation
communication
accurate
easy
use
manner
hope
discussions
workshop
will
lead
model
references
alpern
et
al
1994
alpern
carter
feig
selker
1994
uniform
memory
hierarchy
model
computation
algorithmica
12
2
3
august
september
1994
pages
72
109
cormen
goodrich
1996
cormen
goodrich
1996
position
statement
strategic
directions
computing
research
working
group
storage
issues
large
scale
computing
computing
surveys
28a
4
december
1996
http
www
cs
jhu
edu
goodrich
pubs
io
html
cormen
hirschl
1996
cormen
hirschl
1996
early
experiences
evaluating
parallel
disk
model
vic
implementation
parallel
computing
appear
also
available
dartmouth
college
computer
science
technical
report
tr96
293
ftp
ftp
cs
dartmouth
edu
tr
tr96
293
ps
culler
et
al
1993
culler
karp
patterson
sahay
schauser
santos
subramonian
von
eicken
1993
logp
towards
realistic
model
parallel
computation
proceedings
fourth
acm
sigplan
symposium
principles
practice
parallel
programming
may
1993
pages
1
12
valiant
1990
valiant
1990
bridging
model
parallel
computation
communications
acm
33
8
august
1990
pages
103
111
vitter
shriver
1994a
vitter
shriver
1994
algorithms
parallel
memory
two
level
memories
algorithmica
12
2
3
august
september
1994
pages
110
147
vitter
shriver
1994b
vitter
shriver
1994
algorithms
parallel
memory
ii
hierarchical
multilevel
memories
algorithmica
12
2
3
august
september
1994
pages
148
169
permission
make
digital
hard
copies
part
work
personal
classroom
use
granted
without
fee
provided
copies
made
distributed
profit
commercial
advantage
copies
bear
notice
full
citation
first
page
copyrights
components
work
owned
others
acm
must
honored
abstracting
credit
permitted
copy
otherwise
republish
post
servers
redistribute
lists
requires
prior
specific
permission
fee
request
permissions
publications
dept
acm
inc
fax
1
212
869
0481
permissions
acm
org
last
modified
mon
oct
21
19
18
04
edt
michael
goodrich
