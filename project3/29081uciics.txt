informatics 45 spring 2010 style documentation standards 
course style standards 
informatics
45
spring
2010
news
course
reference
schedule
lab
manual
code
examples
alex
informatics
45
spring
2010
style
documentation
standards
writing
high
quality
programs
using
good
style
important
many
reasons
professional
programmers
need
able
read
understand
code
months
even
years
originally
writing
also
able
read
understand
code
written
others
oftentimes
absence
original
author
programmers
write
code
clear
style
adequate
documentation
benefit
current
future
members
team
nothing
frustrating
programmer
inheriting
responsibility
someone
else's
code
find
code
designed
poorly
written
cryptically
documented
shabbily
inherited
plenty
code
career
exhibited
shortcomings
remiss
insist
code
better
course
enough
say
use
good
style
write
high
quality
programs
terms
obviously
open
significant
amount
interpretation
adopted
set
specific
standards
like
follow
writing
java
code
course
standards
framed
one
guiding
principle
program
can
read
easily
one
can
understood
easily
author
well
others
standards
described
list
matching
opening
closing
curly
braces
aligned
column
means
opening
curly
brace
follows
statement
appear
directly
letter
line
conditional
expression
statements
within
curly
braces
indented
four
spaces
one
tab
character
relative
brace
statement
appear
line
opening
curly
brace
good
idea
consistent
using
either
spaces
tabs
indentation
mixture
names
use
variables
parameters
methods
classes
meaningful
exception
counters
loop
control
variables
may
simple
names
constants
program
defined
named
meaningfully
example
writing
array
implementation
stack
hard
coded
maximum
size
256
elements
define
static
final
field
maximum
elements
use
field
code
rather
literal
integer
256
exception
loop
control
constant
one
sets
loop
counter
zero
begin
clearer
means
name
constant
meaningfully
objective
naming
constant
introduce
name
explains
means
will
used
using
name
zero
constant
whole
value
0
anything
make
code
understandable
resilient
future
changes
value
0
constant's
purpose
kinds
things
thinking
naming
constant
naming
conventions
classes
members
constants
class
names
capitalized
class
names
multiple
words
subsequent
word
capitalized
underscore
separating
words
song
reggaesong
names
class
members
methods
fields
names
local
variables
parameters
begin
lowercase
letter
subsequent
words
capitalized
underscore
separating
words
playsong
songtitle
named
constants
named
using
capital
letters
underscores
separating
words
euler
maximum
elements
every
member
declared
using
access
control
modifier
public
private
protected
leaving
access
control
modifier
causes
java
revert
rather
bizarre
default
package
scope
appropriate
work
course
whitespace
appear
method
argument
around
binary
operator
example
createfile
alex
write
instead
createfile
alex
write
instead
one
single
line
code
inordinately
long
constitutes
inordinately
long
largely
matter
taste
good
rule
thumb
write
lines
code
longer
80
characters
afraid
break
long
lines
multiple
lines
example
method
call
fifteen
parameters
put
one
line
next
etc
line
longer
80
characters
requirement
partially
motivated
printers
will
print
80
characters
per
line
partially
motivated
fact
much
easier
read
program
horizontal
scrolling
unnecessary
every
class
method
field
comment
briefly
explains
purpose
case
methods
explanation
meaning
method's
parameters
expected
within
body
methods
code
whose
purpose
readily
obvious
commented
necessary
include
comment
every
line
necessary
explain
something
obvious
someone
seasoned
java
programmer
unfamiliar
program
appropriate
one
comment
explains
purpose
chunk
several
lines
code
chunk
complicated
even
better
chunk
several
lines
code
requires
comment
consider
putting
code
method
meaningful
name
meaningfully
named
parameters
good
example
many
coding
practices
can
found
looking
various
starting
points
provided
project
files
follow
rules
particularly
rule
regarding
comment
every
method
since
expect
write
comments
cases
still
useful
way
see
many
rules
action
couple
adjustments
made
alex
thornton
winter
2007
modifications
introduced
alex
thornton
fall
2005
adjusted
ics
22
alex
thornton
fall
2004
tweaked
new
ics
22
alex
thornton
winter
2002
modified
fit
chem
consulting
model
ics
22
alex
thornton
winter
2001
adapted
ray
klefstad's
coding
standards
alex
thornton
ics
23
summer
2000
