smart ics core knowledge skills chart bren school information computer sciences 
ics 52 
site
will
look
much
better
browser
supports
web
standards
accessible
browser
internet
device
school
bren
ics
mission
dean's
welcome
bren
gift
donald
bren
hall
visit
bren
school
contact
us
equity
diversity
departments
computer
science
informatics
statistics
research
research
areas
research
centers
research
highlights
education
graduate
apply
degrees
tuition
costs
courses
faq
research
areas
policies
forms
contact
counselor
graduate
housing
computing
support
visit
bren
school
undergraduate
computing
support
computer
lab
information
contact
counselor
course
listings
degrees
faq
financial
aid
honors
program
housing
ics
jobs
mentor
program
policies
recently
admitted
student
council
student
life
student
resources
tuition
costs
prospective
undergrad
uci
parents
people
faculty
staff
graduate
students
community
alumni
friends
parent
programs
leadership
council
make
gift
news
get
involved
tech
talks
information
sessions
sponsor
projects
leadership
council
corporate
partners
sponsor
interns
icsjobs
butterworth
competition
bren
school
home
undergraduate
admissions
transfer
students
smart
ics
program
core
knowledge
skills
smart
ics
core
knowledge
skills
chart
core
knowledge
skills
ics
52
introduction
software
engineering
courses
6d
21
22
23
51
132
sections
catalog
description
course
prerequisites
restrictions
prerequisite
skills
concepts
minimum
knowledge
skills
ics
52
catalog
descriptionintroduction
concepts
methods
current
practice
software
engineering
study
large
scale
software
production
software
life
cycle
models
organizing
structure
principles
techniques
appropriate
stage
production
laboratory
work
involves
project
illustrating
elements
ics
52
course
prerequisitesics
23
cse
23
grade
better
ics
52
restrictionsnone
ics
52
knowledge
prerequisites
skills
conceptsin
addition
skills
concepts
introduced
previous
classes
students
computing
skills
enter
class
learn
independently
first
week
quarter
use
text
editor
word
etc
create
documents
use
drawing
package
powerpoint
visio
etc
create
graphics
documents
ics
52
minimum
knowledge
skillssoftware
life
cycle
mastery
knowing
different
life
cycles
appropriateness
different
situations
knowing
basic
principles
software
engineering
separation
concerns
modularity
abstraction
knowing
apply
throughout
software
life
cycle
proficiency
understanding
tradeoffs
relationships
among
various
activities
software
life
cycle
understand
meaning
use
set
basic
software
qualities
requirementsmastery
interviewing
customer
elicit
requirements
writing
textual
non
formal
requirements
document
proficiency
understand
structure
requirements
document
know
appropriate
kinds
information
document
architectural
designmastery
know
differences
among
interaction
patterns
set
basic
architectural
styles
understand
difference
architecture
module
design
proficiency
choosing
appropriate
architectural
style
particular
problem
module
designmastery
using
provided
exported
required
imported
interfaces
define
module
boundaries
identifying
defining
modules
design
identifying
defining
abstract
data
types
design
proficiency
applying
coupling
cohesion
fan
fan
creating
uses
comprises
diagrams
exposure
creating
design
non
trivial
sizeable
problem
programmingmastery
general
rules
programming
style
clarity
short
rehash
earlier
classes
proficiency
mapping
module
design
onto
implementation
source
code
exposure
using
existing
modules
libraries
implementation
coding
heavy
deadline
requiring
tradeoffs
code
quality
code
functionality
testingproficiency
testing
program
failures
aplying
white
box
testing
short
pieces
code
applying
black
box
testing
short
pieces
code
exposure
understanding
many
dimensions
software
quality
assurance
understanding
inspection
code
walk
process
return
top
page
uc
copyright
uci
directory
intranet
site
map
icswebmaster
ics
uci
edu
updated
june
11
2012
