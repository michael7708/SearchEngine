final exam details 

informatics
41
fall
2011
david
kay
uc
irvine
final
exam
details
originally
scheduled
announced
syllabus
final
exam
will
tuesday
december
6
10
30
12
30
regular
classroom
will
cover
whole
course
emphasizing
topics
class
assignments
quizzes
emphasizing
material
textbook
may
bring
exam
one
page
notes
8
1
2
11
inches
sides
may
place
information
think
will
help
exam
computer
printed
pages
fine
may
bring
electronic
devices
aside
conventional
digital
wristwatch
one
excellent
way
review
mentioned
go
back
retake
quizzes
available
line
will
shortly
also
go
back
read
make
sure
can
problems
homework
lab
assignments
especially
ones
come
textbook
responsible
knowing
file
handling
scheme
knowing
use
picturing
programs
teachpack
also
set
additional
questions
including
longer
ones
sort
fit
quiz
might
show
final
also
answers
available
separate
document
urge
work
problems
fully
can
consult
answers
will
review
session
monday
december
5
1
00
2
50
room
1300
donald
bren
hall
price
admission
least
one
written
question
course
material
best
strategy
go
materials
suggested
page
review
session
can
bring
unresolved
questions
review
session
also
recommend
good
night's
sleep
exam
finally
tentative
rough
list
topics
covered
apart
picturing
programs
textbook
programming
topics
approximately
25
final
will
address
topics
questions
will
tend
towards
larger
concepts
away
small
detail
level
memorization
will
supply
copy
deus
instruction
set
final
exam
one
quizzes
devote
page
notes
fundamental
concepts
hardware
software
data
algorithm
program
source
code
human
prepared
scheme
html
vs
interpreted
code
rendered
web
page
object
executable
machine
language
code
idea
open
source
software
distribution
vs
conventional
distribution
object
code
program
performance
efficiency
human
time
computational
resources
notation
recognizing
processes
require
time
space
1
constant
log
logarithmic
linear
squared
quadratic
reasons
underlie
design
choices
make
forms
information
models
abstraction
abstraction
hierarchies
levels
abstraction
hierarchical
tree
organization
representing
information
computers
bits
bytes
ascii
numbers
ascii
binary
numbers
bcd
size
scale
kb
mb
gb
tb
digitizing
pictures
real
world
information
sampling
quantization
color
resolution
bit
depth
compression
redundancy
lossless
vs
lossy
syntactic
vs
semantic
delta
encoding
run
length
encoding
internet
services
world
wide
web
email
file
transfer
ftp
telnet
remote
login
chat
im
client
machines
server
machines
network
backbone
contributes
delays
decentralized
design
packet
switching
vs
circuit
switching
web
web
browsers
concept
html
urls
domain
names
computer
characteristics
organization
including
deus
memory
registers
instruction
format
sequential
execution
instructions
fetch
decode
execute
storage
hierarchy
registers
ram
secondary
storage
disks
relative
capacity
vs
access
time
various
media
direct
random
access
storage
disks
cds
vs
sequential
access
tapes
operating
systems
managing
computational
resources
process
control
multitasking
timesharing
security
authentication
know
memory
management
virtual
memory
user
interface
gui
vs
command
line
machine
level
vs
high
level
programming
languages
going
problem
description
executable
program
much
done
automatically
procedural
vs
non
procedural
parallelism
concurrency
splitting
tasks
among
multiple
processors
inherent
sequentiality
tasks
elephant
gestation
prevents
parallelism
functional
programming
makes
easier
identify
parallelizable
segments
code
automatically
human
computer
interaction
user
interfaces
ease
learning
vs
ease
use
recognition
vs
recall
pattern
recognition
less
perfect
matching
social
legal
impact
computing
stakeholder
analysis
maxims
people
time
expensive
computer
time
electronic
components
faster
cheaper
reliable
mechanical
ones
david
kay
kay
uci
edu
monday
november
28
2011
10
05
