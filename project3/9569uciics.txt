ics 52 syllabus fall 2004 
ics 52 
information
computer
science
52
introduction
software
engineering
fall
quarter
2004
location
engineering
lecture
hall
100
need
map
monday
wednesday
friday
10
00
10
50
course
code
36290
discussion
location
ssh
100
monday
wednesday
5
00
5
50
course
code
discussion
section
36291
last
modified
monday
november
29
2004
new
november
29
2004
week's
lecture
notes
now
available
overview
textbooks
schedule
assignments
tas
keeping
touch
computing
disabilities
academic
dishonesty
instructor
professor
richard
taylor
electronic
mail
taylor
sign
ics
uci
edu
office
ics2
203
office
phone
949
824
6429
hours
monday
wednesday
11
00
12
00
pm
please
make
appointments
email
however
order
guarantee
meeting
fax
949
824
1715
mailing
address
donald
bren
school
information
computer
sciences
university
california
irvine
irvine
california
92697
3425
overview
prerequisite
knowledge
uci
catalog
introduction
concepts
methods
current
practice
software
engineering
study
large
scale
software
production
software
lifecycle
models
organizing
structure
principles
techniques
appropriate
stage
production
laboratory
work
involves
project
illustrating
elements
prerequisite
ics
23
grade
better
addition
skills
concepts
introduced
previous
classes
students
computing
skills
enter
class
learn
independently
first
week
quarter
use
text
editor
word
etc
create
documents
use
drawing
package
power
point
visio
etc
create
graphics
documents
instructional
objectives
course
follows
introduce
discipline
software
engineering
experientially
acquaint
one
version
software
lifecycle
provide
working
knowledge
least
one
reasonable
technique
applied
phase
lifecycle
provide
particular
insight
software
architecture
design
information
hiding
problems
software
analysis
testing
minimum
knowledge
skills
expected
students
receive
passing
grades
software
life
cycle
mastery
knowing
different
life
cycles
appropriateness
different
situations
knowing
basic
principles
software
engineering
separation
concerns
modularity
abstraction
knowing
apply
throughout
software
life
cycle
proficiency
understanding
tradeoffs
relationships
among
various
activities
software
life
cycle
understand
meaning
use
set
basic
software
qualities
requirements
mastery
interviewing
customer
elicit
requirements
writing
textual
non
formal
requirements
document
proficiency
understand
structure
requirements
document
know
appropriate
kinds
information
document
architectural
design
mastery
know
differences
among
interaction
patterns
set
basic
architectural
styles
understand
difference
architecture
module
design
proficiency
choosing
appropriate
architectural
style
particular
problem
module
design
mastery
using
provided
exported
required
imported
interfaces
define
module
boundaries
identifying
defining
modules
design
identifying
defining
abstract
data
types
design
proficiency
applying
coupling
cohesion
fan
fan
creating
uses
comprises
diagrams
exposure
creating
design
nontrivial
sizable
problem
programming
mastery
general
rules
programming
style
clarity
short
rehash
earlier
classes
proficiency
mapping
module
design
onto
implementation
source
code
exposure
using
existing
modules
libraries
implementation
coding
heavy
deadline
requiring
tradeoffs
code
quality
code
functionality
testing
proficiency
testing
program
failures
applying
white
box
testing
short
pieces
code
applying
black
box
testing
short
pieces
code
exposure
understanding
many
dimensions
software
quality
assurance
understanding
inspection
code
walk
process
textbooks
required
software
engineering
principles
practice
hans
van
vliet
second
edition
75
00
new
bookstore
56
25
used
isbn
0
471
97508
7
class
notes
will
usually
available
www
class
meeting
used
occasionally
notes
will
available
ahead
time
might
previous
year's
offerings
thus
minor
differences
may
exist
compared
used
class
year
schedule
subject
change
week
dates
lecture
topic
schedule
notes
assignments
readings
van
vliet
unless
noted
otherwise
1september
24
27
29
introduction
chapters
1
2
3
processes
slides
1st
discussion
section
2october
1
4
6
principles
requirements
engineering
slides
used
keynote
talk
straw
'01
requirements
assignment
issued
section
11
1
chapter
9
requirements
engineering
url
sommerville's
slides
chapter
7
slides
discussion
section
10
6
example
requirements
document
fq
02
3october
8
11
13
architectures
slides
discussion
10
11
chapter
10
architectures
slides
10
13
discussion
example
requirements
document
unical
4
october
15
18
20
design
requirements
assignment
due
10
18
discussion
design
assignment
issued
chapter
11
design
continued
quiltsrus
example
flight
control
example
eric
dashofy's
slides
c2
style
examples
module
descriptions
ics
52
standard
design
notation
though
c2
designs
5
october
22
25
27
design
ui
design
sommerville's
slides
using
chapter
16
6
october
29
november
1
3
review
29th
1st
mid
term
exam
november
3
midterm
exam
solution
notes
couple
years
ago
quarter's
solution
key
7
november
5
8
10
class
11
5
integration
testing
implementation
issues
design
arch
module
interfaces
due
nov
8th
implementation
assignment
issued
testing
assignment
issued
8
november
12
15
17
testing
chapter
13
9november
19
22
24
quality
assurance
testing
assignment
yes
's
right
testing
due
11
24
10
november
29
december
1
3
maintenance
configuration
mgmt
chapter
4
course
review
implementation
assignment
due
exams
monday
december
6th
final
exam
10
30
12
30
exam
comprehensive
sample
past
assignments
assessment
aggregate
grade
project
45
midterm
20
final
35
project
consists
four
assignments
relative
weighting
percentage
final
grade
follows
assignment
weight
requirements
10
architecture
module
interfaces
design
addendum
required
notation
18
implementation
7
testing
10
specific
assignments
will
placed
web
giving
assignment
required
format
specific
grading
criteria
strictly
speaking
grade
curve
meaning
will
assert
advance
half
class
will
receive
grades
half
grading
done
based
mastery
material
exhibited
exams
project
everyone
masters
material
well
everyone
will
get
hand
one
master
material
adequately
everyone
receive
grades
adjusted
suit
difficulty
exams
assignments
exam
turns
real
bear
threshold
will
much
lower
exam
piece
cake
late
assignments
will
accepted
unless
legible
excuse
physician
extreme
family
emergency
unless
willing
accept
extreme
penalty
respect
assignment's
grade
teaching
assistant
readers
ta
justin
erenkrantz
office
ics2
246
note
building
locked
gain
entry
need
either
make
appointment
ahead
time
email
phone
824
2776
hours
mw
3
30
5
00
reader
tbd
keeping
touch
check
web
site
regularly
definitive
location
course
information
announcements
concerning
assignments
will
made
course
mailing
list
will
also
used
make
announcements
provide
instructions
course
mailing
list
will
read
student's
perspective
instructor
ta
readers
can
post
messages
list
students
ask
one
us
question
whose
answer
relevant
rest
class
post
appropriate
material
list
important
note
email
email
send
conjunction
class
must
sent
uci
account
want
response
action
taken
must
use
uci
account
send
email
email
yahoo
hotmail
juno
cox
non
uci
site
will
ignored
computing
computing
will
done
department's
lab
machines
may
use
another
computer
produce
documents
turn
handwritten
assignments
allowed
implementation
work
will
done
java
please
use
computing
equipment
instructional
purposes
also
watch
social
subtleties
electronic
mail
disabilities
student
feels
may
need
accommodation
based
impact
disability
contact
privately
discuss
specific
needs
also
contact
disability
services
center
949
824
7494
soon
possible
better
ensure
accommodations
implementationed
timely
fashion
academic
dishonesty
cheating
ics
52
will
punished
accordance
university
policy
ics
policy
please
familiarize
documents
note
university
policy
states
faculty
responsibility
assigning
appropriate
grade
student
engages
academic
dishonesty
appropriate
grade
class
cheating
wrong
lying
donald
bren
school
information
computer
sciences
university
california
irvine
ca
92697
3425
