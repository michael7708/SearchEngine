lab assignment 9 
ninth lab assignment 
informatics
41
david
kay
uc
irvine
fall
2011
lab
assignment
9
assignment
due
end
lab
friday
december
2
choose
partner
assignment
someone
worked
already
will
work
best
choose
someone
whose
level
commitment
developing
programming
ability
close
whether
high
low
professor
andrea
anteater
wants
design
grade
management
system
students
applied
epistemology
101
system
will
read
write
students'
scores
file
allow
user
produce
statistics
histograms
frequency
graphs
scores
task
week
create
program
scratch
really
scratch
though
panic
provide
set
specifications
implement
can
use
example
programs
seen
quarter
hardly
programming
today
totally
scratch
application
frameworks
skeleton
programs
infrastructure
supplied
function
libraries
provide
commonly
useful
tasks
object
libraries
class
hierarchies
can
adopt
adapt
purposes
help
along
six
pieces
development
advice
read
specifications
carefully
technical
documents
must
milked
detailed
information
contain
just
read
one
time
quickly
like
mystery
novel
follow
model
view
controller
organization
separate
top
level
front
end
part
program
view
controller
part
handles
interaction
user
back
end
part
model
implements
operations
different
classes
data
restaurants
program
organized
build
model
part
program
follow
design
recipes
especially
creating
examples
tests
advance
know
enough
tests
right
tests
one
simple
measure
test
effectiveness
called
code
coverage
tests
least
evaluate
expression
code
drscheme
helps
running
program
tested
every
expression
code
appears
highlighted
black
highlighted
code
evaluated
add
tests
exercise
parts
program
implement
one
small
feature
time
test
thoroughly
save
copy
program
far
way
next
phase
development
runs
trouble
can
roll
back
previous
version
start
nearly
every
technique
needed
lab
something
seen
done
earlier
quarter
find
working
something
seems
much
complex
convoluted
done
reconsider
approach
using
advanced
student
scheme
program
advanced
file
io
ss
teachpack
download
file
just
copy
paste
code
one
thing
get
started
assignment
two
different
starting
points
partner
can
choose
either
make
sure
either
way
successful
work
rewarded
interested
software
development
software
engineering
building
programming
skills
start
part
fully
scratch
approach
including
building
input
output
view
part
less
committed
software
development
though
can
start
part
skipping
parts
using
starter
version
program
will
let
focus
substantial
parts
assignment
skip
input
output
important
practical
matter
kind
tedious
code
choose
second
approach
still
need
read
parts
understand
involved
read
starter
version
program
understand
works
modify
program
will
handle
classes
data
assignments
represented
name
weight
computing
course
grade
weights
assignments
sum
100
though
requiring
check
number
points
possible
independent
weight
three
point
assignment
worth
50
course
grade
graded
item
better
term
since
includes
things
like
exams
projects
use
assignment
just
shorter
collection
assignment
descriptions
together
describe
graded
items
course
students
represented
name
id
number
vector
scores
size
collection
assignments
one
score
student
assignment
collection
students
start
make
sure
understand
data
structures
make
examples
draw
picture
get
comfortable
organized
want
define
functions
display
information
assignment
student
clearly
base
rrant
print
test
functions
objects
construct
using
make
assignment
make
student
note
terminology
program
starts
will
read
collection
assignments
plain
text
file
called
assignments
txt
place
program
file
data
files
directory
folder
drscheme
will
find
without
anything
fancy
will
read
collection
students
text
file
called
students
txt
since
user
can
create
files
without
knowing
scheme
program
handle
changes
data
although
enhancement
discuss
user
can
create
files
using
plain
ascii
text
editor
like
notepad
word
using
save
text
format
saves
plain
ascii
without
additional
word
formatting
information
scheme
program
read
course
75
point
midterm
worth
40
grade
100
point
final
worth
60
assignments
file
look
like
2
midterm
exam
40
75
final
exam
60
100
first
line
contains
number
assignments
assignment
two
lines
first
containing
assignment's
name
second
containing
two
numbers
weight
followed
possible
points
code
creating
one
assignment
similar
rrant
get
info
function
except
reading
file
instead
keyboard
file
students
course
look
like
2
aardvark
aaron
11223344
68
85
tapir
tamara
44332211
74
92
first
line
contains
number
students
student
three
lines
first
containing
student's
name
second
containing
student's
id
third
containing
student's
scores
assignment
order
two
lines
code
set
reading
two
files
listed
folder
scheme
code
define
assignment
port
open
input
file
assignments
txt
define
student
port
open
input
file
students
txt
two
examples
reading
files
read
assignment
port
read
one
expression
assignments
file
read
line
student
port
'any
read
one
line
students
file
return
string
'any
argument
read
line
will
handle
files
windows
mac
systems
use
different
characters
signal
end
line
read
input
files
remember
read
line
function
reads
entire
line
input
returns
string
useful
reading
strings
may
contain
blanks
without
requiring
user
enclose
strings
quotation
marks
read
function
reads
next
scheme
expression
single
number
input
also
want
call
read
line
ignoring
return
value
reading
numbers
line
will
put
start
next
line
ready
read
sample
code
using
read
line
available
organization
input
files
make
easy
use
read
read
line
create
internal
representation
data
program
task
fit
components
together
spend
time
trying
decide
need
additional
guidance
start
reading
assignments
file
simpler
always
designing
programs
one
layer
data
structures
treat
one
layer
time
file
assignments
example
function
read
information
one
assignment
create
assignment
function
read
number
assignments
first
line
assignments
file
call
single
assignment
creation
function
number
times
finally
create
collection
assignments
make
sure
understand
use
read
read
line
choose
right
function
right
kind
data
described
define
functions
will
fill
assignment
student
collections
reading
files
will
also
helpful
write
functions
print
collections
legibly
help
testing
since
assignments
necessarily
number
points
possible
will
useful
compute
store
scaled
score
assignment
number
0
100
calculated
student's
raw
score
number
points
possible
assignment
might
easiest
implement
storing
student
second
parallel
vector
scaled
scores
also
compute
store
student
weighted
overall
score
course
number
0
100
calculated
scaled
scores
weights
assignment
make
output
look
reasonable
use
function
format
decimal
takes
two
numbers
first
value
display
second
number
digits
decimal
point
returns
string
suitable
use
argument
display
format
decimal
25
2
returns
25
00
format
decimal
17
9876
3
returns
17
988
program
will
text
based
menu
interface
like
one
restaurants
programs
include
commands
search
student
name
id
display
student's
information
display
students'
information
sorted
name
overall
score
collection
students
list
can
use
predefined
quicksort
function
carefully
constructed
lambda
expression
accomplish
automatically
display
information
assignments
display
histogram
overall
course
scores
scores
single
assignment
see
quit
first
step
write
menu
handling
code
based
restaurants
programs
writing
code
anything
user
selects
given
command
menu
command
besides
quit
just
print
received
command
command
call
program
stub
simple
placeholder
can
see
menu
framework
works
write
code
actually
performs
command
take
command
one
one
code
test
implementation
use
restaurants
code
starting
point
just
changing
things
need
change
task
try
create
new
view
controller
scratch
start
displaying
assignment
information
easiest
histogram
bar
graph
showing
distribution
students'
scores
highest
lowest
given
list
scores
example
list
23
23
20
18
25
14
16
18
15
16
23
histogram
display
25
24
23
22
21
20
19
18
17
16
15
14
hints
might
find
particularly
convenient
create
vector
frequencies
vector
ref
freqency
vector
contains
number
students
whose
score
simpler
histogram
display
frequencies
scaled
0
100
scores
101
lines
100
0
start
implementing
way
want
use
predefined
round
function
convert
scores
integers
implement
least
one
following
enhancements
comment
top
definitions
list
one
implemented
note
never
acceptable
class
real
world
submit
buggy
code
much
better
deliver
fewer
features
features
work
correctly
provide
fancier
functionality
almost
works
mean
implement
every
single
aspect
bullet
item
mean
whatever
implement
must
work
correctly
consistently
rest
program
allow
user
change
assignment
student
information
within
program
rather
just
editing
data
files
course
also
requires
recomputing
scaled
weighted
scores
writing
files
user
quits
program
allow
user
add
new
students
new
assignments
remove
students
assignments
within
program
rather
just
editing
data
files
will
require
creating
new
larger
smaller
vectors
else
creating
vectors
default
size
keeping
separate
track
vector
much
actually
used
adding
new
student
require
adding
scores
student
assignment
although
implement
default
score
zero
adding
new
assignment
require
adding
scores
students
assignment
though
might
handle
reading
new
scores
separate
file
improve
interface
somehow
give
user
clearer
better
organized
information
help
user
navigate
functions
menus
make
easier
less
error
prone
enter
data
just
add
decoration
serve
purpose
example
allow
user
request
list
students
sorted
score
individual
assignment
specify
sorting
ascending
descending
order
implement
log
file
saves
record
transaction
operation
changes
data
useful
reconstructing
data
files
get
damaged
deleted
implement
error
checking
input
file
exist
exist
ask
create
new
file
input
data
right
order
format
weights
assignments
add
100
implement
hierarchical
nested
assignments
typical
course
might
lab
assignments
worth
30
course
grade
say
five
assignments
equally
weighted
20
total
lab
assignment
score
midterm
worth
25
course
grade
final
exam
worth
45
course
grade
made
eight
problems
whose
points
total
100
point
graded
item
can
single
item
handling
along
can
compound
item
overall
weight
course
along
number
subcomponents
name
possible
points
weight
part
parent
component
course
means
subcomponent
just
graded
item
reason
subcomponents
subcomponents
need
represent
graded
items
model
part
program
work
read
write
display
enhance
file
handling
get
name
number
course
incorporating
names
data
files
allow
using
program
one
course
program
starts
need
ask
user
course
handle
might
also
give
user
option
create
new
class
rather
reading
information
existing
one
choose
name
assignment
student
files
add
command
produce
histogram
scores
given
graded
item
just
midterm
enhance
histogram
variety
ways
original
histogram
displays
scores
one
point
intervals
lead
pretty
big
histogram
100
point
test
interval
sometimes
called
bin
size
can
allow
user
specify
bin
size
display
scores
grouped
accordingly
make
upper
end
top
bin's
interval
highest
score
list
nobody
scored
say
80
empty
space
80
100
likewise
go
lower
lowest
score
take
number
bins
parameter
calculate
bin
size
based
top
score
bottom
score
many
bins
user
wants
take
lowest
5
scores
collect
bottom
bin
points
may
spare
feelings
person
lowest
score
class
scale
histogram
horizontally
bars
may
wide
class
large
let
user
specify
length
widest
bar
scale
others
accordingly
print
histogram
horizontally
back
speak
use
functions
picturing
programs
rkt
teachpack
produce
histograms
graphically
implement
collection
students
binary
search
tree
sorted
students'
names
distinguish
score
appropriate
someone
missed
assignment
entirely
zero
someone
assignment
earned
zero
credit
submit
file
containing
definitions
usual
via
checkmate
complete
last
partner
evaluation
form
eee
uci
edu
please
saturday
morning
latest
get
credit
written
david
kay
innaugural
informatics
core
course
fall
2004
modified
fall
2005
fall
2008
fall
2009
modified
fall
2010
david
kay
reflect
picturing
programs
text
fall
2011
include
multiple
starting
points
david
kay
kay
uci
edu
wednesday
november
23
2011
12
12
pm
