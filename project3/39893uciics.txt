
circumcenters triangles 
newsgroups
comp
graphics
sci
image
processing
comp
graphics
algorithms
orourke
sophia
smith
edu
joseph
o'rourke
subject
re
center
circle
3
edge
points
organization
smith
college
northampton
ma
us
date
sat
18
sep
1993
17
54
05
gmt
happens
just
prepared
answer
posed
question
part
textbook
exercise
let
three
given
points
use
0
1
coordinates
coordinates
center
0
1
circle
0
1
0
2
1
0
2
1
2
1
1
2
1
0
2
1
1
2
1
0
2
1
1
2
1
0
2
1
0
2
1
1
2
1
1
2
1
1
0
2
0
1
2
0
0
2
0
0
2
0
1
2
0
1
2
0
0
2
0
1
2
0
0
2
0
0
2
0
1
2
0
1
2
0
2
1
0
1
0
1
0
1
0
1
0
1
0
radius
circle
2
0
0
2
1
1
2
degeneracies
occur
0
watson
madvax
uwa
oz
au
dave
watson
newsgroups
comp
graphics
sci
image
processing
comp
graphics
algorithms
subject
re
center
circle
3
edge
points
triangle
circumcenter
date
20
sep
1993
01
23
09
gmt
organization
maths
dept
uwa
article
1993sep18
175405
16512
sophia
smith
edu
orourke
sophia
smith
edu
joseph
o'rourke
writes
happens
just
prepared
answer
posed
question
part
textbook
exercise
let
three
given
points
use
0
1
coordinates
coordinates
center
0
1
circle
equations
0
1
deleted
2
1
0
1
0
1
0
1
0
1
0
1
0
radius
circle
2
0
0
2
1
1
2
degeneracies
occur
0
efficiently
20
multiply
divide
operations
versus
57
use
0
0
0
0
0
1
1
1
1
2
1
1
0
0
0
0
1
1
1
1
2
1
1
1
0
0
0
0
1
1
1
1
2
0
0
0
0
0
0
1
1
1
1
2
0
0
0
0
1
1
0
0
1
1
squared
circumradius
2
0
0
2
1
1
2
approach
uses
cramer's
rule
find
intersection
two
perpendicular
bisectors
triangle
edges
dave
watson
internet
watson
maths
uwa
edu
au
department
mathematics
tel
61
9
380
3359
university
western
australia
fax
61
9
380
1028
nedlands
wa
6009
australia
real
data
full
surprises
date
19
jun
1997
09
45
45
0400
william
flis
flis
indy
dynaeast
com
subject
circumscribing
simplices
eppstein
ics
uci
edu
eppstein
ics
uci
edu
re
http
www
ics
uci
edu
eppstein
junkyard
circumcircle
html
circumscribing
triangle
tet
simplex
given
vertex
coordinates
can
easily
done
algebraically
little
trick
expand
2
2
2
2
2ax
2
2
2by
2
2
since
non
linear
seems
easily
use
find
let
2
2
2
1
re
arrange
yield
2x
2y
2
2
2
now
linear
apply
3
points
solve
cramer's
rule
x1
2
y1
2
2y1
1
x2
2
y2
2
2y2
1
x2
2
y2
2
x1
2
y1
2
y2
y1
x3
2
y3
2
2y3
1
x3
2
y3
2
x1
2
y1
2
y3
y1
2x1
2y1
1
2
x2
x1
y2
y1
2x2
2y2
1
x3
x1
y3
y1
2x3
2y3
1
similarly
x2
x1
x2
2
y2
2
x1
2
y1
2
y2
y1
x3
2
y3
2
x1
2
y1
2
denominator
equivalent
watson's
formula
derived
geometrically
side
note
watson
saved
3
multiplications
formula
incorporating
factor
2
denominator
term
cheaper
find
original
equation
applying
cramer's
rule
3rd
time
etc
can
also
written
comparing
eq
2
'three
point
form'
2
2
1
x1
2
y1
2
x1
y1
1
0
x2
2
y2
2
x2
y2
1
x3
2
y3
2
x3
y3
1
sphere
tet
factoring
2's
x1
2
y1
2
z1
2
y1
z1
1
x2
2
y2
2
z2
2
y2
z2
1
x3
2
y3
2
z3
2
y3
z3
1
x4
2
y4
2
z4
2
y4
z4
1
2
x1
y1
z1
1
x2
y2
z2
1
x3
y3
z3
1
x4
y4
z4
1
determinants
easily
reduced
3x3
size
original
uncertain
source
found
result
triangles
computer
program
written
15
years
ago
using
ever
since
recently
figure
formula
derived
web
pages
valuable
resource
thank
maintaining
please
keep
good
work
william
flis
director
research
dyna
east
corporation
3620
horizon
drive
king
prussia
pa
19406
610
270
9900
ext
130
fax
610
270
9744
http
www
dynaeast
com
flis
flishome
html
eppstein
ics
uci
edu
flis
indy
dynaeast
com
subject
re
circumscribing
simplices
date
thu
19
jun
1997
09
56
25
0700
yes
linearization
trick
pretty
standard
computational
geometry
specific
variation
use
mapping
vector
onto
2
turns
circles
generally
spheres
dimensions
planes
generally
hyperplanes
1
dimensions
equation
2
2
1
x1
2
y1
2
x1
y1
1
0
x2
2
y2
2
x2
y2
1
x3
2
y3
2
x3
y3
1
standard
equation
plane
three
points
xi
yi
xi
2
yi
2
one
reference
general
ideas
like
turning
nonlinear
equations
higher
dimensional
linear
ones
adding
extra
variables
polynomials
original
equations
general
approach
dimensional
geometric
queries
yao
yao
17th
acm
symp
theory
computing
1985
163
168
probably
idea
known
long
less
algorithmic
contexts
added
message
page
assume
ok
let
know
compgeom
discuss
research
bell
labs
com
subject
re
circumsphere
date
wed
1
apr
98
0
34
28
est
jonathan
shewchuk
jrs
cs
cmu
edu
searching
numerically
stable
algorithm
calculate
radius
perhaps
center
circumsphere
tetrahedron
three
dimensions
given
coordinates
vertices
3
let
vectors
3
let
ax
ay
az
components
likewise
let
denote
euclidean
norm
let
denote
cross
product
2
2
2
bx
ax
ay
bz
az
2
cx
ax
cy
ay
cz
az
dx
ax
dy
ay
dz
az
2
2
2
bx
ax
ay
bz
az
2
cx
ax
cy
ay
cz
az
dx
ax
dy
ay
dz
az
notes
stability
note
expression
purely
function
differences
coordinates
advantage
relative
error
incurred
computation
also
function
differences
vertices
influenced
absolute
coordinates
vertices
applications
vertices
usually
nearer
origin
property
advantageous
someone
gives
formula
property
wary
similarly
formula
incurs
roundoff
error
proportional
differences
vertices
incur
roundoff
error
proportional
absolute
coordinates
vertices
final
addition
expressions
unstable
one
case
denominator
close
zero
instability
arises
tetrahedron
nearly
degenerate
unavoidable
depending
application
may
want
use
exact
arithmetic
compute
value
determinant
fortunately
determinant
basis
well
studied
3d
orientation
test
several
fast
algorithms
providing
accurate
approximations
determinant
available
resources
available
numerical
algebraic
computation
page
nina
amenta's
directory
computational
geometry
software
http
www
geom
umn
edu
software
cglist
alg
html
using
floating
point
inputs
opposed
integers
one
package
can
estimate
determinant
somewhat
accurately
http
www
cs
cmu
edu
quake
robust
html
want
even
aggressive
stability
might
reorder
vertices
tetrahedron
vertex
`a'
subtracted
vertices
roughly
speaking
vertex
center
minimum
spanning
tree
tetrahedron's
four
vertices
information
idea
see
steven
fortune
numerical
stability
algorithms
2d
delaunay
triangulations
international
journal
computational
geometry
applications
5
1
2
193
213
march
june
1995
completeness
stable
expressions
circumradius
circumcenter
triangle
2
3
incidentally
expressions
given
2
better
behaved
terms
relative
error
suggestions
currently
given
geometry
junkyard
http
www
ics
uci
edu
eppstein
junkyard
triangulation
html
triangle
2
note
want
compute
one
sqrt
use
sqrt
2
2
2
bx
ax
ay
2
cx
ax
cy
ay
ay
2
cy
ay
2
mx
ax
bx
ax
ay
2
cx
ax
cy
ay
bx
ax
2
cx
ax
2
ay
bx
ax
ay
2
cx
ax
cy
ay
triangle
3
2
2
2
2
2
2
2
2
finally
code
computes
vector
whose
norm
three
cases
notice
ifdef
statements
allow
choose
whether
use
aforementioned
package
approximate
determinant
attempt
made
reorder
vertices
improve
stability
tetcircumcenter
find
circumcenter
tetrahedron
result
returned
terms
xyz
coordinates
xi
eta
zeta
coordinates
relative
tetrahedron's
point
`a'
`a'
origin
coordinate
systems
hence
xyz
coordinates
returned
absolute
one
must
add
coordinates
`a'
find
absolute
coordinates
circumcircle
however
means
result
frequently
accurate
possible
absolute
coordinates
returned
due
limited
floating
point
precision
general
circumradius
can
computed
much
accurately
xi
eta
zeta
coordinate
system
defined
terms
tetrahedron
point
`a'
origin
coordinate
system
edge
`ab'
extends
one
unit
along
xi
axis
edge
`ac'
extends
one
unit
along
eta
axis
edge
`ad'
extends
one
unit
along
zeta
axis
coordinate
values
useful
linear
interpolation
`xi'
null
input
xi
eta
zeta
coordinates
will
computed
void
tetcircumcenter
circumcenter
xi
eta
zeta
double
3
double
3
double
3
double
3
double
circumcenter
3
double
xi
double
eta
double
zeta
double
xba
yba
zba
xca
yca
zca
xda
yda
zda
double
balength
calength
dalength
double
xcrosscd
ycrosscd
zcrosscd
double
xcrossdb
ycrossdb
zcrossdb
double
xcrossbc
ycrossbc
zcrossbc
double
denominator
double
xcirca
ycirca
zcirca
use
coordinates
relative
point
`a'
tetrahedron
xba
0
0
yba
1
1
zba
2
2
xca
0
0
yca
1
1
zca
2
2
xda
0
0
yda
1
1
zda
2
2
squares
lengths
edges
incident
`a'
balength
xba
xba
yba
yba
zba
zba
calength
xca
xca
yca
yca
zca
zca
dalength
xda
xda
yda
yda
zda
zda
cross
products
edges
xcrosscd
yca
zda
yda
zca
ycrosscd
zca
xda
zda
xca
zcrosscd
xca
yda
xda
yca
xcrossdb
yda
zba
yba
zda
ycrossdb
zda
xba
zba
xda
zcrossdb
xda
yba
xba
yda
xcrossbc
yba
zca
yca
zba
ycrossbc
zba
xca
zca
xba
zcrossbc
xba
yca
xca
yba
calculate
denominator
formulae
ifdef
exact
use
orient3d
http
www
cs
cmu
edu
quake
robust
html
ensure
correctly
signed
reasonably
accurate
result
avoiding
possibility
division
zero
denominator
0
5
orient3d
else
take
chances
floating
point
roundoff
denominator
0
5
xba
xcrosscd
yba
ycrosscd
zba
zcrosscd
endif
calculate
offset
`a'
circumcenter
xcirca
balength
xcrosscd
calength
xcrossdb
dalength
xcrossbc
denominator
ycirca
balength
ycrosscd
calength
ycrossdb
dalength
ycrossbc
denominator
zcirca
balength
zcrosscd
calength
zcrossdb
dalength
zcrossbc
denominator
circumcenter
0
xcirca
circumcenter
1
ycirca
circumcenter
2
zcirca
xi
double
null
interpolate
linear
function
circumcenter
define
coordinate
system
xi
axis
directed
`a'
`b'
eta
axis
directed
`a'
`c'
zeta
axis
directed
`a'
`d'
values
xi
eta
zeta
computed
cramer's
rule
solving
systems
linear
equations
xi
xcirca
xcrosscd
ycirca
ycrosscd
zcirca
zcrosscd
2
0
denominator
eta
xcirca
xcrossdb
ycirca
ycrossdb
zcirca
zcrossdb
2
0
denominator
zeta
xcirca
xcrossbc
ycirca
ycrossbc
zcirca
zcrossbc
2
0
denominator
tricircumcenter
find
circumcenter
triangle
result
returned
terms
coordinates
xi
eta
coordinates
relative
triangle's
point
`a'
`a'
origin
coordinate
systems
hence
coordinates
returned
absolute
one
must
add
coordinates
`a'
find
absolute
coordinates
circumcircle
however
means
result
frequently
accurate
possible
absolute
coordinates
returned
due
limited
floating
point
precision
general
circumradius
can
computed
much
accurately
xi
eta
coordinate
system
defined
terms
triangle
point
`a'
origin
coordinate
system
edge
`ab'
extends
one
unit
along
xi
axis
edge
`ac'
extends
one
unit
along
eta
axis
coordinate
values
useful
linear
interpolation
`xi'
null
input
xi
eta
coordinates
will
computed
void
tricircumcenter
circumcenter
xi
eta
double
2
double
2
double
2
double
circumcenter
2
double
xi
double
eta
double
xba
yba
xca
yca
double
balength
calength
double
denominator
double
xcirca
ycirca
use
coordinates
relative
point
`a'
triangle
xba
0
0
yba
1
1
xca
0
0
yca
1
1
squares
lengths
edges
incident
`a'
balength
xba
xba
yba
yba
calength
xca
xca
yca
yca
calculate
denominator
formulae
ifdef
exact
use
orient2d
http
www
cs
cmu
edu
quake
robust
html
ensure
correctly
signed
reasonably
accurate
result
avoiding
possibility
division
zero
denominator
0
5
orient2d
else
take
chances
floating
point
roundoff
denominator
0
5
xba
yca
yba
xca
endif
calculate
offset
`a'
circumcenter
xcirca
yca
balength
yba
calength
denominator
ycirca
xba
calength
xca
balength
denominator
circumcenter
0
xcirca
circumcenter
1
ycirca
xi
double
null
interpolate
linear
function
circumcenter
define
coordinate
system
xi
axis
directed
`a'
`b'
eta
axis
directed
`a'
`c'
values
xi
eta
computed
cramer's
rule
solving
systems
linear
equations
xi
xcirca
yca
ycirca
xca
2
0
denominator
eta
ycirca
xba
xcirca
yba
2
0
denominator
tricircumcenter3d
find
circumcenter
triangle
3d
result
returned
terms
xyz
coordinates
xi
eta
coordinates
relative
triangle's
point
`a'
`a'
origin
coordinate
systems
hence
xyz
coordinates
returned
absolute
one
must
add
coordinates
`a'
find
absolute
coordinates
circumcircle
however
means
result
frequently
accurate
possible
absolute
coordinates
returned
due
limited
floating
point
precision
general
circumradius
can
computed
much
accurately
xi
eta
coordinate
system
defined
terms
triangle
point
`a'
origin
coordinate
system
edge
`ab'
extends
one
unit
along
xi
axis
edge
`ac'
extends
one
unit
along
eta
axis
coordinate
values
useful
linear
interpolation
`xi'
null
input
xi
eta
coordinates
will
computed
void
tricircumcenter3d
circumcenter
xi
eta
double
3
double
3
double
3
double
circumcenter
3
double
xi
double
eta
double
xba
yba
zba
xca
yca
zca
double
balength
calength
double
xcrossbc
ycrossbc
zcrossbc
double
denominator
double
xcirca
ycirca
zcirca
use
coordinates
relative
point
`a'
triangle
xba
0
0
yba
1
1
zba
2
2
xca
0
0
yca
1
1
zca
2
2
squares
lengths
edges
incident
`a'
balength
xba
xba
yba
yba
zba
zba
calength
xca
xca
yca
yca
zca
zca
cross
product
edges
ifdef
exact
use
orient2d
http
www
cs
cmu
edu
quake
robust
html
ensure
correctly
signed
reasonably
accurate
result
avoiding
possibility
division
zero
xcrossbc
orient2d
1
2
1
2
1
2
ycrossbc
orient2d
2
0
2
0
2
0
zcrossbc
orient2d
0
1
0
1
0
1
else
take
chances
floating
point
roundoff
xcrossbc
yba
zca
yca
zba
ycrossbc
zba
xca
zca
xba
zcrossbc
xba
yca
xca
yba
endif
calculate
denominator
formulae
denominator
0
5
xcrossbc
xcrossbc
ycrossbc
ycrossbc
zcrossbc
zcrossbc
calculate
offset
`a'
circumcenter
xcirca
balength
yca
calength
yba
zcrossbc
balength
zca
calength
zba
ycrossbc
denominator
ycirca
balength
zca
calength
zba
xcrossbc
balength
xca
calength
xba
zcrossbc
denominator
zcirca
balength
xca
calength
xba
ycrossbc
balength
yca
calength
yba
xcrossbc
denominator
circumcenter
0
xcirca
circumcenter
1
ycirca
circumcenter
2
zcirca
xi
double
null
interpolate
linear
function
circumcenter
define
coordinate
system
xi
axis
directed
`a'
`b'
eta
axis
directed
`a'
`c'
values
xi
eta
computed
cramer's
rule
solving
systems
linear
equations
three
ways
calculation
using
xcrossbc
ycrossbc
zcrossbc
choose
whichever
largest
magnitude
improve
stability
avoid
division
zero
xcrossbc
ycrossbc
xcrossbc
ycrossbc
xcrossbc
zcrossbc
xcrossbc
zcrossbc
xi
ycirca
zca
zcirca
yca
xcrossbc
eta
zcirca
yba
ycirca
zba
xcrossbc
else
ycrossbc
zcrossbc
ycrossbc
zcrossbc
xi
zcirca
xca
xcirca
zca
ycrossbc
eta
xcirca
zba
zcirca
xba
ycrossbc
else
xi
xcirca
yca
ycirca
xca
zcrossbc
eta
ycirca
xba
xcirca
yba
zcrossbc
compgeom
mailing
lists
see
http
netlib
bell
labs
com
netlib
compgeom
readme
html
send
mail
compgeom
request
research
bell
labs
com
line
send
readme
date
thu
02
apr
1998
08
44
46
0500
william
flis
flis
indy
dynaeast
com
reply
flis
indy
dynaeast
com
organization
dyna
east
corporation
compgeom
discuss
research
bell
labs
com
subject
re
circumsphere
jrs
pyramid
cmcl
cs
cmu
edu
wrote
searching
numerically
stable
algorithm
calculate
radius
perhaps
center
circumsphere
tetrahedron
three
dimensions
given
coordinates
vertices
3
part
omitted
notes
stability
note
expression
purely
function
differences
coordinates
advantage
relative
error
incurred
computation
also
function
differences
vertices
influenced
absolute
coordinates
vertices
applications
vertices
usually
nearer
origin
property
advantageous
someone
gives
formula
property
wary
part
omitted
completeness
stable
expressions
circumradius
circumcenter
triangle
2
3
incidentally
expressions
given
2
better
behaved
terms
relative
error
suggestions
currently
given
geometry
junkyard
http
www
ics
uci
edu
eppstein
junkyard
triangulation
html
private
response
herr
kerscher's
question
recommended
look
page
particularly
contribution
let
say
prof
shewchuk's
criticism
regarding
relative
error
correct
also
practical
significance
good
behavior
refers
obtained
2
triangles
using
particular
form
attributed
jim
ward
given
recent
comp
graphics
algorithms
faq
http
www
cis
ohio
state
edu
hypertext
faq
usenet
graphics
algorithms
faq
faq
html
form
desired
property
using
differences
coordinates
added
advantage
using
integer
arithmetic
forms
avoid
overflows
many
practical
cases
simplex
far
origin
thus
formula
given
geometry
junkyard
x1
2
y1
2
2y1
1
x2
2
y2
2
2y2
1
x2
2
y2
2
x1
2
y1
2
y2
y1
x3
2
y3
2
2y3
1
x3
2
y3
2
x1
2
y1
2
y3
y1
2x1
2y1
1
2
x2
x1
y2
y1
2x2
2y2
1
x3
x1
y3
y1
2x3
2y3
1
needs
taken
another
step
achieve
desired
property
terms
first
column
numerator
re
written
like
x2
2
y2
2
x1
2
y1
2
x2
x1
x2
x1
y2
y1
y2
y1
x3
2
y3
2
x1
2
y1
2
x3
x1
x3
x1
y3
y1
y3
y1
formulas
tets
3
geometry
junkyard
need
similar
treatment
william
flis
director
research
dyna
east
corporation
3620
horizon
drive
king
prussia
pa
19406
2647
610
270
9900
x130
fax
610
270
9744
flis
indy
dynaeast
com
flis
detk
com
http
www
dynaeast
com
flis
flishome
html
compgeom
mailing
lists
see
http
netlib
bell
labs
com
netlib
compgeom
readme
html
send
mail
compgeom
request
research
bell
labs
com
line
send
readme
