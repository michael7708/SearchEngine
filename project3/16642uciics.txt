
peters selection py 
path
news
service
uci
edu
csulb
edu
canoe
uoregon
edu
logbridge
uoregon
edu
netnews
com
nntp
abs
net
uunet
dca
uu
net
news
baymountain
net
mail
tim
peters
newsgroups
comp
lang
python
subject
re
newbie
finding
key
index
min
max
element
date
sun
05
may
2002
05
22
04
0400
organization
none
lines
136
message
id
nntp
posting
host
mail
python
org
mime
version
1
0
content
type
text
plain
charset
windows
1252
content
transfer
encoding
7bit
trace
news
baymountain
net
1020593547
11922
63
102
49
29
5
may
2002
10
12
27
gmt
complaints
abuse
baymountain
net
nntp
posting
date
5
may
2002
10
12
27
gmt
reply
mimeole
produced
microsoft
mimeole
v6
00
2600
0000
mailer
microsoft
outlook
imo
build
9
0
2416
9
0
2911
0
importance
normal
priority
3
normal
msmail
priority
normal
spam
status
hits
6
0
required
5
0
tests
rep
body
python
zope
version
2
11
errors
python
list
admin
python
org
beenthere
python
list
python
org
mailman
version
2
0
10
101270
precedence
bulk
list
help
list
post
list
subscribe
list
id
general
discussion
list
python
programming
language
list
unsubscribe
list
archive
errors
python
list
admin
python
org
beenthere
python
list
python
org
original
python
list
python
org
xref
news
service
uci
edu
comp
lang
python
199582
david
eppstein
pretty
sure
usually
better
just
sort
list
return
middle
item
instead
using
linear
time
median
finding
algorithm
despite
nonlinear
big
time
sort
many
years
ago
write
linear
time
selector
pascal
horridly
painful
never
tried
old
enough
now
confront
fears
tried
python
pleasantly
surprised
easily
went
performance
bad
considering
written
python
much
effort
went
speeding
python's
sort
seconds
took
finding
median
various
sizes
arrays
random
doubles
means
3
runs
size
clever
sort
2
0
000
0
000
3
0
000
0
000
5
0
000
0
000
9
0
000
0
000
17
0
000
0
000
33
0
000
0
000
65
0
001
0
000
129
0
002
0
000
257
0
002
0
000
513
0
004
0
001
1025
0
008
0
002
2049
0
018
0
004
4097
0
037
0
009
8193
0
088
0
020
16385
0
166
0
047
32769
0
303
0
106
65537
0
638
0
236
131073
1
276
0
528
262145
2
579
1
152
524289
5
245
2
523
1048577
10
674
5
460
2097153
22
063
11
863
got
bored
using
current
cvs
python
somewhat
zippier
currently
released
pythons
contrast
python
version
take
much
longer
find
median
takes
just
fill
array
random
doubles
random
random
coded
python
obvious
unpleasant
ways
speed
python
version
lot
data
copying
skip
exorcising
old
demons
ly
y'rs
tim
find
rank'th
smallest
value
worst
case
quadratic
time
def
short
find
rank
sort
return
rank
1
find
rank'th
smallest
value
worst
case
linear
time
def
find
rank
len
assert
1
median
0
1
median
1
