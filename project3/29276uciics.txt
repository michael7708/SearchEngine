optimal binary search trees 
optimal binary search trees 
optimal
binary
search
trees
useful
static
dictionary
given
ordered
set
a1
a2
wish
process
sequences
member
queries
also
know
probability
various
requests
occurring
pi
prob
member
ai
asked
1
qi
prob
member
asked
ai
ai
1
0
a0
¡Û
1
¡Û
help
analyze
time
complexity
add
leaves
binary
search
tree
wherever
null
link
label
node
cost
member
1
depth
set
ai
ai
1
cost
member
depth
leaf
average
time
complexity
tree
can
found
summing
costs
accessing
node
mutiplied
probability
access
cost
binary
search
tree
1
pi
1
depth
ai
0
qi
depth
leaf
problem
given
p's
q's
find
minimize
cost
divide
conquer
approach
suggests
determining
element
belongs
root
determining
subtrees
looks
like
seems
easy
way
determining
root
means
solve
2n
subproblems
elements
root
choice
must
solve
left
right
subtrees
exercise
determine
time
complexity
recursive
approach
start
giving
explicit
recurrence
many
recursion
use
dynamic
programming
0
let
ti
min
cost
tree
problem
ai
aj
involving
probabilities
pi
pj
qi
1
qj
ci
cost
ti
ri
root
ti
define
weight
wi
qi
1
pi
qi
pj
qj
ti
consists
root
containing
ak
left
right
subtrees
root
left
subtree
optimal
min
cost
tree
ti
1
right
subtree
tk
1
also
boundary
conditions
ti
1
empty
tree
wi
1
qi
ci
1
0
ti
depth
vertices
subtrees
precisely
1
depths
subtrees
ti
1
tk
1
therefore
ci
ci
1
wi
1
pk
ck
1
wk
wi
ci
1
ck
1
optimal
ti
will
root
ak
minimizes
sum
ci
1
ck
1
construction
optimal
binary
search
tree
0
wi
1
qi
ci
1
0
ri
1
0
len
1
1
length
len
1
wi
wi
1
pj
qj
value
minimizes
ci
1
ck
1
ci
wi
ci
1
cm
1
ri
leftson
ri
ri
1
rightson
ri
rm
1
time
complexity
algorithm
n3
making
slight
change
will
reduce
complexity
n2
see
example
knuth
3
2nd
ed
436
9
456
27
modify
range
considered
values
len
1
else
value
ri
1
ri
1
minimizes
ci
1
ck
1
dan
hirschberg
last
modified
feb
20
2007
