the knapsack problem 
the knapsack problem 
knapsack
problem
0
1
knapsack
problem
given
objects
weight
wi
value
vi
wish
fill
knapsack
objects
maximize
total
value
constraint
total
weight
maxw
maximize
1
xi
vi
1
xi
wi
maxw
xi
0
1
note
np
complete
problem
probably
polynomial
time
solution
however
pseudo
polynomial
time
solution
term
explained
later
using
dynamic
programming
let
maximum
value
obtainable
choosing
objects
1
total
weight
0
0
maxw
solution
value
problem
maxw
recurrence
wi
1
use
object
else
max
1
use
object
1
wi
vi
use
object
boundary
conditions
0
maxw
0
0
value
objectsfor
0
0
0
value
carry
weight
knapsack
0
maxw
0
0
1
0
maxw
wi
1
else
max
1
1
wi
vi
ans
maxw
time
complexity
maxw
space
complexity
maxw
note
since
maxw
can
quite
large
fact
exponential
size
input
polynomial
time
solution
case
complexity
polynomial
size
input
numbers
appearing
within
input
said
complexity
pseudo
polynomial
input
practice
1000
maxw
106
might
able
afford
time
space
way
save
space
resulting
time
maxw
space
maxw
knapsack
0
maxw
0
1
maxw
downto
wi
max
wi
vi
ans
maxw
integer
knapsack
problem
now
may
take
non
negative
integer
number
copies
object
maximize
1
xi
vi
1
xi
wi
maxw
xi
0
1
2
intknapsack
0
maxw
0
0
1
0
maxw
1
wi
1
wi
max
1
wi
vi
ans
maxw
time
complexity
maxw2
space
complexity
maxw
can
reduce
time
space
complexities
intknapsack
0
maxw
0
1
wi
maxw
max
wi
vi
ans
maxw
time
complexity
maxw
space
complexity
maxw
dan
hirschberg
last
modified
aug
24
2006
