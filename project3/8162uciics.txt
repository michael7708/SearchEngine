ics 22 cse 22 project 1 perfect candidate 
project 1 
project
1
perfect
candidate
due
date
time
friday
april
8
6
59pm
project
done
pairs
using
pair
programming
technique
introduction
like
many
aspects
lives
view
transparently
election
comes
decide
vote
luxury
going
local
polling
place
even
just
submitting
absentee
ballot
casting
vote
thinking
much
work
goes
managing
election
elections
pose
significant
logistical
challenge
ballots
must
designed
printed
voter
registration
lists
must
maintained
registered
voters
can
allowed
vote
must
allowed
vote
must
possible
figure
voters
placed
votes
ultimately
votes
must
counted
results
disseminated
many
logistical
challenges
burden
handling
elections
increasingly
placed
computers
kinds
logistics
among
things
computers
handle
best
though
automated
solutions
present
problems
designed
built
carefully
recent
years
various
paper
voting
mechanisms
replaced
electronic
voting
machines
project
will
let
explore
design
implementation
software
highly
simplified
voting
machine
allows
users
cast
votes
one
race
say
mayor
simpleton
counts
number
votes
candidate
careful
point
design
viable
real
world
voting
machine
requires
fair
amount
care
important
note
voting
machine
lacks
number
important
features
least
form
security
mechanism
essential
realistic
one
choosing
partner
going
assignment
choose
partner
among
people
lab
fine
even
preferable
read
project
write
ahead
time
though
partner
can
hit
ground
running
lab
trouble
finding
partner
notify
ta
can
assisted
finding
one
found
partner
notified
ta
pairing
end
lab
meeting
wednesday
march
30
will
assigned
partner
notified
via
email
ta
selected
partner
will
allow
switch
another
one
will
receive
credit
assignment
work
alone
without
prior
consent
instructor
please
note
prior
consent
include
approaching
us
day
project
due
completed
telling
us
able
find
partner
sure
read
section
entitled
pair
programming
introduction
projects
way
business
ics
22
cse
22
essentially
ics
21
cse
21
last
quarter
subtle
differences
worth
knowing
front
program
program
software
simplified
voting
machine
graphical
user
interface
gui
started
reads
information
single
race
input
file
displays
ballot
ballot
can
used
cast
votes
indiscriminately
nothing
program
forces
users
log
otherwise
identify
casting
vote
votes
counted
underneath
covers
displayed
user
voting
progress
closing
ballot
window
program
saves
results
election
output
file
formatted
particular
way
starting
point
give
realistic
context
project
implemented
complete
gui
given
java
code
classes
comprise
gui
will
need
read
understand
modify
code
way
still
can
check
interested
even
cursory
glance
will
demonstrate
coding
even
simple
user
interfaces
like
one
can
complicated
process
also
provided
skeleton
implementation
model
classes
implement
underlying
engine
program
handles
tasks
like
reading
input
file
writing
output
file
counting
votes
permitted
modify
signatures
methods
provided
engine
classes
restriction
motivated
one
practical
need
gui
code
expects
methods
names
take
kinds
parameters
behave
outwardly
exactly
specified
alter
signatures
methods
gui
code
will
longer
compile
work
starting
point
available
zip
archive
getting
started
project
using
eclipse
best
work
project
subsequent
java
projects
within
eclipse
workspace
downloaded
used
lab
project
0
done
project
good
idea
go
back
follow
steps
take
long
will
acclimate
eclipse
environment
using
rest
quarter
assignment
lost
longer
access
workspace
go
back
assignment
page
download
workspace
continue
use
rest
quarter
follow
steps
lab
assignment
create
project
import
starting
point
code
name
project
perfectcandidate
ready
get
started
imported
code
can
compile
program
will
work
correctly
implemented
least
methods
need
implement
writing
code
four
classes
candidate
object
represents
one
candidate
ballot
consisting
name
party
affiliation
number
votes
received
candidate
far
ballot
object
represents
single
ballot
consisting
arraylist
candidates
well
name
office
vote
ballotreader
consists
single
static
method
reads
ballot
input
file
resultwriter
consists
single
static
method
writes
election
results
output
file
format
specified
detail
later
write
methods
four
classes
commented
implemented
job
will
fill
implementation
methods
need
read
understand
modify
code
welcome
read
like
permitted
modify
suggest
working
classes
order
listed
implemented
candidate
ballot
program
compile
run
though
ballot
will
always
consist
candidates
provided
ballotreader
just
constructs
hard
coded
ballot
instead
reading
one
input
file
program
will
write
output
provided
resultwriter
nothing
word
warning
contracts
work
project
made
agreement
contract
sorts
provided
gui
entirety
return
required
write
code
according
provided
specification
code
deviates
specification
say
method
returns
null
supposed
entirely
possible
gui
will
behave
unpredictably
even
crash
illustrates
important
point
building
large
scale
software
many
people
work
together
large
project
important
agree
interfaces
parts
case
partner
collaborating
gui
depends
engine
agreement
engine
conforms
specification
provided
naturally
larger
software
people
pieces
involved
important
kinds
agreements
become
sure
whether
methods
follow
specifications
one
way
solve
problem
test
discuss
testing
bit
later
quarter
gradually
required
demonstrate
testing
project
now
can
write
code
creates
objects
calls
methods
prints
output
console
can
check
whether
output
correct
wise
write
tests
separate
class
main
method
can
execute
program
normally
execute
tests
running
test
class
instead
reading
input
file
input
file
format
program
reads
ballot
information
input
file
example
follows
mayor
simpleton
3
joe
incumbent
powerful
party
mark
challenger
less
powerful
party
gene
unpopular
nobody
party
first
line
input
file
specifies
name
office
voted
upon
next
line
consists
number
specifies
many
candidates
running
office
number
next
lines
specify
candidate
candidate's
name
appearing
line
first
followed
semicolon
followed
candidate's
party
affiliation
may
assume
input
file
will
always
properly
formatted
according
specification
fine
program
misbehave
even
crash
will
test
program
valid
input
files
couple
hints
scanners
capable
reading
one
line
input
time
input
source
including
file
suggest
always
reading
file
one
line
time
processing
line
addition
able
read
one
line
input
time
scanners
can
also
read
one
token
time
definition
token
flexible
can
handled
differently
different
circumstances
default
tokens
separated
spaces
line
breaks
string
123
456
789
contains
three
tokens
123
456
789
however
ways
change
behavior
one
way
usedelimiter
method
see
java
api
documentation
scanner
details
scanners
can
also
wrapped
around
strings
used
breaking
string
smaller
pieces
example
string
numbers
123
456
789
scanner
new
scanner
numbers
hasnextint
system
println
nextint
output
code
fragment
123
456
789
technique
will
come
handy
reading
information
candidate
since
two
pieces
information
line
separated
semicolon
formatting
output
program
just
printing
unformatted
text
console
using
system
println
instead
writing
nicely
formatted
output
file
indicates
results
election
unrealistic
may
local
elections
assume
one
voting
machine
used
voters
example
output
format
follows
results
mayor
simpleton
joe
incumbent
powerful
party
77
mark
challenger
less
powerful
party
105
gene
unpopular
nobody
party
1
winner
mark
challenger
less
powerful
party
details
output
format
first
line
begins
word
results
followed
space
dash
another
space
name
office
users
voted
line
dashes
exactly
many
dashes
characters
first
line
candidate
ballot
can
list
order
appear
ballot
necessary
sort
number
votes
candidate
appearing
separate
line
name
candidate
space
dash
space
candidate's
party
affiliation
collectively
call
candidate's
tag
number
votes
received
candidate
candidate
names
left
justified
first
column
output
numbers
votes
right
justified
last
column
output
calculate
many
columns
output
total
first
figure
number
characters
longest
tag
candidate
example
mark
challenger
less
powerful
party
longest
tag
consisting
37
characters
add
12
length
longest
tag
blank
line
appears
candidates
listed
vote
totals
finally
line
indicates
winner
word
winner
colon
space
winning
candidate's
tag
event
tie
line
read
winner
instead
want
write
formatted
output
left
right
justification
within
certain
numbers
characters
string
format
method
helps
knows
take
data
various
types
format
according
specifications
return
string
first
parameter
pass
called
format
string
used
tell
like
data
formatted
placeholders
data
subsequent
parameters
specify
data
will
replace
placeholders
example
hypothetical
person
class
string
string
format
10s
name
name
string
format
10s
title
title
string
format
10s
4d
height
height
string
format
10s
4d
weight
weight
system
println
code
might
generate
following
output
hypothetical
person
print
console
name
john
doe
title
ceo
height
71
weight
190
format
string
occurrence
character
indicates
placeholder
piece
data
followed
letter
string
integer
optional
number
front
indicates
justification
positive
number
means
right
justify
negative
number
means
left
justify
example
code
can
see
placeholder
10s
means
print
string
left
justified
within
10
characters
extra
space
added
fills
least
10
characters
placeholder
4d
means
print
integer
right
justified
within
4
characters
extra
space
added
needed
placeholder
simply
means
print
string
extra
spaces
added
format
string
two
placeholders
example
code
need
supply
two
parameters
supply
data
example
line
string
format
10s
4d
height
height
tells
method
left
justify
text
height
within
10
characters
follow
colon
space
follow
integer
height
right
justified
within
4
characters
see
end
format
string
says
insert
newline
character
subsequent
characters
will
appear
next
line
string
printed
great
tool
can
use
format
output
make
look
nice
expect
use
format
output
specified
else
might
need
java
library
will
find
following
classes
methods
java
library
useful
sometimes
find
need
know
details
work
yet
talked
class
need
information
see
java
api
documentation
describes
classes
methods
java
library
probably
find
need
read
documentation
trick
documentation
much
java
api
know
looking
focus
rather
reading
everything
arraylistfilereaderfilewriterioexceptionprintwriterscannerstring
format
string
length
note
may
well
able
finish
project
without
using
everything
list
java
large
industrial
strength
library
means
often
many
ways
accomplish
goal
ones
listed
ones
will
likely
present
simplest
path
solution
prior
experience
may
turned
different
choices
part
fine
testing
perhaps
simplest
way
test
program
execute
observe
output
various
inputs
program
one
whose
input
comes
user
interface
addition
input
file
means
running
program
trying
various
combinations
inputs
hand
observing
program's
behavior
primary
advantage
testing
strategy
require
write
additional
code
hand
need
actively
run
test
cases
typing
clicking
mouse
one
step
time
assess
output
reading
comparing
expected
output
major
disadvantage
particular
regard
repeatability
tests
words
want
run
tests
several
times
debug
program
manually
execute
tests
time
manually
comparing
output
expected
output
still
relatively
simple
program
strategy
will
suffice
quarter
progresses
discuss
use
better
testing
strategies
satisfy
testing
portion
project
write
test
plan
test
plan
series
test
cases
specifically
chosen
demonstrate
particular
portion
program
works
correctly
particular
class
input
example
test
case
addresses
problem
attempting
deposit
negative
amount
money
savings
account
using
atm
test
case
negative
deposit
amount
savings
purpose
ensures
users
may
deposit
negative
amount
money
savings
account
positive
deposit
amounts
legal
steps
program's
main
command
prompt
enter
view
balance
command
asked
select
account
view
balance
select
savings
account
program's
main
command
prompt
enter
deposit
command
asked
select
account
target
deposit
select
savings
account
asked
enter
amount
enter
negative
amount
15
expected
output
entering
negative
amount
program
display
error
message
indicating
negative
amounts
may
deposited
savings
account
balance
changed
additional
comments
might
useflu
run
test
cases
two
three
different
negative
amounts
format
test
cases
similarly
style
including
test
case
purpose
steps
expected
output
sections
contents
input
file
relevant
particular
test
case
often
will
include
section
input
file
shows
input
file's
contents
additional
comments
make
particular
test
case
may
leave
additional
comments
section
may
use
software
like
write
test
plan
may
handwrite
submit
either
microsoft
word
format
doc
rich
text
format
rtf
pdf
format
text
file
unfortunately
open
document
able
grade
please
sure
use
one
four
formats
note
also
required
work
test
plan
using
pair
programming
technique
use
writing
code
two
heads
really
better
one
comes
testing
take
minutes
writing
test
plan
make
sure
written
clearly
certainly
looking
fine
literature
minutes
spent
cleaning
grammar
spelling
will
much
appreciated
will
reflected
score
receive
normal
error
boundary
cases
three
kinds
test
cases
like
focus
attention
normal
cases
normal
case
test
case
exercises
ordinary
function
program
using
valid
input
example
depositing
20
atm
constitutes
normal
case
since
legal
expect
see
account's
balance
increase
20
error
cases
error
case
test
case
verifies
program
correctly
handles
invalid
input
error
conditions
example
withdrawing
30
account
20
constitutes
error
case
since
program
will
perform
normally
withdraw
money
case
boundary
cases
sometimes
programs
work
correctly
normal
cases
well
error
cases
misbehave
boundary
normal
error
cases
example
useful
atm
test
happens
attempt
withdraw
exact
balance
account
leaving
0
remaining
test
cases
often
highlight
program's
serious
flaws
made
mistake
using
used
additional
eclipse
skills
might
come
handy
creating
new
class
eclipse
possible
fact
perfectly
reasonable
project
without
creating
new
classes
still
case
want
create
preparation
future
projects
will
definitely
creating
new
classes
let
take
steps
eclipse
creating
new
class
want
create
new
class
perfectcandidate
project
make
sure
perfectcandidate
project
selected
package
explorer
words
click
entry
perfectcandidate
highlighted
file
menu
select
new
class
see
dialog
box
pop
looks
like
dialog
can
tell
eclipse
needs
know
order
create
new
class
thing
need
specify
name
class
can
type
name
field
cursor
displayed
screenshot
default
fine
settings
now
type
name
class
see
warning
appear
near
top
dialog
says
use
default
package
discouraged
safe
ignore
warning
time
typed
name
new
class
click
finish
button
class
creation
dialog
eclipse
will
create
new
class
new
java
file
appropriate
name
will
added
project
will
contain
empty
class
declaration
ready
write
code
deliverables
necessary
one
two
partners
submit
project
tas
aware
partnerships
will
figure
project
submissions
belong
pairing
put
names
student
ids
partners
comment
top
java
files
submit
java
files
including
ones
provided
checkmate
also
submit
test
plan
either
microsoft
word
format
doc
rich
text
format
rtf
pdf
format
text
file
please
turn
class
files
files
generated
eclipse
afterward
take
moment
sure
submitted
files
missed
one
able
compile
run
program
can
result
substantial
penalty
since
able
evaluate
program's
correctness
follow
link
discussion
submit
project
via
checkmate
aware
holding
rules
specified
document
including
one
says
responsible
submitting
version
project
want
graded
regrade
project
simply
submitted
wrong
version
accident
acknowledgements
imported
eric
hennigan's
ics
22
turn
adapted
alex
thornton's
version
developed
many
years
