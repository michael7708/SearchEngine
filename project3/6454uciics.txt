ics 175 project artificial intelligence 
assignment 2 
assignment
2
cs
175
project
artificial
intelligence
due
12
noon
wednesday
october
10th
instructions
assignment
2
goal
week's
assignment
construct
basic
building
blocks
learning
algorithms
particular
build
nearest
neighbor
classifier
get
acquainted
matlab
plotting
capabilities
particular
assignment
consists
three
parts
part
1
will
load
two
simulated
data
sets
look
properties
part
2
will
implement
nearest
neighbor
classification
algorithm
part
3
will
visualize
errors
classifier
makes
part
4
will
test
accuracy
model
can
change
function
begin
programming
part
assignment
review
following
matlab
documentation
will
review
tutorial
material
covered
week
1
will
new
material
can
find
topics
matlab
software
help
matlab
help
menu
item
getting
started
graphicsoverview
matlab
plottingediting
plotsexamplesbasic
plotting
functions
programmingdata
types
structuresbasic
program
components
file
programming
programming
tipscommand
function
syntaxdevelopment
environmentm
file
functionsfunction
argumentsprogram
developmentdebuggingvariables
part
1
classification
data
sets
need
download
two
different
mat
files
called
simdata1
mat
simdata2
mat
save
local
working
directory
two
files
consist
two
different
classification
data
sets
referred
simulateddata1
simulateddata2
data
set
stored
binary
matlab
file
simdata1
mat
simdata2
mat
can
load
matlab
simply
typing
simdata1
example
load
simdata1
simdata1simdata1
shortname
'simulated
data
1'
numfeatures
2
classnames
2x6
char
numclasses
2
description
1x66
char
features
200x2
double
classlabels
200x1
double
simdata1
numclassesans
2
simdata1
descriptionans
simulated
separable
2
class
2
dimensional
data
cs
175
fall
2007
see
simdata1
matlab
structure
several
different
fields
fields
tell
us
simdata1
2
classes
2
features
contains
background
information
simdata1
features
contains
actual
feature
values
dimension
200
rows
2
columns
row
particular
example
two
columns
two
feature
values
feature
feature
vector
simdata1
classlabels
contains
classlabels
corresponding
features
simdata1
features
first
entry
class
label
first
row
simdata1
features
class
labels
assumed
take
value
either
1
2
first
assignment
load
data
write
simple
function
takes
input
data
structure
fields
simdata1
produces
figure
plots
2
dimensional
plot
feature
vectors
axis
feature
1
column
1
axis
feature
2
column
2
called
scatter
plot
function
also
take
2
optional
arguments
namely
2
integers
specify
features
columns
plotted
useful
data
sets
2
features
since
can
plot
two
time
manner
two
arguments
specified
function
choose
features
1
2
plot
default
function
also
plot
points
class
different
colors
can
assume
wish
2
classes
named
1
2
project
assignments
will
likely
involve
2
class
problems
commands
plot
'r
'
will
plot
values
feature
feature
using
red
stars
will
need
figure
generalize
plots
data
points
class
1
one
color
data
points
class
2
another
color
hold
command
useful
keeping
results
several
plot
commands
screen
will
also
need
use
logical
subscripting
feature
matlab
find
examples
belong
class
function
needs
following
header
information
need
give
exact
name
arguments
order
function
classplot
data
function
classplot
data
brief
description
function
name
cs
175
date
inputs
data
structure
fields
described
comment
header
describe
structure
explicitly
note
using
certain
fields
structure
function
need
define
fields
input
comments
code
goes
feel
free
add
features
labeling
axis
adding
title
plot
etc
written
function
able
call
function
classplot
simdata1
1
2
see
data
2
classes
can
perfectly
separated
first
dimension
axis
call
classplot
simdata2
1
2
see
2
classes
now
overlapped
cloud
points
non
linear
shape
2
classes
can
separated
single
line
part
2
nearest
neighbor
classifier
implement
matlab
function
implements
nn
classifier
pseudocode
algorithm
roughly
follows
note
training
classifier
just
takes
training
data
set
uses
memory
classifying
new
feature
vectors
read
training
data
set
dtrain
feature
vector
classified
kneighbors
nearest
neighbors
dtrain
kclasses
class
values
kneighbors
kvote
common
target
value
kclasses
predicted
class
kvote
fairly
high
level
description
tricky
part
finding
neighbors
use
euclidean
distance
define
closeness
also
remember
assignment
1
already
implemented
function
find
single
closest
neighbor
just
need
generalize
function
find
nearest
neighbors
implement
matlab
function
takes
input
labeled
training
data
set
labels
test
data
set
without
labels
will
make
predictions
function
returns
class
predictions
test
data
set
note
call
code
will
need
extract
feature
data
matrix
class
label
vector
general
structure
last
section
may
want
write
simple
additional
function
will
function
class
predictions
knn
traindata
trainlabels
testdata
function
class
predictions
knn
traindata
trainlabels
testdata
brief
description
function
name
cs
175
date
inputs
traindata
n1
vector
feature
data
memory
knn
trainlabels
n1
1
vector
classlabels
traindata
odd
positive
integer
indicating
number
neighbors
use
testdata
n2
vector
feature
data
testing
knn
classifier
outputs
class
predictions
n2
1
vector
predicted
class
values
code
goes
please
make
sure
implement
function
accepts
input
arguments
exactly
format
specified
part
3
plotting
errors
nearest
neighbor
classifier
section
assignment
will
write
function
1
builds
knn
classifier
using
code
section
2
2
calculates
error
rate
classifier
prints
screen
finally
3
plots
testdata
using
first
2
features
data
class
color
coded
code
first
part
assignment
also
overlays
circles
data
points
misclassified
classifier
top
lines
code
look
like
function
knn
plot
traindata
trainlabels
testdata
testlabels
function
knn
plot
traindata
trainlabels
testdata
testlabels
predicts
class
labels
data
testdata
using
nearest
neighbors
traindata
plots
data
using
first
2
dimensions
first
2
features
displaying
data
class
different
colors
overlaying
circles
points
incorrectly
classified
inputs
traindata
n1
vector
feature
data
memory
knn
trainlabels
n1
1
vector
classlabels
traindata
odd
positive
integer
indicating
number
neighbors
use
testdata
n2
vector
feature
data
testing
knn
classifier
trainlabels
n2
1
vector
classlabels
traindata
may
find
useful
use
following
plotting
circles
plot
xvalues
yvalues
'bo'
'markersize'
10
test
code
simdata1
simdata2
different
values
split
data
simdata1
simdata2
training
testing
subsets
first
50
rows
feature
data
training
2nd
50
testing
randomly
partition
rows
training
testing
subsets
find
errors
produced
simdata1
different
values
different
partitions
data
error
rate
simdata2
typically
7
10
higher
part
4
calculating
error
rate
nearest
neighbor
classifier
simulateddata2
number
neighbors
varied
implement
function
will
take
training
data
set
labels
test
data
set
labels
calculate
errors
nearest
neighbor
classifier
different
values
going
1
3
5
7
value
kmax
function
returns
vector
error
rates
classifier
test
data
set
value
error
rate
defined
number
points
incorrectly
classified
divided
total
number
points
expressed
percentage
function
also
takes
optional
parameter
plotflag
set
1
causes
function
plot
accuracy
function
pseudocode
follows
read
training
data
set
dtrain
dtest
1
3
5
kmax
odd
numbers
classify
point
dtest
using
nearest
neighbors
dtest
error
100
number
points
incorrectly
classified
number
points
dtest
end
implement
matlab
function
implements
pseudocode
matlab
function
must
input
output
format
function
errors
knn
error
rates
traindata
trainlabels
testdata
testlabels
kmax
plotflag
function
errors
knn
error
rates
traindata
trainlabels
testdata
testlabels
kmax
plotflag
brief
description
function
name
cs
175
date
inputs
traindata
n1
vector
feature
data
memory
knn
trainlabels
n1
1
vector
classlabels
traindata
testdata
n2
vector
feature
data
testing
knn
classifier
testlabels
n2
1
vector
classlabels
traindata
kmax
odd
positive
integer
indicating
maximum
number
neighbors
plotflag
optional
argument
1
error
rates
versus
plotted
otherwise
plot
outputs
errors
1
vector
error
rates
testdata
number
values
tested
code
goes
please
make
sure
implement
function
accepts
input
arguments
exactly
format
specified
note
many
possible
tricks
terms
trying
speed
code
like
example
calculate
kmax
nearest
neighbors
first
store
results
just
use
results
generate
results
kmax
2
kmax
4
without
recalculating
distances
1
however
least
use
vectorization
possible
computing
euclidean
distance
vector
row
matrix
less
efficient
make
code
longer
will
take
run
experiment
traindata
testdata
defined
follows
traindata
first
1000
rows
simdata2
features
testdata
second
1000
rows
traindata
simdata2
features
1
1000
testdata
simdata2
features
1001
2000
trainlabels
testlabels
defined
corresponding
class
label
values
simdata2
use
code
calculate
error
rates
test
data
values
1
3
5
75
using
training
test
data
sets
write
brief
one
page
summary
interpretation
results
part
4
classification
error
rate
varies
vary
function
include
document
graph
test
error
rates
versus
1
3
5
49
produced
code
part
3
can
simply
cut
paste
graph
matlab
word
just
select
copy
figure
edit
menu
figure
window
matlab
part
5
optional
extra
credit
plotting
classification
boundaries
nearest
neighbor
classifier
useful
function
automatically
plot
decision
boundary
implicitly
defined
training
data
set
given
training
data
set
class
labels
5
classes
draws
resulting
decision
boundary
knn
classifier
specified
user
may
want
look
voronoi
function
matlab
see
provides
ideas
function
called
knn
decision
boundaries
note
part
5
extra
credit
program
works
completely
correctly
well
documented
will
get
1
additional
bonus
point
100
towards
grade
class
partial
credit
attempt
confident
understand
matlab
well
point
completed
tested
parts
assignment
turn
put
4
files
called
classplot
knn
knn
plot
knn
error
rates
textfile
writeup
part
4
word
ascii
format
fine
eee
175
drop
box
assignment
2
also
include
files
code
needs
call
wrote
assignment
1
include
extra
credit
assignment
