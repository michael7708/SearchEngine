ics 31 w13 quiz 3 
quiz 3 
ics
31
winter
2013
quiz
3
sequences
statements
python
print
def
triple
int
int
'''
return
three
times
parameter
'''
return
3print
'four'
print
triple
5
print
'score'
print
triple
2
triple
10
print
triple
3
triple
100
answer
feedback
four15score369
300
items
line
except
9
300
eee
may
format
correctly
however
def
print
copies
int
str
'''
print
specified
number
copies
string
'''
print
return
print
'heads'
print
copies
4
'flip'
print
'tails'
answer
feedback
heads
flipflipflipflip
tails
correct
formatting
three
lines
one
per
item
eee
may
show
way
assume
following
definitions
5animal
namedtuple
'animal'
'name
species
age
weight'
'tinker'
'evers'
'chance'
data
type
following
expressions
choose
int
float
bool
str
list
animal
10
answer
feedback
int3
14159answer
feedback
float'rhinoceros'answer
feedback
str12
5
1
answer
feedback
intlen
'hippopotamus'
answer
feedback
intanimal
'roger'
'rhinoceros'
45
1500
answer
feedback
animalanimal
'roger'
'rhinoceros'
45
1500
ageanswer
feedback
int
2
4
6
8
10
answer
feedback
listlanswer
feedback
listl
1
answer
feedback
strfor
sequences
statements
python
print
'duck't
'duck'print
'donald'
print
'huey'
print
'dewey'
print
'louie'
answer
feedback
donaldhueydeweylouiea
10b
20if
print
'huey'
else
print
'dewey'
print
'louie'
answer
feedback
deweylouiep
'mickey'q
'minnie'print
'mouse'
print
'goofy'
print
'pluto'
answer
feedback
mouseplutol
'huey'
'dewey'
'louie'
print
'nephews'
duck
print
duck
print
'uncle
donald'
answer
feedback
nephewshueydeweylouieuncle
donaldl
2000
2004
2008
2012
print
'election
years'
range
4
print
print
'remember
vote
'
answer
feedback
election
years0
20001
20042
20083
2012remember
vote
write
function
called
abbr
takes
two
non
empty
strings
can
assume
string
least
one
character
long
check
return
two
character
abbreviation
constructed
first
character
input
strings
example
abbr
'university'
'california'
returns
'uc'
definition
follow
design
recipe
including
type
specifications
parameters
return
value
docstring
comment
least
two
example
calls
expected
answers
can
run
tests
can
print
statements
assert
statements
answer
feedback
def
abbr
s1
str
s2
str
str
'''
return
abbreviation
made
first
char
parameter
'''
return
s1
0
s2
0
print
abbr
'university'
'california'
'should
uc'
print
abbr
'los'
'angeles'
'should
la'
good
idea
avoid
duplicate
code
programs
answer
feedback
duplicate
code
makes
program
longer
needs
unnecessarily
longer
code
cluttered
harder
people
read
undersand
need
change
code
appears
find
appearances
change
program
becomes
inconsistent
mess
lab
assignment
2
addressed
issue
important
read
explanatory
material
lab
assignments
python
code
def
double
int
int
'''
return
twice
parameter
value
'''
return
2
nprint
double
13
26
identify
following
function
name
definition
function
definition
function
call
function
double
argument
call
double
definition
parameter
double
use
parameter
double
return
type
specification
docstring
comment
purpose
statement
paper
exam
circle
portions
code
draw
arrows
electronically
just
copy
list
item
copy
text
applies
answer
feedback
function
name
definition
double
first
occurrence
function
definition
def
line
next
two
lines
function
call
function
double
double
13
argument
call
double
13
parameter
definition
double
int
parameter
use
double
2
return
type
specification
int
docstring
comment
purpose
statement
triple
quoted
string
line
2
write
function
called
least
expensive
dish
takes
list
restaurants
returns
name
least
expensive
dish
list
two
approaches
either
one
fine
first
approach
lab
3
uses
sort
method
lists
key
argument
name
function
like
one
def
restaurant
price
restaurant
float
'''
return
value
price
attribute
parameter
'''
define
function
assume
already
exists
second
approach
just
goes
list
loop
keeping
track
lowest
priced
item
found
answer
feedback
def
least
expensive
dish
list
str
'''
return
name
least
expensive
dish
list
'''
sort
key
restaurant
price
return
0
dish
def
least
expensive
dish2
list
str
'''
return
name
least
expensive
dish
list
'''
lowest
price
far
0
price
lowest
dish
far
0
dish
1
price
lowest
price
far
lowest
price
far
price
lowest
dish
far
dish
return
lowest
dish
far
