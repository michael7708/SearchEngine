acm sigplan 2004 workshop interpreters virtual machines emulators ivme 04 
invited talks 
acm
sigplan
2004
workshop
interpreters
virtual
machines
emulators
ivme'04
final
program
invited
talks
online
registration
program
committee
last
year's
ivme
invited
talks
real
life
jvm
design
mobile
devices
bernd
mathiske
sun
labs
design
java
tm
virtual
machines
mobile
devices
strongly
influenced
resource
limitations
memory
sizes
processor
speed
power
consumption
etc
early
designs
like
kvm
main
challenge
meet
given
restrictions
meanwhile
design
space
shifted
widened
accompanied
increasing
user
demands
execution
speed
interactive
responsiveness
reliability
consequently
jvms
mobile
devices
need
incorporate
increasingly
sophisticated
features
cases
trickling
larger
jvms
straight
forward
adopt
latter
though
since
resource
limitations
simultaneously
increase
urgency
enhancing
resource
management
urgency
simplicity
tension
field
will
review
design
decisions
made
cldc
hotspot
tm
java
virtual
machine
high
performance
product
running
mobile
phones
drawing
comparisons
alternative
designs
different
jvms
support
larger
smaller
java
platform
stacks
will
determine
practical
viability
necessity
boundaries
alternative
implementations
features
garbage
collection
multi
tasking
respectively
employing
preverification
interpretation
dynamic
compilation
related
aspects
testing
benchmarking
tuning
will
also
addressed
bio
bernd
mathiske
senior
staff
engineer
sun
microsystems
laboratories
working
java
tm
virtual
machine
implementation
recent
years
led
productization
cldc
hotspot
tm
virtual
machine
sun's
wireless
technology
group
holds
phd
university
hamburg
germany
experiences
interpretation
vs
translation
transmeta's
code
morphing
software
dean
deaver
transmeta
transmeta's
efficeon
microprocessor
full
system
level
implementation
x86
architecture
comprising
native
vliw
microprocessor
software
layer
code
morphing
software
cms
combines
interpreter
dynamic
binary
translator
ptimizer
run
time
system
software
layer
provides
unique
opportunities
studying
tradeoffs
interpretation
dynamic
translation
various
levels
optimization
running
arbitrary
pc
workloads
talk
presents
results
study
provides
insight
mix
emulation
modes
desirable
range
tested
workloads
bio
dean
deaver
member
technical
staff
transmeta
currently
responsible
various
components
code
morphing
software
cms
translator
prior
joining
transmeta
engineer
alpha
migration
tools
amt
group
digital
equipment
corporation
worked
binary
translation
alpha
development
tools
strongarm
architecture
dean
holds
ms
computer
science
virginia
commonwealth
university
performance
issues
resolutions
net
runtime
virtual
machine
vance
morrison
microsoft
net
runtime
example
virtual
machine
technology
action
forms
foundation
every
vb
application
written
today
one
widely
distributed
pieces
virtual
machine
technology
performance
considerations
driving
force
design
however
may
ones
might
guessed
scalability
working
set
startup
time
turn
important
considerations
traditional
instruction
path
notion
performance
talk
will
provide
brief
background
runtime
describe
performance
problems
faced
solved
finally
will
talk
bit
performance
challenges
still
front
us
ever
demanding
customers
use
runtime
bio
vance
morrison
lead
programmer
'just
time'
compiler
net
runtime
member
net
runtime
group
since
inception
5
years
ago
key
designer
intermediate
language
used
runtime
participated
design
much
fundamental
parts
system
metadata
il
object
model
gc
synchronization
etc
associated
10
patents
associated
runtime
will
undoubtedly
5
years
now
since
scratched
surface
virtual
machine
technology
can
send
comments
franz
uci
edu
