compsci 161 homework 6 
homework 6 
homework
6
due
friday
wk
7
required
problemstopic1your
favorite
sawmill
charges
length
cut
piece
lumber
example
cut
7
foot
piece
point
costs
7
cents
bring
29
foot
board
want
cut
points
4
14
19
27
feet
left
end
order
mill
cut
wood
order
minimize
cost
use
dynamic
programming
principles
solve
problem
example
cut
board
1
2
3
4
order
will
cost
29
25
15
10
79
cents
develop
analyze
asymptotic
time
space
algorithm
solve
previous
problem
length
lumber
number
cuts
dynamic
pgm2clr
problem
15
4
pages
405
406printing
neatly3
consider
function
1
1
1
1
1
give
divide
conquer
algorithm
given
calculates
give
solve
recurrence
function
number
scalar
multiplications
required
algorithm
part
give
dynamic
programming
algorithm
given
calculates
find
function
number
scalar
multiplication
operations
required
algorithm
part
give
algorithm
given
calculates
using
linear
number
scalar
multiplications
includes
multiplications
divisions
hint
first
find
closed
form
value
algorithm
based
recurrence
suggested
problems
topic4clr
exercise
15
4
6
page
397longest
increasing
subsequence5clr
problem
15
3
page
405bitonic
euclidean
tsp6baase
exercise
10
9
page
477optimal
bst7
find
optimal
binary
search
tree
probabilities
p1
p2
p3
p4
p5
0
05
q0
0
0
q1
0
05
q2
0
10
q3
0
15
q4
0
20
q5
0
25
optimal
bst8
find
optimal
binary
search
tree
consisting
elements
probabilities
p1
p2
pn
0
0
qi
0
5
qi
1
0
give
explanation
optimal
optimal
bst9baase
exercise
10
16
page
478dynamic
pgm
binomial
coefficients10baase
exercise
10
21
page
479dynamic
pgm
partition
problem11the
strahler
number
binary
tree
defined
follows
empty
tree
strahler
number
0
binary
tree
subtrees
tl
tr
strahler
number
defined
max
tl
tr
tl
¡Ú
tr
tl
1
otherwise
give
algorithm
possibly
recursive
find
strahler
number
binary
tree
dynamic
pgm12one
version
game
nim
played
counters
arranged
three
rows
position
pattern
counters
can
conveniently
represented
ordered
triple
integers
describing
number
counters
row
game
played
two
persons
move
turns
move
consists
removing
one
counters
one
rows
player
wins
removes
remaining
counters
position
0
0
0
results
move
position
next
player
move
moves
correctly
guaranteed
eventually
win
regardless
moves
opponent
may
make
called
winning
position
let
win
true
iff
winning
position
give
recurrence
values
win
including
boundary
conditions
using
recurrence
part
produce
polynomial
time
algorithm
determines
whether
given
position
winning
position
analyze
time
space
complexity
algorithm
function
complexity
function
hint
good
solution
£c
n4
better
solution
£c
n3
nim13let
complete
binary
tree
2k
1
nodes
nodes
numbered
level
order
root
labelled
1
two
children
labelled
2
3
etc
let
ti
subtree
whose
root
node
t1
every
node
value
val
can
positive
negative
zero
define
wt
weight
subtree
given
sum
values
nodes
ti
problem
find
maximum
weight
subtrees
give
recurrence
wt
give
divide
conquer
algorithm
finds
maximum
wt
given
array
val
space
time
complexities
algorithm
give
dynamic
programming
algorithm
finds
maximum
wt
given
array
val
space
time
complexities
dynamic
programming
algorithm
dc
dyn
pgm14dpv
exercise
6
4
178
given
string
characters
1
believe
corrupted
text
document
punctuation
vanished
looks
something
like
itwasthebestoftimes
wish
reconstruct
document
using
dictionary
available
form
boolean
function
dict
string
dict
value
1
valid
word
value
0
otherwise
give
dynamic
programming
algorithm
determines
whether
string
can
reconstituted
sequence
valid
words
running
time
n2
assuming
call
dict
takes
unit
time
event
string
valid
make
algorithm
output
corresponding
sequence
words
dynamic
pgm15dpv
exercise
6
5
178
given
checkerboard
4
rows
columns
integer
written
square
also
given
set
2n
pebbles
wish
place
checkerboard
pebble
can
placed
exacyly
one
square
maximize
sum
integers
squares
covered
pebbles
one
constraint
placement
pebbles
legal
two
can
horizontally
vertically
adjacent
squares
diagonal
adjacency
fine
determine
number
legal
patterns
can
occur
column
isolation
ignoring
pebbles
adjacent
columns
describe
patterns
call
two
patterns
compatible
can
placed
adjacent
columns
form
legal
placement
let
us
consider
subproblems
consisting
first
columns
1
subproblem
can
assigned
type
pattern
occurring
last
column
using
notions
compatibility
type
give
time
dynamic
programming
algorithm
computing
optimal
placement
dynamic
pgm
dan
hirschberg
computer
science
department
university
california
irvine
ca
92697
3435
dan
ics
uci
edu
last
modified
jan
11
2013
