fifth homework 
fifth homework 
ics
h21
uc
irvine
david
kay
fall
2009
fifth
homework
assignment
due
start
lab
monday
october
26
1
fresh
copy
midterm
available
answer
questions
correctly
including
extra
credit
turn
answers
problem
got
full
credit
actual
midterm
can
simply
write
got
full
credit
first
time
around
trying
make
anyone
relive
unpleasant
memories
midterm
scores
generally
good
everyone
needs
know
problems
midterm
need
test
make
sure
true
fine
discussed
midterm
section
try
answer
question
without
consulting
notes
anyone
else
forbidden
asking
classmates
help
pair
programming
activity
need
confident
can
problems
turn
original
graded
midterm
ta
section
along
correctly
answered
copy
try
monday
2
chapter
14
introduces
trees
exercises
14
1
3
14
1
4
14
1
5
read
chapters
15
covers
mutually
referential
data
may
contain
ys
may
contain
xs
16
talks
iterative
design
3
copy
drscheme
sorting
code
thursday's
class
can
get
course
email
archive
eee
still
message
function
sort
uses
algorithm
called
insertion
sort
take
item
insert
correct
place
list
already
sorted
write
function
sort
descending
like
sort
except
produces
result
descending
order
highest
lowest
note
functions
involves
lot
duplicate
code
later
learn
avoid
rerun
timing
class
10
000
item
list
see
long
takes
machine
can
expression
time
local
define
snl
sort
nl
done
nl
10
000
item
list
like
one
defined
code
class
sort
sorts
keep
displaying
whole
sorted
list
put
call
sort
local
definition
whose
body
just
returns
string
done
finished
evaluating
definition
enclose
whole
thing
time
function
counts
processor
time
actual
time
task
takes
thousandths
second
need
using
intermediate
student
scheme
time
function
binary
search
tree
bst
code
wrote
class
included
functions
bst
insert
bst
list
list
bst
write
explicit
function
bst
sort
can
now
combining
components
class
bst
sort
list
numbers
list
numbers
return
input
list
elements
ascending
order
check
expect
bst
sort
empty
empty
check
expect
bst
sort
list
1
list
1
check
expect
bst
sort
list
1
2
3
4
5
list
1
2
3
4
5
check
expect
bst
sort
list
5
4
3
2
1
list
1
2
3
4
5
check
expect
bst
sort
list
1
3
5
2
4
6
list
1
2
3
4
5
6
rerun
timing
class
10
000
item
list
using
bst
sort
rerun
timing
100
000
item
list
bst
sort
insertion
sort
algorithm
unless
something
else
waiting
try
bst
sort
1
000
000
item
list
try
sort
million
item
list
using
insertion
sort
might
take
computer
couple
days
later
see
analyze
predict
4
chapter
15
htdp
text
covers
data
structures
mutually
recursive
might
contain
ys
ys
turn
contain
xs
related
example
appears
read
understand
works
example
nested
lists
lists
containing
lists
data
definition
book
either
empty
cons
symbol
book
symbol
represents
word
cons
book
book
book
define
ttc
'
tale
two
cities
best
times
dover
road
gives
us
hierarchical
tree
shaped
organization
nested
list
chapter
contain
lists
section
paragraph
suppose
want
count
words
book
word
count
book
number
return
number
words
book
check
expect
word
count
ttc
16
check
expect
word
count
empty
0
just
say
length
ttc
gives
us
number
elements
top
level
7
case
counting
nested
list
single
item
instead
need
look
nested
list
can
write
code
following
data
definition
three
parts
list
empty
first
item
symbol
first
item
list
define
word
count
lambda
cond
empty
symbol
first
else
book
empty
zero
words
first
item
word
symbol
add
1
number
words
rest
book
first
item
book
list
add
number
words
book
number
words
rest
book
define
word
count
lambda
cond
empty
0
symbol
first
add1
word
count
rest
else
word
count
first
word
count
rest
notice
recursive
call
code
exactly
places
book
appears
data
definition
check
expect
word
count
ttc
16
check
expect
word
count
empty
0
5
chapter
16
goes
longer
example
development
process
using
file
management
also
another
illustration
defining
processing
tree
shaped
structures
6
chapter
17
talks
handling
functions
process
two
different
kinds
complex
data
exercises
17
1
1
17
1
2
17
2
1
17
2
2
17
3
1
7
intermezzo
3
chapter
18
covers
local
definitions
saw
restaurants
program
exercises
18
1
1
18
1
2
18
1
3
18
1
5
18
1
15
based
part
ics
h21assignments
exams
david
kay
fall
2001
modified
david
kay
fall
2004
fall
2005
fall
2008
fall
2009
david
kay
kay
uci
edu
friday
october
23
2009
9
05
pm
