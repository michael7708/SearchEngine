ics31 w13 quiz6 
quiz 6 
ics
31
winter
2013
quiz
6
fill
blanks
function
definition
make
consistent
header
docstring
blank
contain
just
one
identifier
constant
operator
recall
identifier
just
name
variable
name
parameter
name
field
attribute
name
function
name
method
name
dish
namedtuple
'dish'
'name
price
calories'
restaurant
namedtuple
'restaurant'
'name
cuisine
phone
menu'
def
restaurant
average
calories
restaurant
float
'''
return
average
number
calories
restaurant's
menu
menu
list
dish
structures
'''
return
menu
average
calories
def
menu
average
calories
list
float
'''
return
average
number
calories
menu
list
dishes
'''
len
0
return
0
else
sum
calories
return
answer
feedback
collections
import
namedtuple
required
supply
line
question
general
exams
may
assume
appropriate
libraries
imported
question
exam
ask
dish
namedtuple
'dish'
'name
price
calories'
restaurant
namedtuple
'restaurant'
'name
cuisine
phone
menu'
def
restaurant
average
calories
restaurant
float
'''
return
average
number
calories
restaurant's
menu
menu
list
dish
structures
'''
return
menu
average
calories
menu
def
menu
average
calories
list
float
'''
return
average
number
calories
menu
list
dishes
'''
len
0
return
0
else
sum
0
sum
calories
return
sum
len
hard
may
yet
familiar
enough
python
statements
constructed
take
first
two
blanks
know
restaurant
average
calories
function
takes
restaurant
four
fields
also
know
menu
average
calories
takes
list
first
two
blanks
arguments
call
menu
average
calories
must
specify
list
can
get
list
inside
restaurant
average
calories
data
parameter
restaurant
list
available
menu
field
attribute
get
one
field
namedtuple
dot
notation
menu
answer
gives
us
menu
field
list
dishes
appropriate
type
data
call
menu
average
calories
terms
concepts
preceding
paragraph
unclear
now's
time
next
midterm
learn
review
mean
may
also
mean
comfortable
enough
parts
lab
5
deal
dishes
collections
processing
lists
processing
lists
objects
include
lists
important
aspect
course
anteater
bookstore
represents
inventory
list
book
namedtuples
fields
title
author
category
like
cookbook
mystery
price
price
float
fields
attributes
strings
write
import
statement
allows
creation
namedtuples
answer
feedback
collections
import
namedtuple
variations
import
statement
using
one
others
require
different
ways
referring
namedtuples
rest
program
write
namedtuple
definition
book
described
answer
feedback
book
namedtuple
'book'
'title
author
category
price'
write
assignment
statement
assigns
new
book
namedtuple
computer
science
book
algorithms
data
structures
programs
niklaus
wirth
sells
23
50
answer
feedback
book
'algorithms
data
structures
programs'
'niklaus
wirth'
'computer
science'
23
50
note
distinction
defining
namedtuple
part
describes
books
general
defining
specific
instance
book
part
note
also
order
fields
specified
defined
namedtuple
title
first
author
second
must
match
order
book
constructor
function
shown
problem
description
may
give
data
order
problem
descriptions
english
allows
lot
variety
expressing
things
complete
definition
function
consistent
header
docstring
comment
assertions
def
books
category
'list
book'
cat
str
'list
book'
'''
return
list
books
whose
category
matches
cat
'''assert
books
category
'fiction'
assert
books
category
book
'a'
'b'
'c'
10
book
'd'
'e'
'f'
20
book
'g'
'h'
'c'
30
'fiction'
assert
books
category
book
'a'
'b'
'c'
10
book
'd'
'e'
'f'
20
book
'g'
'h'
'c'
30
'c'
book
'a'
'b'
'c'
10
book
'g'
'h'
'c'
30
assert
books
category
book
'a'
'b'
'c'
10
book
'd'
'e'
'f'
20
book
'g'
'h'
'c'
30
'f'
book
'd'
'e'
'f'
20
answer
feedback
def
books
category
'list
book'
cat
str
'list
book'
'''
return
list
books
whose
category
matches
cat
'''
result
category
cat
result
result
result
alternative
result
append
alternative
return
result
suppose
want
change
books
category
function
returns
list
books
specified
category
specified
author
need
third
parameter
specify
author
call
auth
need
change
just
one
line
body
function
counting
function
header
docstring
comment
assertions
rewrite
line
answer
feedback
category
cat
author
auth
parts
excerpt
help
str
may
useful
problem
find
find
sub
int
return
lowest
index
string
sub
found
return
1
failure
split
split
sep
list
strings
return
list
words
using
sep
delimiter
string
strip
strip
str
return
copy
string
leading
trailing
whitespace
removed
complete
function
definition
consistent
header
docstring
assertions
months
'january'
'february'
'march'
'april'
'may'
'june'
'july'
'august'
'september'
'october'
'november'
'december'
def
mmddyy
monthdayyear
mmddyy
str
str
'''
argument
form
'10
31
12'
month
day
year
return
string
form
'october
31
2012'
assume
values
valid
numbers
years
century
'''assert
mmddyy
monthdayyear
'10
31
12'
'october
31
2012'
assert
mmddyy
monthdayyear
'12
1
07'
'december
1
2007'
assert
mmddyy
monthdayyear
'1
3
99'
'january
3
2099'
answer
feedback
def
mmddyy
monthdayyear
mmddyy
str
str
'''
argument
form
'10
31
12'
month
day
year
return
string
form
'october
31
2012'
assume
values
valid
numbers
years
century
'''
fields
mmddyy
split
'
'
month
number
int
fields
0
1
subtract
1
indexing
months
list
starting
0
january
month
name
months
month
number
day
fields
1
clarity
just
use
fields
1
return
statement
year
'20'
fields
2
need
problem
convert
number
also
leaving
string
helps
leading
zeroes
'12
1
07'
return
month
name
day
year
suppose
definition
collections
import
namedtupledate
namedtuple
'date'
'year
month
day'
three
fields
numbers
november
12
2012
represented
date
2012
11
12
might
think
define
function
convert
mmddyy
string
date
convert
date
monthdayyear
string
neither
one
part
quiz
suppose
also
definition
drivingrecord
namedtuple
'drivingrecord'
'name
license
age
tickets'
name
string
representing
driver's
name
license
string
representing
driver's
licence
number
age
driver's
age
tickets
possibly
empty
list
date
objects
containing
dates
driver
received
traffic
ticket
cited
police
officer
violating
driving
law
complete
two
function
definitions
consistent
headers
docstrings
assertions
def
dangerous
drivingrecord
limit
int
bool
'''
return
true
tickets
limit
false
otherwise
'''def
dangerous
drivers
drl
'list
drivingrecord'
limit
int
'list
str'
'''
return
list
names
drivers
drl
tickets
specified
limit
'''assert
dangerous
drivers
drivingrecord
'a'
'1'
'16'
date
1
2
3
date
2
3
4
date
3
4
5
drivingrecord
'b'
'1'
'66'
date
1
2
3
date
2
3
4
drivingrecord
'c'
'1'
'66'
date
1
2
3
drivingrecord
'd'
'1'
'116'
drivingrecord
'e'
'1'
'116'
date
1
2
3
date
2
3
4
date
3
4
5
1
'a'
'b'
'e'
answer
feedback
def
dangerous
drivingrecord
limit
int
bool
'''
return
true
tickets
limit
false
otherwise
'''
return
len
tickets
limit
careful
say
specifies
limit
def
dangerous
drivers
drl
'list
drivingrecord'
limit
int
'list
str'
'''
return
list
names
drivers
drl
tickets
specified
limit
'''
result
drl
dangerous
limit
result
name
result
append
name
return
result
quiz
scores
range
0
10
can
represent
distribution
scores
quiz
list
numbers
number
count
students
received
particular
score
list
1
person
scored
0
3
people
scored
5
45
people
scored
10
scores
1
0
0
2
2
3
8
22
33
40
45
suppose
want
print
statistics
table
following
format
0
1
0
64
1
0
0
00
2
0
0
00
3
2
1
28
4
2
1
28
5
3
1
92
6
8
5
13
7
22
14
10
8
33
21
15
9
40
25
64
10
45
28
85
following
code
fill
blank
one
character
per
blank
output
formatted
shown
topscore
10for
range
topscore
1
print
3d
format
scores
scores
sum
scores
100
answer
feedback
print
2d
3d
5
2f
format
scores
scores
sum
scores
100
