map 
map 
package
class
use
tree
deprecated
index
help
prev
class
next
class
frames
frames
classes
summary
nested
field
constr
method
detail
field
constr
method
edu
uci
ics
pattis
ics23
collections
interface
map
type
parameters
type
keys
maintained
mapv
type
mapped
values
known
implementing
classes
abstractmap
arraymap
public
interface
map
generic
maps
store
key
value
mappings
key
type
unique
maps
one
value
type
implementations
maps
ordered
bstmap
others
hashmap
classes
implement
interface
least
two
constructors
one
parameters
one
iterable
parameter
produces
values
type
map
entry
former
creates
empty
map
later
will
fill
constructed
map
values
produced
calling
iterator
parameter
since
map
iterable
easy
construct
new
map
copy
existing
map
containing
keys
values
map
caution
mutate
key
inside
map
operation
can
make
key
value
mapping
invisible
map
change
key
key
value
mapping
first
remove
key
value
map
mutate
key
add
key
value
mapping
back
map
version
1
1
09
24
09author
rich
pattis
nested
class
summary
static
interfacemap
entry
generic
entry
stores
mapping
key
value
method
summary
voidclear
removes
keys
values
map
booleancontainskey
object
key
returns
true
map
contains
mapping
specified
key
booleancontainsvalue
object
value
returns
true
map
maps
one
keys
specified
value
iterable
map
entry
entries
returns
object
can
iterated
produce
key
value
mappings
stored
map
booleanequals
object
returns
true
map
equal
mappings
vget
object
key
returns
value
specified
key
mapped
null
map
contains
mapping
key
inthashcode
returns
hash
code
value
map
booleanisempty
returns
true
map
contains
key
value
mappings
iterable
keys
returns
object
can
iterated
produce
keys
stored
stored
map
map
newempty
returns
new
empty
map
class
implementing
map
vput
key
value
stores
mapping
specified
key
specified
value
map
voidputall
iterable
map
entry
keysvalues
stores
map
mappings
produced
calling
iterator
keysvalues
vremove
key
removes
mapping
key
map
present
map
shallowcopy
returns
new
map
class
implementing
map
contains
copy
mappings
map
intsize
returns
number
key
value
mappings
map
map
entry
toarray
returns
array
containing
mappings
map
stringtostring
returns
string
representation
map
iterable
values
returns
object
can
iterated
produce
values
stored
stored
map
method
detail
put
put
key
value
stores
mapping
specified
key
specified
value
map
map
previously
contained
mapping
key
old
value
replaced
specified
value
returns
previous
value
mapped
key
one
null
previous
mapping
null
return
can
also
indicate
map
previously
mapped
key
null
map
will
contain
mapping
specified
key
method
returns
parameters
key
key
specified
value
mappedvalue
value
mapped
specified
key
returns
previous
value
mapped
key
one
null
previous
mapping
putall
void
putall
iterable
map
entry
keysvalues
stores
map
mappings
produced
calling
iterator
keysvalues
parameters
keysvalues
mappings
stored
map
remove
remove
key
removes
mapping
key
map
present
returns
value
key
previously
mapped
map
null
mapping
key
map
null
return
can
also
indicate
map
mapped
key
null
map
will
contain
mapping
specified
key
method
returns
parameters
key
key
whose
mapping
removed
map
returns
value
key
previously
mapped
map
null
mapping
key
map
clear
void
clear
removes
keys
values
map
map
will
empty
method
returns
get
get
object
key
returns
value
specified
key
mapped
null
map
contains
mapping
key
parameters
key
key
whose
mapped
value
returned
returns
value
specified
key
mapped
null
map
contains
mapping
key
containskey
boolean
containskey
object
key
returns
true
map
contains
mapping
specified
key
parameters
key
key
whose
presence
map
tested
returns
true
map
contains
mapping
specified
key
containsvalue
boolean
containsvalue
object
value
returns
true
map
maps
one
keys
specified
value
parameters
value
value
whose
presence
map
tested
returns
true
map
maps
one
keys
specified
value
entries
iterable
map
entry
entries
returns
object
can
iterated
produce
key
value
mappings
stored
map
returns
object
can
iterated
produce
key
value
mappings
stored
map
keys
iterable
keys
returns
object
can
iterated
produce
keys
stored
stored
map
returns
object
can
iterated
produce
keys
stored
map
values
iterable
values
returns
object
can
iterated
produce
values
stored
stored
map
one
key
mapped
value
value
will
produced
multiple
times
returns
object
can
iterated
produce
values
stored
map
isempty
boolean
isempty
returns
true
map
contains
key
value
mappings
returns
true
map
contains
key
value
mappings
size
int
size
returns
number
key
value
mappings
map
returns
number
key
value
mappings
map
toarray
map
entry
toarray
returns
array
containing
mappings
map
map
makes
guarantees
order
elements
returned
iterator
method
must
return
elements
order
returned
array
will
safe
references
maintained
map
method
must
allocate
new
array
even
map
backed
array
caller
thus
free
modify
returned
array
method
acts
bridge
array
based
map
based
apis
returns
array
containing
mappings
map
newempty
map
newempty
returns
new
empty
map
class
implementing
map
returns
new
empty
map
class
implementing
map
shallowcopy
map
shallowcopy
returns
new
map
class
implementing
map
contains
copy
mappings
map
copy
shallow
meaning
two
map
share
mappings
keys
values
mappings
must
mutated
carefully
returns
new
map
class
implementing
map
contains
copy
mappings
map
tostring
string
tostring
returns
string
representation
map
includes
useful
information
concrete
data
structure
implements
map
overrides
tostring
class
object
returns
string
representation
map
equals
boolean
equals
object
returns
true
map
equal
mappings
equals
hashcode
methods
related
overridden
compatible
particular
c1
equals
c2
implies
c1
hashcode
c2
hashcode
implication
required
way
overrides
equals
class
object
returns
true
map
equal
mappings
hashcode
int
hashcode
returns
hash
code
value
map
equals
hashcode
methods
related
overridden
compatible
particular
c1
equals
c2
implies
c1
hashcode
c2
hashcode
implication
required
way
overrides
hashcode
class
object
returns
hash
code
value
map
package
class
use
tree
deprecated
index
help
prev
class
next
class
frames
frames
classes
summary
nested
field
constr
method
detail
field
constr
method
