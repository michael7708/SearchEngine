ics 32 winter 2013 project 3 outside wall 
project 3 
ics
32
winter
2013
news
course
reference
schedule
project
guide
code
examples
alex
ics
32
winter
2013
project
3
outside
wall
due
date
time
tuesday
february
19
11
59pm
project
done
individually
background
saw
previous
project
python
programs
capable
connecting
outside
world
around
programs
running
machine
even
programs
running
different
machines
faraway
places
powerful
thing
program
able
longer
limited
taking
input
user
file
stored
locally
input
now
potentially
anything
public
accessible
via
internet
making
possible
solve
vast
array
new
problems
tool
connecting
programs
one
another
toolbox
whole
new
world
opens
suddenly
idea
able
write
program
combines
say
google
search
queries
internet
movie
database
favorite
social
network
find
people
like
movies
similar
ones
like
seem
far
fetched
challenge
getting
programs
share
information
twofold
firstly
purely
software
engineering
problem
protocol
designed
programs
can
use
conversation
secondly
social
problem
person
group
people
writing
programs
necessary
agree
protocol
ahead
time
implement
potentially
catastrophic
problem
ever
get
google
agree
use
protocol
just
communicate
largely
solved
presence
standards
defined
world
wide
web
consortium
standards
help
two
ways
providing
detailed
communication
protocol
whose
details
already
hammered
also
allowing
programs
interoperate
many
programs
without
support
separate
protocol
fact
standard
protocols
often
standard
implementations
code
details
previous
project
example
python
built
support
number
standard
protocols
including
http
hypertext
transfer
protocol
protocol
browser
uses
download
web
pages
among
others
http
particular
importance
nowadays
since
protocol
used
virtually
communications
web
limited
conversation
browser
web
server
order
download
web
page
though
conversation
certainly
uses
http
http
protocol
underlies
growing
variety
program
program
communications
using
web
protocols
broadly
called
web
services
web
sites
software
systems
communicate
directly
one
another
programs
web
browsers
fetch
data
affect
change
web
sites
software
systems
fortunately
since
http
support
built
directly
python
can
write
programs
use
web
based
apis
without
handle
low
level
details
protocol
though
details
need
familiar
want
use
provided
implementation
effectively
project
gives
opportunity
explore
small
part
vast
sea
possibilities
presented
web
apis
web
services
namely
using
historical
stock
prices
look
interesting
patterns
might
led
one
profitably
buy
sell
stocks
certain
times
completed
project
taken
valuable
first
step
toward
able
write
python
programs
interact
web
services
reminder
select
partner
unlike
previous
projects
required
use
pair
programming
technique
project
requires
work
individually
will
selecting
partner
will
pair
programming
time
student
responsible
project
submission
project
believe
pair
programming
offers
lot
benefits
also
need
build
skills
working
future
coursework
possibly
future
employment
will
depend
program
project
will
write
program
capable
loading
set
historical
stock
prices
web
calculate
metrics
prices
ultimately
report
opportune
times
buy
sell
stock
based
one
buying
selling
strategies
background
buying
selling
stocks
many
may
know
relatively
little
investing
section
offers
necessary
background
need
project
first
stocks
represent
ownership
business
entity
given
business
entity
apple
divides
overall
ownership
stake
shares
purposes
can
think
share
small
equal
percentage
ownership
company
though
arrangement
can
complex
case
apple
writing
around
900
000
000
shares
publicly
traded
individuals
like
can
buy
provided
someone
else
selling
today
bought
one
shares
around
450
given
us
ownership
roughly
1
900
000
000th
company
noted
nearly
companies
world
publicly
traded
focus
attention
project
share
prices
publicly
traded
companies
determined
via
stock
exchange
interested
buyers
sellers
meet
electronically
time
negotiate
prices
buyers
specify
willing
pay
sellers
specify
willing
accept
match
someone
willing
buy
certain
amount
someone
else
willing
sell
amount
trade
takes
place
buyer
exchanges
money
shares
prices
can
somewhat
volatile
using
example
apple's
trading
day
writing
price
one
share
ranged
442
455
different
times
day
total
around
17
000
000
shares
changing
hands
just
today
just
show
volatile
prices
can
share
traded
700
september
2012
just
85
one
point
2008
stocks
trade
stock
exchanges
generally
symbol
sometimes
called
ticker
symbol
associated
shorthand
name
used
uniquely
identify
company
exchange
united
states
symbols
generally
sequence
uppercase
letters
parts
world
digits
also
common
example
symbol
apple
aapl
google's
symbol
goog
microsoft's
msft
vast
databases
every
trade
made
every
stock
every
day
trade
completed
many
shares
traded
symbol
identifying
stock
traded
price
overwhelming
amount
data
generally
available
online
free
since
data
much
potential
value
however
possible
find
daily
quotes
online
yahoo
example
provider
data
part
daily
quotes
will
tell
closing
price
final
price
stock
traded
particular
day
sometimes
tell
things
like
opening
price
price
stock
first
traded
particular
day
highest
lowest
price
day
volume
specifies
many
shares
traded
course
day
seem
like
much
information
people
programs
fairly
detailed
analysis
core
data
along
various
indicators
derived
program
project
will
derive
indicators
given
sequence
daily
quotes
trading
take
place
every
day
generally
speaking
trades
weekends
holidays
program
will
need
anything
special
handle
will
simply
determine
historical
data
days
included
trading
asking
user
specify
analysis
options
goal
program
take
input
sequence
daily
quotes
stock
derive
collection
buy
signals
sell
signals
respectively
recommendations
either
buy
sell
stock
given
days
sequence
program
begins
presenting
console
mode
user
interface
user
allowing
user
make
decisions
analysis
will
run
program
runs
single
analysis
according
user's
specifications
ends
user
wants
run
another
analysis
run
program
user
interface
asks
user
specify
following
ticker
symbol
stock
analysis
done
example
stock
microsoft
user
specify
msft
allow
user
type
symbol
present
menu
choices
way
program
will
stand
test
time
need
updated
new
companies
go
public
existing
companies
go
business
start
date
analysis
user
specify
date
format
yyyy
mm
dd
four
digit
year
followed
dash
followed
two
digit
month
followed
dash
followed
finally
two
digit
day
example
february
4
2012
specified
2012
02
04
start
date
today's
date
ask
user
specify
another
end
date
analysis
user
specify
date
format
yyyy
mm
dd
end
date
today's
date
also
later
start
date
ask
user
specify
another
signal
strategy
determines
manner
buy
sell
signals
will
generated
show
menu
options
user
allow
one
selected
configured
options
listed
section
titled
signal
strategies
running
analysis
choices
made
program
proceeds
download
historical
quotes
web
described
detail
later
writeup
prints
detailed
report
daily
prices
indicators
buy
sell
signals
console
program
ends
indicators
core
analysis
will
comparing
daily
prices
values
indicators
two
kinds
indicators
use
simple
moving
average
day
simple
moving
average
end
particular
day
average
previous
closing
prices
days
trading
counted
example
10
day
simple
moving
average
day
simply
average
previous
10
closing
prices
note
simple
moving
average
particular
day
includes
day's
closing
price
one
wrinkle
aware
need
least
days
prices
can
begin
calculating
simple
moving
average
first
1
days
will
simple
moving
average
directional
indicator
day
directional
indicator
stock
number
days
previous
stock
went
closed
higher
price
previous
close
minus
number
days
previous
stock
went
closed
lower
price
previous
close
stands
reason
example
10
day
directional
indicator
will
somewhere
10
10
simple
moving
average
directional
indicator
particular
day
includes
day's
closing
price
unlike
simple
moving
averages
directional
indicators
always
possible
calculate
given
report
first
day's
indicator
value
will
always
0
know
whether
stock's
move
day
since
previous
day's
price
fewer
days
prices
simply
calculate
directional
indicator
using
number
days
available
many
indicators
used
people
programs
making
buying
selling
decisions
stocks
good
start
us
signal
strategies
main
goal
analysis
generate
buy
signals
sell
signals
recommendations
buy
sell
stock
conclusion
particular
day
two
strategies
corresponding
indicators
buy
whenever
price
moves
day
simple
moving
average
sell
whenever
price
moves
user
chooses
number
days
smaller
number
days
sensitive
likely
generate
signal
large
number
days
less
buy
whenever
day
directional
indicator
moves
chosen
value
sell
whenever
moves
another
chosen
value
user
chooses
number
days
buy
sell
trigger
values
final
report
conclusion
analysis
program
prints
final
report
shows
day
ascending
order
earlier
days
later
ones
following
datethe
closing
pricethe
indicator
used
analysis
10
day
simple
moving
average
buy
sell
signal
day
format
report
follows
assuming
5
day
directional
indicator
used
analysis
assuming
buy
signals
generated
whenever
directional
indicator
passes
2
sell
signals
generated
whenever
directional
indicator
passes
0
symbol
boo
strategy
directional
buy
2
sell
0
date
close
indicator
signal
2011
11
11
570
00
0
2011
11
14
580
00
1
2011
11
15
590
00
2
2011
11
16
600
00
3
buy
2011
11
17
590
00
2
2011
11
18
580
00
1
2011
11
21
570
00
1
sell
2011
11
22
560
00
3
2011
11
23
570
00
3
downloading
historical
stock
quotes
yahoo
finance
yahoo
finance
provides
downloadable
historical
stock
quotes
wide
variety
stocks
can
downloaded
making
http
requests
means
can
make
requests
manually
browser
also
importantly
context
project
python
program
trick
know
format
request
particular
case
necessary
place
information
url
specifies
stock
want
quotes
well
range
dates
format
url
http
ichart
yahoo
com
table
csv
symbol
start
month
start
day
start
year
end
month
end
day
end
year
symbol
symbol
like
quotes
aapl
want
quotes
apple
start
month
one
less
number
start
month
0
january
1
february
11
december
start
day
starting
day
monthstart
year
starting
yearend
month
one
less
number
end
month
0
january
1
february
11
december
end
day
ending
day
monthend
year
ending
yearnote
parameter
means
want
daily
quotes
time
frames
available
weekly
use
project
example
wanted
quotes
google
running
march
1
2011
november
30
2012
formulate
url
like
http
ichart
yahoo
com
table
csv
goog
2
1
2011
10
30
2012
try
copying
pasting
link
browser
receive
csv
file
return
open
file
text
editor
careful
double
clicking
may
open
different
program
spreadsheet
want
see
text
looks
like
program
will
need
parse
extract
daily
quotes
take
little
inspect
file
see
looks
like
downloading
web
data
python
programs
will
see
lecture
code
example
demonstrates
meantime
might
find
urllib
request
library
handy
place
look
though
can
also
defer
solving
problem
little
road
see
next
section
write
design
advice
little
bit
careful
kind
advice
follow
google
searches
techniques
downloading
web
data
python
programs
changed
quite
bit
one
version
python
next
stale
advice
going
cause
problems
will
solve
design
requirements
advice
previous
project
required
write
program
multiple
python
modules
multiple
py
files
encapsulating
different
major
part
program
modules
good
way
break
problem
component
parts
module
implements
two
indicators
probably
best
implemneted
functions
take
list
prices
ascending
order
date
whatever
necessary
parameters
think
need
number
days
simple
moving
average
returns
list
indicator's
value
date
represented
list
prices
module
implements
signal
strategies
must
implemented
classes
see
module
capable
downloading
quotes
yahoo
finance
might
also
want
separate
module
allows
load
file
simply
hard
codes
set
quotes
can
use
test
way
can
make
entire
program
work
except
downloading
quotes
yahoo
finance
plug
quote
downloading
part
end
module
implementing
user
interface
module
name
'
main
'
block
make
executable
execute
module
run
program
signal
strategies
classes
signal
strategies
required
implemented
python
class
contains
attributes
configure
simple
moving
average
based
strategy
attribute
store
number
days
use
average
calculation
execute
method
executes
strategy
list
price
quotes
strategy
classes
must
execute
method
signature
name
parameters
type
return
value
user
interface
call
without
depending
kind
signal
strategy
object
key
benefit
using
classes
python
can
treat
different
kinds
objects
similar
capabilities
way
avoids
us
use
statements
differentiate
see
example
lecture
start
lots
ways
start
project
goal
always
find
stable
ground
often
possible
one
problem
know
need
solve
problem
calculating
simple
moving
average
consider
starting
can
test
python
interpreter
proceeding
stable
ground
continue
indicator
directional
indicator
now
stable
ground
might
continue
implementing
module
gives
set
test
quotes
want
submit
one
will
useful
allowing
continue
work
without
handling
downloading
quotes
yahoo
finance
right
away
might
allow
continue
implementing
testing
signal
strategies
got
implemented
might
continue
quote
downloading
feature
finally
user
interface
may
seem
strange
build
user
interface
last
certainly
follow
sequence
sequence
likely
follow
note
signal
strategies
presented
strategies
used
determine
whether
buy
sell
stocks
chosen
ability
implemented
using
skills
opposed
designed
sound
investing
strategies
uncommon
programs
use
historical
price
quotes
often
multiple
time
frames
addition
daily
make
buying
selling
decisions
place
people
things
form
loose
basis
decisions
get
made
algorithms
making
decisions
generally
complex
tend
vary
time
works
today
may
longer
work
year
now
people's
behavior
well
behavior
automated
buying
selling
programs
may
changed
deliverables
put
name
student
id
comment
top
py
files
submit
files
checkmate
take
moment
sure
submitted
files
follow
link
discussion
submit
project
via
checkmate
aware
holding
rules
specified
document
including
one
says
responsible
submitting
version
project
want
greaded
regrade
project
simply
submitted
wrong
version
accidentally
can
submit
deadline
yes
possible
subject
late
work
policy
course
described
section
titled
late
work
link
originally
written
alex
thornton
winter
2013
