game programming 

ics
180a
spring
1997
strategy
board
game
programming
final
project
requirements
project
team
must
submit
printed
final
project
report
demonstrate
application
project
reports
due
mailbox
cs
448
5
00pm
thursday
march
11
project
demonstrations
will
held
ics
labs
third
floor
cs
building
date
time
announced
likely
scheduled
final
exam
time
project
report
include
following
information
title
authors
student
ids
course
information
date
introduction
game
project
play
briefly
describe
rules
history
game
different
variations
rules
chose
variation
implement
know
programs
game
written
elsewhere
machine
machines
program
run
user
interface
user
go
playing
game
program
include
screen
shots
search
use
anything
vanilla
alpha
beta
search
describe
explain
needed
branching
factor
game
average
typical
number
different
moves
available
given
position
differ
effective
branching
factor
program
average
typical
number
moves
searches
position
pruning
stops
search
note
can
compute
effective
branching
factor
formula
x1
total
number
nodes
searched
search
depth
program
always
search
fixed
depth
use
timer
control
depth
searches
many
levels
deep
typically
search
total
number
game
positions
typical
search
evaluates
many
evaluations
per
second
perform
whatever
machine
running
state
fast
machine
search
improvements
using
hashing
search
extensions
extra
pruning
pruning
beyond
normal
pruning
performed
alpha
beta
algorithm
describe
possible
say
something
much
helped
improve
program's
performance
evaluation
function
explain
english
terms
go
evaluation
function
able
update
terms
incrementally
moves
generated
recompute
scratch
time
evaluated
new
position
try
terms
turned
useful
evaluation
terms
add
improve
program's
performance
time
add
terms
experiences
interesting
bug
parts
program
find
took
time
write
parts
find
confusing
differently
start
project
scratch
performance
well
program
play
game
beat
sometimes
always
never
include
complete
moves
two
games
others
played
machine
one
move
first
one
machine
moves
first
explain
machine's
moves
think
deserves
explanation
either
think
mistake
good
non
obvious
move
source
code
include
complete
listing
sources
program
david
eppstein
dept
information
computer
science
uc
irvine
monday
04
jan
1999
14
28
07
pst
