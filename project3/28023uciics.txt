testing verification 
testing verification 
testing
verification
testing
may
choose
format
test
input
sure
document
decisions
reasons
choices
others
significant
relevant
side
effects
choices
efficiency
primary
consideration
ease
clarity
coding
overlooked
document
justify
decisions
main
concern
algorithms
sorts
multipliers
etc
independent
source
data
timing
routines
debugging
testing
routines
etc
able
take
code
function
perform
job
use
code
without
routines
waste
space
copying
input
unless
algorithm
requires
waste
time
performing
timing
operations
produce
annoying
debugging
testing
printouts
tasks
performed
testing
functions
calling
lab
function
whatever
algorithm
tested
obviously
means
functions
passed
anything
need
job
written
structures
record
testing
information
switches
testing
related
control
set
functions
perform
task
may
share
global
data
find
absolutely
necessary
share
global
data
portions
lab
testing
etc
sufficient
state
error
conditions
just
testing
functions
always
generate
correct
tests
functions
something
reasonable
data
passed
processed
properly
may
even
want
tester
throw
errors
functions
demonstrate
reactions
possible
errors
include
necessarily
limited
negative
dimension
passed
parameter
getting
illegal
result
arithmetic
calculation
overflow
unable
allocate
scratch
memory
needed
read
file
able
gracefully
handle
errors
related
file
access
output
program
contain
lengthy
dumps
variables
evaluated
various
functions
program
instead
test
procedures
call
functions
use
simple
possibly
slower
method
verifying
accuracy
results
thus
output
statistics
short
indications
test
procedure
inner
project
procedures
working
correctly
check
correctness
test
procedures
order
convinced
correctness
lab
verification
simplest
sense
verification
means
demonstrating
program
works
verification
runs
show
subroutines
subparts
final
product
work
runs
must
show
program
meets
lab
specifications
program
handles
end
conditions
program
sensibly
recovers
user
errors
special
features
claim
actually
work
verification
runs
include
description
run
generated
compilation
execution
commands
echo
input
description
test
supposed
indicate
dan
hirschberg
computer
science
department
university
california
irvine
ca
92697
3435
dan
ics
uci
edu
last
modified
mar
22
1999
