qtvr mathematical visualization 
quicktime vr 
quicktime
vr
mathematical
visualization
many
mathematical
constructions
particularly
geometry
can
understood
easily
form
animation
motion
displayed
animated
gifs
mpeg
quicktime
popular
formats
simple
animations
allow
interaction
three
common
methods
interactive
display
three
dimensional
objects
web
seem
virtual
reality
modeling
language
vrml
apple's
quicktime
vr
qtvr
java
can
used
netscape
browsers
windows
mac
platforms
java
also
works
unix
machines
two
apparently
vrml
represents
three
dimensional
objects
directly
interface
allowing
objects
point
view
move
limited
displaying
three
dimensional
euclidean
space
must
rendered
realtime
can
certain
primitive
types
rendering
since
java
programming
language
can
theoretical
display
anything
user
interface
controls
need
correspond
directly
camera
motion
limits
set
programmer
competence
realtime
rendering
problem
besets
vrml
qtvr
objects
formed
simply
set
precomputed
image
frames
unlimited
java
types
object
can
display
require
much
programming
effort
also
avoids
realtime
rendering
bottleneck
two
methods
qtvr's
user
interface
provides
two
degrees
freedom
degrees
freedom
can
like
java
used
control
parameter
just
camera
motion
therefore
qtvr
seems
flexible
option
mathematical
visualizations
requiring
limited
user
interaction
qtvr
also
excels
viewing
photographic
photographic
quality
images
fashion
modeling
landscapes
architectural
walkthroughs
however
qtvr's
bandwidth
requirements
typically
much
higher
methods
herewith
efforts
use
qtvr
mathematical
visualization
box
box
exercise
illustrates
solution
problem
posed
sci
math
carl
parkes
smallest
cube
can
put
inside
another
cube
touching
faces
equivalently
largest
cube
can
circumscribe
another
cube
way
faces
touched
solution
inner
cube
scaled
factor
3
5
outer
rotated
60
degrees
along
main
diagonal
outer
cube
unit
cube
0
1
3
inner
cube's
vertex
coordinates
integer
multiples
1
5
originally
geometry
junkyard
entries
illustrated
line
drawing
made
adobe
illustrator
also
using
adobe
dimensions
help
3d
orthogonal
perspective
complicated
drawings
use
mathematica
pov
ray
perspective
help
adobe
illustrator
line
drawing
gif
8
3k
postscript
source
40k
later
redid
drawing
raytraced
rendering
complications
included
making
outer
box
look
transparent
distorting
inner
box's
shape
still
making
possible
visualize
outer
shape
used
pov
ray's
glass
texture
modified
turn
refraction
increase
surface
roughness
decrease
amount
specular
reflection
image
size
2
3
original
line
art
eye
looks
even
smaller
like
1
2
size
realistic
rendering
helps
make
loss
size
animated
gif's
constant
motion
distracting
qtvr
version
better
color
resolution
gif
allows
greater
variety
viewpoints
allows
user
understand
shape
better
controlling
direction
viewed
rendered
box
box
animated
gif
112k
single
degree
freedom
qtvr
361k
views
gif
full
qtvr
4
1m
pov
ray
source
2
0k
technical
details
rendered
pov
ray
converted
animated
gif
qtvr
gifbuilder
0
5
converttomovie
1
6
make
qtvr
object
1
0b4
simple
applescript
program
renaming
pov
ray
output
files
names
expected
converttomovie
views
chosen
6
degrees
separation
decreased
qtvr's
recommendation
10
greater
smoothness
rotation
vertical
camera
angle
ranges
0
66
degrees
20
degrees
gif
symmetry
configuration
rendering
needed
done
120
degree
horizontal
rotation
saving
factor
3
file
size
rendering
time
even
240
frames
full
qtvr
object
use
4mb
storage
took
6
1
2
hours
render
200mhz
powerpc
603
first
qtvr
project
first
animated
gif
spent
lot
time
trying
different
image
compression
options
color
maps
finally
settling
dithering
gif
jpeg
compression
100
quality
qtvr
frames
lower
quality
jpegs
smaller
made
inner
cube's
edges
blurry
converttomovie's
graphics
option
second
choice
qtvr
image
format
three
untetrahedralizable
objects
three
shapes
examples
objects
can
divided
tetrahedra
without
adding
extra
steiner
vertices
mathematical
information
available
associated
web
page
made
demos
graduate
seminar
mesh
generation
viewed
class
laptop
computer
movies
large
pixels
400x400
bytes
6m
9m
due
time
space
limitations
rendered
one
degree
freedom
sch
nhardt
polyhedron
qtvr
6m
pov
ray
source
2k
thurston
polyhedron
qtvr
10m
pov
ray
source
2k
chazelle
polyhedron
qtvr
10m
pov
ray
source
2k
technical
details
rendered
pov
ray
image
quality
4
shadows
surface
colors
rendered
correctly
reflections
transparency
etc
converted
jpg
clip2gif
qtvr
converttomovie
1
6
make
qtvr
object
1
0b4
simple
applescript
program
renaming
pov
ray
output
files
names
expected
converttomovie
views
chosen
6
degrees
separation
decreased
qtvr's
recommendation
10
greater
smoothness
rotation
symmetry
configuration
rendering
needed
done
120
degree
horizontal
rotation
sch
nhardt
polyhedron
180
degree
rotation
two
chazelle
polyhedron
formed
pov
ray
constructive
solid
geometry
combination
44
halfspaces
cube
particularly
slow
generate
frame
took
roughly
12
minutes
render
200mhz
powerpc
603
images
compressed
conversion
qtvr
geometry
junkyard
computational
recreational
geometry
david
eppstein
theory
group
ics
uc
irvine
last
update
06
may
1997
14
43
58
pdt
