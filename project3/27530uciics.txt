ics 184 eecs 116 summer 2006 assignment 3 
assignment 3 
ics
184
eecs
116
summer
2006
news
course
reference
schedule
lab
manual
ics
184
newsgroup
alex
ics
184
eecs
116
summer
2006
assignment
3
due
date
time
friday
august
4
11
59pm
introduction
thus
far
focused
energies
task
querying
existing
database
centrally
important
skill
field
data
management
however
comes
real
world
database
applications
able
write
queries
relatively
small
part
battle
one
several
necessary
skills
ability
design
new
database
database
design
complex
undertaking
requiring
technical
prowess
understanding
rules
constraints
governing
underlying
enterprise
assignment
will
begin
cultivate
understanding
database
design
asking
engage
tasks
involved
design
database
application
assuming
already
decided
tables
will
needed
columns
require
future
assignment
will
allow
explore
decompose
system
requirements
set
necessary
tables
columns
application
single
person
software
development
effort
often
unnecessary
formally
keep
track
defects
problems
often
enough
write
things
sticky
notes
keep
list
text
file
development
effort
involves
larger
number
people
house
development
project
single
company
site
large
open
source
project
contributors
spread
throughout
world
becomes
much
important
centrally
track
bugs
feature
requests
one
person
can
report
defect
feature
request
task
can
assigned
appropriate
person
will
make
necessary
changes
evident
involved
responsible
party
also
use
discussion
thread
included
defect
feature
request
developers
responsible
fixing
bugs
people
reported
can
clarify
issues
fixes
made
tested
assignment
consider
aspects
design
hypothetical
web
based
defect
tracking
system
called
stinkbug
stinkbug's
primary
goal
track
defects
software
systems
defect
defined
something
least
one
user
believes
wrong
system
data
requirements
system
follow
user
system
knows
user's
email
address
password
name
user
may
one
email
address
specified
two
users
may
email
address
passwords
stored
database
unencrypted
obvious
security
problem
something
concerned
assignment
users
will
log
system
specifying
email
address
password
users
never
removed
database
added
though
email
address
user
can
changed
time
long
new
email
address
already
belong
another
user
defect
comprised
unique
defect
id
brief
description
status
severity
indication
user
reported
date
time
reported
defect
id
positive
integer
brief
description
longer
100
characters
status
defect
indicated
integer
code
integer
code
brief
description
associated
new
closed
description
associated
status
code
can
changed
time
status
code
removed
database
long
defect
status
code
two
status
codes
permitted
identical
descriptions
description
associated
status
code
must
longer
20
characters
severity
defect
indicated
integer
code
integer
code
brief
description
associated
critical
feature
request
description
associated
severity
code
can
changed
time
severity
code
removed
database
long
defect
severity
code
two
severity
codes
permitted
identical
descriptions
description
associated
severity
code
must
longer
20
characters
defects
never
removed
database
added
defect
zero
comments
associated
comments
used
means
users
discuss
defects
comment
potentially
long
string
text
posted
user
comment
attached
particular
defect
sequence
number
unique
among
comments
attached
defect
may
sequence
number
comment
attached
different
defect
example
first
comment
associated
defect
might
sequence
number
1
second
comment
might
sequence
number
2
sequence
numbers
must
positive
integers
though
required
consecutive
comment
can
removed
user
posted
stored
comment
date
time
comment
posted
defect
can
assigned
number
users
defect
assigned
user
presumption
assigned
user
needs
play
role
fixing
defect
role
described
brief
string
text
database
defect
related
component
overall
system
stinkbug
managing
defects
component
unique
integer
id
name
component
id's
positive
integers
two
components
permitted
name
components
never
removed
database
name
component
can
changed
id
will
never
change
attributes
database
can
ever
null
requirements
mind
database
will
require
following
tables
columns
part
primary
key
table
underlined
user
email
address
password
user
real
name
defect
defect
id
description
status
severity
reporting
user
reported
date
time
component
id
comment
defect
id
sequence
number
posting
user
comment
text
posted
date
time
component
component
id
component
name
defect
assignment
defect
id
assigned
user
role
status
code
status
status
description
severity
code
severity
severity
description
database
design
required
include
whatever
mechanisms
will
help
ensure
integrity
data
according
requirements
particularly
system
intended
handle
high
volume
transactions
cost
ensuring
data
integrity
well
worth
relative
cost
incorrect
data
database
starting
point
provided
sql
script
creates
re
creates
stinkbug
database
provided
form
creates
database
tables
without
specifying
integrity
constraints
tables
without
including
necessary
parts
design
required
use
script
starting
point
work
described
next
section
tasks
part
1
defining
integrity
constraints
30
points
augment
create
table
statements
provided
sql
script
integrity
constraints
including
primary
key
constraints
discussed
implied
data
requirements
will
verified
database
engine
whenever
possible
changes
make
supported
mysql
include
check
constraints
even
though
mysql
will
ignore
none
constraints
will
require
defining
assertion
avoid
use
assertions
since
mysql
even
parse
much
less
support
assertions
fact
yet
find
industrial
strength
database
product
anyone
know
otherwise
curious
permitted
change
names
tables
permitted
change
names
types
columns
though
may
find
necessary
create
tables
different
order
one
given
provided
sql
script
can
rearrange
order
table
creations
part
2
defining
views
20
points
add
sql
statements
add
following
views
stinkbug
database
assigned
component
defects
component
id
component
name
assigned
defect
count
assigned
defect
count
defined
number
defects
associated
particular
component
whose
status
descriptions
'assigned'
defect
summary
defect
id
description
status
description
severity
description
reporting
user
email
reporting
user
real
name
reported
date
time
component
name
initial
comment
view
gives
summary
information
defect
pulling
related
information
together
various
tables
initial
comment
defined
comment
minimum
sequence
number
among
comments
associated
defect
may
assume
every
defect
least
one
comment
associated
part
3
defining
using
stored
procedures
functions
30
points
write
sql
statements
add
following
stored
procedures
functions
database
permitted
make
use
views
defined
part
2
wish
though
required
function
called
defect
count
status
takes
status
description
returns
number
defects
database
status
description
example
select
defect
count
status
'closed'
return
number
bugs
status
description
'closed'
procedure
called
add
defect
takes
six
parameters
email
address
user
reported
defect
brief
description
defect
description
status
code
status
defect
description
severity
code
severity
defect
name
component
exhibits
defect
text
posting
user's
initial
comment
defect
presumably
contains
detailed
description
defect
parameter
may
null
case
posting
user
included
initial
comment
procedure
adds
new
defect
database
using
information
provided
parameters
along
following
rules
defect
id
new
defect
chosen
one
greater
maximum
existing
defect
id
example
maximum
existing
defect
id
1267
new
defect
id
chosen
1268
reported
date
time
chosen
current
time
note
now
function
mysql
takes
parameters
returns
current
date
time
stored
procedure
function
returns
time
procedure
function
began
execution
multiple
calls
now
within
execution
procedure
function
will
always
return
date
time
initial
comment
text
non
null
row
added
comment
table
posting
user
user
reported
defect
posted
date
time
current
time
sequence
number
1
defined
following
statement
will
add
new
defect
database
call
add
defect
'alex
thornton
com'
'stinkbug
needs
stored
procedures'
'new'
'feature
request'
'database'
'stinkbug
needs
stored
procedures
will
easier
work
database
'
lecture
covered
fair
amount
syntax
stored
procedures
functions
mysql
almost
inevitably
questions
work
gladly
answer
questions
though
might
able
get
quicker
answer
checking
mysql
5
0
documentation
regarding
stored
procedures
functions
parts
mysql
5
0
reference
manual
necessary
part
4
considering
effect
database
design
decisions
20
points
one
challenges
database
design
making
necessary
trade
offs
striking
appropriate
balance
say
clarity
efficiency
avoiding
duplication
information
database
allowing
useful
queries
written
without
requiring
joins
made
several
kinds
decisions
designing
tables
assignment
like
consider
answering
following
questions
selected
user's
email
address
primary
key
user
table
since
user
allowed
one
email
address
two
users
may
email
address
choice
will
work
since
email
addresses
uniquely
identify
users
performance
implications
system
used
practical
circumstances
users
need
allowed
change
email
addresses
changes
must
made
database
whenever
user
changes
email
address
database
designed
differently
allow
email
address
change
implemented
efficiently
view
assigned
component
defects
also
implemented
table
information
physically
stored
database
trade
offs
involved
decision
implement
view
table
advantages
implementing
assigned
component
defects
table
advantages
implementing
view
documentation
notice
provided
sql
script
possible
include
comments
sql
script
beginning
line
'
'
character
required
write
lot
documentation
assignment
like
least
point
portions
script
address
tasks
assigned
will
make
easier
us
grade
work
accurately
especially
important
include
answers
questions
posed
part
4
comments
sql
script
entire
solution
assignment
will
contained
one
file
ease
grading
mysql
odds
ends
using
datetime
type
datetime
data
type
mysql
similar
date
type
used
previous
assignment
key
difference
datetime
stores
date
time
date
stores
date
mysql
accepts
number
formats
datetime
values
suggest
using
'yyyy
dd
mm
hh
mm
ss'
format
example
insert
new
defect
database
reported
february
20
2006
3
24
55pm
might
execute
insert
statement
insert
defect
values
101
'stinkbug
needs
integrity
constraints'
5
3
'alex
thornton
com'
'2006
02
20
15
24
55'
using
text
type
text
data
type
mysql
represents
string
text
potentially
quite
long
syntactically
text
type
behaves
differently
character
string
types
char
varchar
text
just
longer
length
limit
treated
differently
internally
exact
length
limit
depends
platform
mysql
version
suffice
say
purposes
text
columns
will
plenty
long
enough
whenever
used
need
delimiter
statement
declaring
stored
procedure
function
using
mysql
command
line
utility
using
mysql
command
line
utility
semicolons
way
indicate
supplied
input
plan
supply
one
sql
statement
way
mysql's
parser
know
statement
ended
unfortunately
syntax
stored
procedures
functions
also
uses
semicolons
way
terminating
statements
within
stored
procedure
function
create
procedure
function
within
mysql
utility
using
create
procedure
create
function
statements
semicolons
within
procedure
function
will
fool
mysql
thinking
finished
entire
create
procedure
command
even
though
solution
problem
temporarily
tell
mysql
use
something
semicolon
delimiter
indicator
specifies
complete
sql
statement
entered
use
new
delimiter
terminate
create
procedure
create
function
statement
finally
change
delimiter
back
semicolon
example
follows
delimiter
create
function
always
zero
begin
return
0
end
delimiter
need
sql
script
sql
scripts
executed
though
typed
mysql
command
line
utility
deliverables
submit
single
sql
script
re
creates
stinkbug
database
built
using
provided
sql
script
starting
point
bottom
script
include
comments
answers
questions
asked
part
4
assignment
please
include
statements
populate
database
test
data
supply
test
data
need
follow
link
discussion
submit
assignment
aware
holding
rules
specified
document
including
one
says
responsible
submitting
version
assignment
want
graded
regrade
assignment
simply
submitted
wrong
version
accident
originally
written
alex
thornton
winter
2006
