forge dynamo pa api documentation 
dynamo forge power aware os api 
navigation
homedocumentationpeoplepublicationsrelated
linksfaqresearch
homepage
downloads
dynamo
framework
v0
1power
aware
kernelsystem
query
librarieschange
log
distribution
download
demo
pa
api
api's
file
structure
dynamo
middleware
lib
paapi
user
levelkernel
levellinux
ipaq
v0
6
1
directory
user
level
use
level
library
using
paapi
paapi
dvs
data
structures
functions
visible
end
userpaapi
dvs
contains
functions
interface
paapi
system
calls
well
control
creation
destruction
posix
threads
functions
described
follows
paapi
dvs
create
thread
type
creates
thread
type
takes
parameter
thread
type
info
wcet
deadline
period
returns
handle
identifying
typepaapi
dvs
change
thread
type
changes
thread
type
calling
threadpaapi
dvs
create
instance
creates
thread
instance
given
type
code
executed
data
pass
thread
returns
handle
identifying
instance
functions
creates
posix
thread
sched
fifo
linux
real
time
scheduling
policy
stores
handles
posix
thread
internally
library
vector
threads
threads
start
executing
get
block
call
paapi
dvs
app
associate
paapi
dvs
init
start
paapi
library
sets
scheduling
policy
calling
thread
children
sched
fifopaapi
dvs
select
policy
chooses
paapi
scheduling
policy
will
usedpaapi
dvs
start
taskset
starts
threads
created
paapi
dvs
create
instance
schedulability
analysis
takes
place
within
kernel
paapi
tasks
waken
paapi
dvs
app
start
called
paapi
threads
notifies
beginning
execution
functions
actually
unnecessary
kept
anyways
look
code
will
see
anything
paapi
dvs
app
start
period
called
paapi
threads
tells
paapi
scheduler
task
will
start
executing
periodic
jobs
paapi
dvs
app
done
notifies
paapi
scheduler
execution
job
finished
paapi
dvs
app
associate
called
paapi
threads
associated
thread
paapi
thread
calling
function
thread
technically
paapi
thread
yet
paapi
dvs
app
leave
called
paapi
threads
leaves
paapi
scheduler
freeing
resources
allocated
paapi
dvs
app
sleep
next
period
called
paapi
threads
puts
thread
sleep
next
period
due
directory
kernel
level
use
level
library
using
paapi
include
linux
paapi
user
defines
data
structures
constants
visible
user
level
librariesinclude
linux
paapi
syscall
proper
definition
paapi
system
calls
added
kernel
nothing
interesting
include
linux
paapi
sched
data
structure
constants
used
kernel
level
onlyinclude
paapi
interface
new
system
calls
user
levelpaapi
sched
contains
kernel
internal
data
structures
type
instance
tables
well
functions
help
debugging
trace
collection
file
initially
lot
code
cut
functions
data
structures
log
trace
print
trace
message
execution
tasks
overhead
prohibitive
store
trace
events
kernel
internal
table
print
end
execution
task
set
print
trace
print
trace
messages
mentioned
paapi
contains
implementation
paapi
system
calls
defined
kernel
level
well
queues
used
manipulate
paapi
threads
two
internal
queues
wait
admission
control
paapi
threads
put
queue
calling
sys
paapi
associate
wait
next
period
paapi
threads
put
queue
calling
sys
paapi
sleep
next
period
sys
paapi
create
type
creates
system
type
insert
system
type
tablesys
paapi
create
instance
creates
new
instance
inserts
instance
tablesys
paapi
app
status
depends
parameter
status
follows
paapi
dvs
app
start
anything
anymore
paapi
dvs
app
start
period
initializes
data
structures
instance
table
puts
thread
sleep
wait
next
period
queue
paapi
dvs
app
done
updates
instance
table
calling
thread
marking
thread
done
sys
paapi
associate
marks
flag
linux
process
data
structure
saying
calling
thread
paapi
thread
sys
paapi
sleep
next
period
puts
calling
thread
sleep
wait
next
period
queue
sys
paapi
control
taskset
implement
three
distinct
functions
depending
parameter
cmd
paapi
ctrl
start
taskset
goes
wait
admission
control
queue
collects
information
thread
type
tables
order
perform
schedulability
analysis
wake
taskspaapi
ctrl
change
type
changes
type
information
calling
thread
performs
new
schedulability
testpaapi
print
log
print
trace
log
screen
called
paapi
dvs
start
taskset
user
level
function
paapi
threads
join
parent
thread
sys
paapi
destroy
task
deallocates
info
instance
type
tables
necessarywake
tasks
called
operating
system
tick
handler
order
wake
tasks
due
execution
according
period
rm
schedulability
analysis
performs
schedulability
analysis
sets
processor
speed
accordingly
three
parameters
essential
functions
change
behavior
follows
max
iterations
defines
many
iterations
schedulability
analysis
algorithm
runs
1
iteration
means
single
slowdown
factor
entires
taskset
will
computed
iterations
tries
compute
individual
slowdown
factors
per
task
calc
dynamic
factor
computation
dynamic
slowdown
factors
static
slowdown
factors
static
factors
wcet
task
used
dynamic
factor
average
execution
time
last
history
window
size
used
change
frequency
whether
processor
frequency
changed
computing
slowdown
factors
update
next
task
incl
macro
inserted
within
linux
scheduler
keep
track
execution
information
paapi
job
whenever
context
switch
takes
place
macro
updates
info
task
selected
execution
update
current
task
incl
macro
updates
info
job
preempted
completed
linux
kernel
files
modified
relative
linux
directory
three
power
softlink
inserted
tree
pointing
directory
kernel
level
include
linux
power
softlink
inserted
tree
pointing
directory
kernel
level
include
linux
kernel
sched
macros
update
next
task
incl
update
current
task
incl
inserted
right
context
switch
takes
place
two
includes
also
inserted
include
linux
cpufreq
include
linux
power
paapi
sched
include
linux
sched
two
new
fields
added
struct
task
struct
data
structure
instance
index
paapi
task
first
pointer
paapi
instance
table
representing
task
second
flag
used
recognize
whether
thread
paapi
thread
include
asm
arm
arch
sa1100
time
function
call
wake
tasks
inserted
os
tick
interrupt
handler
sa1100
timer
interrupt
order
wake
tasks
period
due
arch
arm
config
line
int
'timer
frequency
hz
100
'
config
hz
100
inserted
allow
configuration
os
timer
tick
precision
fs
proc
array
following
added
file
start
modified
paapi
implementation
priority
nice
0ul
removed
task
real
value
hz
std
task
real
value
hz
std
task
start
time
vsize
mm
mm
rss
0
might
want
shift
left
3
end
modified
paapi
implementation
include
asm
arm
param
following
modified
file
lines
commented
originally
rest
added
start
modified
paapi
implementation
ifndef
hz
define
hz
100
ifdef
kernel
define
hz
config
hz
internal
kernel
timer
frequency
define
user
hz
100
user
interfaces
ticks
define
clocks
per
sec
user
hz
like
times
define
hz
std
hz
user
hz
endif
defined
kernel
hz
100
define
hz
std
ifndef
hz
define
hz
100
userspace
cheats
give
100
endif
end
modified
paapi
implementation
