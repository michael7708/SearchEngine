ics h22 winter06 lab 5 
lab 5 
lab
5
due
friday
march
10
11
59pm
lab
write
program
simulates
ride
theme
park
ride
people
get
small
boat
navigate
boat
course
obstacles
dock
leave
boat
management
like
assess
long
people
spend
waiting
ride
well
much
utilization
getting
boat
note
person
takes
variable
amount
time
navigate
course
order
depart
necessarily
order
leave
also
one
spot
dock
person
can
get
boat
person
climbing
boats
must
wait
line
means
will
two
queues
one
people
waiting
board
boat
one
boats
waiting
boarded
simplicity
can
assume
unloading
boat
happens
quickly
need
accounted
interface
whatever
like
easiest
console
input
inputs
simulation
will
include
average
inter
arrival
time
riders
average
loading
time
rider
average
ride
time
rider
total
length
simulation
number
boats
inter
arrival
time
riders
length
time
elapses
one
riders
arrives
next
one
arrives
will
vary
rider
rider
can
input
average
value
can
examine
system
different
levels
demand
similarly
loading
ride
time
person
will
vary
can
specify
average
values
time
measured
arbitrary
unit
will
call
`clock
ticks'
terribly
important
clock
tick
actually
represents
values
relative
interval
time
including
average
values
input
user
specified
integers
time
rounded
nearest
clock
tick
recommend
keep
average
inter
arrival
time
riders
least
100
minimize
effects
rounding
inter
arrival
time
100
simulate
system
million
clock
ticks
values
measuring
will
converge
average
value
longer
run
simulation
stable
values
will
running
time
algorithm
depend
number
clock
ticks
run
simulation
write
code
event
driven
simulation
will
determine
next
event
whether
arrival
person
rider
departure
boat
rider
dock
return
boat
rider
dock
advance
clock
automatically
time
next
event
program
take
roughly
amount
time
average
inter
arrival
time
loading
time
riding
time
10
simulation
length
1000
values
multiplied
10
order
store
future
events
priority
queue
events
ordered
time
scheduled
occur
determine
next
event
just
take
element
smallest
time
value
code
priority
queue
class
supplied
priorityqueue
written
generic
data
structure
can
store
set
items
implements
interface
comparable
also
provided
note
class
implements
comparable
will
implement
method
compareto
declared
abstract
method
comparable
deletemin
method
returns
item
smallest
values
according
compareto
method
also
provided
classes
use
eventgenerator
generates
arrival
riders
program
instance
class
generate
input
data
run
simulation
use
following
method
inform
event
generator
parameters
input
user
public
void
setparameters
int
avginterarrivaltime
int
avgloadingtime
int
avgridetime
note
eventgenerator
expecting
positive
integers
call
method
zero
negative
integer
will
throw
illegaltimevalueexception
also
provided
whenever
simulator
needs
generate
new
customer
use
following
method
public
rider
getnextevent
int
lastarrival
method
takes
time
last
customer
arrived
will
return
new
instance
class
rider
class
rider
keeps
arrival
time
loading
time
riding
time
particular
customer
may
want
add
additional
data
members
methods
class
rider
eventgenerator
uses
random
number
generator
produce
inter
arrival
time
loading
time
riding
time
particular
customer
average
values
generated
will
match
average
values
input
user
random
fluctuations
values
case
implemented
poisson
process
will
probably
learn
time
career
ics
example
standard
probabilistic
process
use
simulate
networking
events
like
packet
arrivals
fact
code
writing
lab
boat
riders
simulation
based
principes
real
life
simulators
networks
chips
distributed
computing
applications
biological
systems
etc
etc
also
use
priority
queue
data
structure
store
boat
rider
pairs
currently
course
want
store
priority
queue
since
will
need
determine
one
returns
next
constructor
priorityqueue
takes
value
maximum
number
items
will
ever
stored
priority
queue
time
run
simulation
create
instance
class
priorityqueue
value
set
number
boats
method
add
throws
instance
class
queuefullexception
also
provided
attempt
add
item
priority
queue
full
will
need
provide
code
will
catch
exception
call
add
method
will
need
write
class
queue
also
written
generic
data
structure
particular
will
instance
queue
stores
instances
boat
instance
stores
instances
rider
can
choose
want
implement
queue
however
choice
must
completely
transparent
user
statistics
print
processing
events
total
number
rider
served
average
maximum
waiting
time
rider
average
maximum
percentage
time
boat
waiting
average
rider
queue
length
averaged
clock
ticks
turn
usual
turn
electronic
copy
code
electronic
dropboxes
also
write
brief
report
experiments
run
program
report
answer
following
questions
suppose
average
inter
arrival
time
100
average
ride
time
1000
average
loading
time
100
number
boats
12
effective
way
reduce
waiting
time
buy
boats
build
longer
loading
dock
customers
can
board
two
boats
time
can
approximate
effect
loading
two
boats
time
assuming
loading
time
cut
half
answer
question
determining
number
boats
need
bought
match
effect
lengthening
dock
answer
started
20
boats
suppose
management
determined
average
waiting
time
customers
willing
tolerate
exactly
average
rider
loading
time
suppose
average
ride
time
1000
average
loading
time
50
number
boats
20
maximum
traffic
level
average
inter
arrival
time
can
tolerated
still
satisfy
constraint
suppose
management
determined
long
average
rider
queue
length
50
riders
people
will
continue
use
ride
suppose
average
ride
time
1000
average
loading
time
50
number
boats
20
maximum
traffic
level
average
inter
arrival
time
can
tolerated
still
satisfy
constraint
files
will
need
eventgenerator
java
modified
3
08
8
25pm
modified
3
10
2pm
event
java
added
3
08
8
25pm
modified
3
12
11
32am
rider
java
priorityqueue
java
comparable
java
queuefullexception
java
illegaltimevalueexception
java
