
node cpp 
id
node
cpp
4034
2008
10
03
01
17
40z
rares
copyright
2004
2007
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
october
2004
author
liang
jin
liangj
ics
uci
edu
include
stdafx
include
include
include
assert
include
index
include
card
initialize
one
branch
cell
node
static
void
rtreeinitbranch
struct
branch
rtreeinitrect
rect
child
null
initialize
node
structure
void
rtreeinitnode
struct
node
register
struct
node
register
int
count
0
level
1
isleaf
false
0
maxcard
rtreeinitbranch
branch
0
leafcard
records
null
make
new
node
initialize
branch
cells
empty
struct
node
rtreenewnode
register
struct
node
new
node
struct
node
malloc
sizeof
struct
node
assert
rtreeinitnode
return
void
rtreefreenode
struct
node
assert
int
0
ibranch
rect
free
void
rtreefreeleafnode
struct
node
assert
free
static
void
rtreeprintbranch
struct
branch
int
depth
rtreeprintrect
rect
depth
rtreeprintnode
child
depth
extern
void
rtreetabin
int
depth
int
0
ilevel
0
printf
leaf
else
level
0
printf
nonleaf
else
printf
type
printf
level
count
address
level
count
0
icount
level
0
rtreetabin
depth
printf
data
branch
child
else
rtreetabin
depth
printf
branch
rtreeprintbranch
branch
depth
1
recursion
print
whole
sub
tree
find
smallest
rectangle
includes
rectangles
branches
node
struct
rect
rtreenodecover
struct
node
register
struct
node
register
int
first
time
1
struct
rect
assert
rtreeinitrect
0
maxkids
branch
child
first
time
branch
rect
first
time
0
else
rtreecombinerect
branch
rect
return
pick
branch
pick
one
will
need
smallest
increase
area
accomodate
new
rectangle
will
result
least
total
area
covering
rectangles
current
node
case
tie
pick
one
smaller
get
best
resolution
searching
int
rtreepickbranch
struct
rect
struct
node
register
struct
rect
register
struct
node
register
struct
rect
rr
register
int
first
time
1
rectreal
increase
bestincr
rectreal
1
area
bestarea
int
best
struct
rect
tmp
rect
assert
0
ibranch
child
rr
branch
rect
area
rtreerectvolume
rr
tmp
rect
rtreecombinerect
rr
increase
rtreerectvolume
tmp
rect
area
increase
bestincr
first
time
best
bestarea
area
bestincr
increase
first
time
0
else
increase
bestincr
area
bestarea
best
bestarea
area
bestincr
increase
return
best
add
branch
node
split
node
necessary
returns
0
node
split
old
node
updated
returns
1
node
split
sets
new
node
address
new
node
old
node
updated
becomes
one
two
int
rtreeaddbranch
struct
branch
struct
node
struct
node
new
node
register
struct
branch
register
struct
node
register
struct
node
new
node
new
node
register
int
assert
assert
count
maxkids
split
necessary
0
maxkids
find
empty
branch
branch
child
null
branch
count
break
return
0
else
assert
new
node
rtreesplitnode
new
node
return
1
disconnect
dependent
node
void
rtreedisconnectbranch
struct
node
int
assert
0
ibranch
child
rtreeinitbranch
branch
count
