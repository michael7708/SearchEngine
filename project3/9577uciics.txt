ics 52 syllabus fall 2001 
ics 52 
information
computer
science
52
introduction
software
engineering
fall
quarter
2001
location
elh
100
october
1
2001
need
map
monday
wednesday
3
30
4
50
course
code
36130
discussion
location
sspa
1100
monday
wednesday
friday
1
00
1
50
course
code
discussion
section
36131
last
modified
sunday
november
25
2001
new
november
25
2001
final
set
lecture
slides
now
line
november
23
2001
final
assignment
now
available
surprises
compared
described
lecture
monday
postponed
due
date
howver
next
friday
november
16
2001
stmp
java
files
available
smtpcomponent
java
smtpinterface
java
november
8
2001
solution
guide
midterm
available
see
midterm
schedule
pointer
midterms
will
returned
discussion
section
friday
november
9th
november
5
2001
implementation
assignment
now
available
due
date
pushed
back
monday
november
19th
november
3
2001
slides
week
7
now
available
page
numbers
time
also
made
changes
schedule
reading
assignments
assignment
2
now
due
11
7
october
31
2001
slides
user
interface
design
now
available
october
29
2001
girish
provided
examples
module
descriptions
used
assignment
2
check
ms
word
document
october
15
2001
slides
week
4
modified
significant
way
downloaded
slides
yesterday
evening
please
sure
get
current
copy
october
7
2001
slides
week
3
now
available
also
made
available
professor
van
der
hoek's
slides
last
spring
quarter
software
engineering
principles
requirements
engineering
hanging
week
2
segment
schedule
september
28
2001
beginning
monday
october
1st
lecture
portion
ics
52
will
meet
elh
100
also
discussion
section
will
meet
monday
october
1
normal
time
place
september
26
2001
want
add
class
must
friday
1
00
send
email
requesting
added
tell
met
prerequisites
prerequisites
will
add
tell
met
prereqs
later
discover
correct
will
drop
class
tell
whatever
information
believe
will
help
correctly
prioritize
request
compared
students'
requests
need
arise
example
graduating
ics
majors
get
first
priority
tell
major
year
extenuating
circumstances
overview
textbooks
schedule
assignments
tas
keeping
touch
computing
academic
dishonesty
instructors
professor
richard
taylor
electronic
mail
taylor
ics
uci
edu
office
ics2
203
office
phone
949
824
6429
hours
monday
wednesday
11
12
20
please
make
appointments
email
however
order
guarantee
meeting
fax
949
824
1715
mailing
address
department
information
computer
science
university
california
irvine
irvine
california
92697
3425
overview
prerequisite
knowledge
uci
catalog
introduction
concepts
methods
current
practice
software
engineering
study
large
scale
software
production
software
lifecycle
models
organizing
structure
principles
techniques
appropriate
stage
production
laboratory
work
involves
project
illustrating
elements
prerequisite
ics
23
grade
better
addition
skills
concepts
introduced
previous
classes
students
computing
skills
enter
class
learn
independently
first
week
quarter
use
text
editor
word
etc
create
documents
use
drawing
package
powerpoint
visio
etc
create
graphics
documents
instructional
objectives
course
follows
introduce
discipline
software
engineering
experientially
acquaint
one
version
software
lifecycle
provide
working
knowledge
least
one
reasonable
technique
applied
phase
lifecycle
provide
particular
insight
software
architecture
design
information
hiding
problems
software
analysis
testing
minimum
knowledge
skills
expected
students
receive
passing
grades
software
life
cycle
mastery
knowing
different
life
cycles
appropriateness
different
situations
knowing
basic
principles
software
engineering
separation
concerns
modularity
abstraction
knowing
apply
throughout
software
life
cycle
proficiency
understanding
tradeoffs
relationships
among
various
activities
software
life
cycle
understand
meaning
use
set
basic
software
qualities
requirements
mastery
interviewing
customer
elicit
requirements
writing
textual
non
formal
requirements
document
proficiency
understand
structure
requirements
document
know
appropriate
kinds
information
document
architectural
design
mastery
know
differences
among
interaction
patterns
set
basic
architectural
styles
understand
difference
architecture
module
design
proficiency
choosing
appropriate
architectural
style
particular
problem
module
design
mastery
using
provided
exported
required
imported
interfaces
define
module
boundaries
identifying
defining
modules
design
identifying
defining
abstract
data
types
design
proficiency
applying
coupling
cohesion
fan
fan
creating
uses
comprises
diagrams
exposure
creating
design
nontrivial
sizable
problem
programming
mastery
general
rules
programming
style
clarity
short
rehash
earlier
classes
proficiency
mapping
module
design
onto
implementation
source
code
exposure
using
existing
modules
libraries
implementation
coding
heavy
deadline
requiring
tradeoffs
code
quality
code
functionality
testing
proficiency
testing
program
failures
applying
white
box
testing
short
pieces
code
applying
black
box
testing
short
pieces
code
exposure
understanding
many
dimensions
software
quality
assurance
understanding
inspection
code
walk
process
textbooks
required
software
engineering
6th
edition
ian
sommerville
2001
addison
wesley
85
15
new
bookstore
class
notes
will
available
www
class
meeting
used
schedule
subject
change
week
week
date
date
lecture
topic
lecture
topic
schedule
items
discussion
topic
assignments
assignments
readings
sommerville
unless
noted
otherwise
1
september
24
introduction
chapter
1
skim
2
3
attention
first
2
subsections
skim
4
september
26
process
principles
continuation
lecture
notes
associated
first
lecture
2
october
1
requirements
engineering
slides
used
keynote
talk
straw
'01
requirements
assignment
issued
chapters
5
6
lighter
7
october
3
requirements
engineering
url
sommerville's
slides
chapter
7
see
also
professor
van
der
hoek's
excellent
slides
software
qualities
requirements
requirements
engineering
3
october
8
architectures
chapters
10
key
11
little
lighter
14
october
10
architectures
requirements
assignment
due
4
october
15
design
design
assignment
issued
chapter
15
october
17
design
continued
monday
regular
lecture
5
october
22
design
october
24
design
review
mid
term
6
october
29
mid
term
exam
october
31
ui
design
7
november
5
integration
testing
implementation
issues
implementation
assignment
issued
pages
452
457
provide
good
material
integration
testing
part
chapter
20
schedule
november
7
continued
arch
module
interfaces
due
8
november
12
class
veteran's
day
chapters
19
20
november
14
debugging
quality
assurance
9
november
19
testing
implementation
due
testing
assignment
issued
see
especially
section
20
1
2
since
technique
using
testing
assignment
november
21
10
november
26
maintenance
configuration
mgmt
chapter
27
29
november
28
course
review
testing
assignment
due
friday
november
30th
exams
december
3
final
exam
4
00
6
00
assignments
assessment
aggregate
grade
project
45
midterm
20
final
35
project
consists
four
assignments
relative
weighting
percentage
final
grade
follows
assignment
weight
requirements
10
architecture
module
interfaces
note
now
revised
document
use
original
note
also
due
date
now
11
7
18
implementation
7
testing
10
specific
assignments
will
placed
web
giving
assignment
required
format
specific
grading
criteria
grade
curve
meaning
will
assert
advance
half
class
will
receive
grades
half
grading
done
based
mastery
material
exhibited
exams
project
everyone
masters
material
well
everyone
will
get
hand
one
master
material
adequately
everyone
receive
late
assignments
will
accepted
unless
legible
excuse
physician
extreme
family
emergency
unless
willing
accept
extreme
penalty
respect
assignment's
grade
teaching
assistant
readers
ta
girish
sunyanarayana
readers
jin
liang
volkan
aginlerxiao
zhang
keeping
touch
check
website
regularly
definitive
location
course
information
announcements
concerning
assignments
will
made
course
mailing
list
will
also
used
make
announcements
provide
instructions
course
mailing
list
will
read
student's
perspective
instructor
ta
readers
can
post
messages
list
students
ask
one
us
question
whose
answer
relevant
rest
class
post
appropriate
material
list
important
note
email
email
send
conjunction
class
must
sent
uci
account
want
response
action
taken
must
use
uci
account
send
email
email
yahoo
hotmail
juno
home
non
uci
site
will
ignored
computing
computing
will
done
department's
nt
machines
may
use
another
computer
produce
documents
turn
handwritten
assignments
allowed
implementation
work
will
done
java
please
use
computing
equipment
instructional
purposes
also
watch
social
subtleties
electronic
mail
academic
dishonesty
cheating
ics
52
will
punished
accordance
university
policy
ics
policy
please
familiarize
documents
note
university
policy
states
faculty
responsibility
assigning
appropriate
grade
student
engages
academic
dishonesty
appropriate
grade
class
cheating
wrong
department
information
computer
science
university
california
irvine
ca
92697
3425
