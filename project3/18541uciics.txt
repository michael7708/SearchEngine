lab assignment 3 
lab assignment 4 
smileys
races
lab
assignment
4
assignment
write
program
smileys
run
race
race's
end
shows
statistics
racers'
running
times
assignment
gives
practice
simple
uses
arraylists
linkedlists
additional
practice
boolean
expressions
statments
loops
inheritance
polymorphism
nested
structures
pair
programming
may
pair
program
assignment
work
alone
make
decision
begin
work
assignment
make
decision
stands
duration
assignment
choose
pair
program
must
work
partner
assignment's
duration
program
behavior
general
requirements
program
begins
smiley
racers
left
edge
graphics
display
facing
right
see
profile
name
displayed
color
middle
faces
can
root
favorite
race
begins
user
presses
go
button
racers
begin
moving
right
smiley
hits
right
wall
completed
lap
smiley
reverses
direction
facing
left
speed
adjusted
discussed
heads
left
wall
hits
left
wall
profile
direction
reversed
speed
adjusted
racer
heads
right
wall
another
lap
completed
race
run
number
laps
smiley
completed
far
displayed
next
name
racer
completes
race
runs
number
laps
constitue
race
smiley
stops
racers
finish
race
stats
box
bottom
window
shows
name
time
fastest
racer
name
time
slowest
racer
average
racers'
times
program
stops
window
remains
open
user
can
read
statistics
user
clicks
close
box
close
window
end
program
close
box
clicked
race
still
running
program
still
shuts
technical
details
work
done
racinggroup
racingsmiley
racinganimation
classes
now
know
interfaces
use
specify
document
public
methods
required
classes
also
provide
additional
documentation
via
comments
sure
classes
write
implement
interfaces
explicitly
via
appropriate
phrase
class'
header
also
provided
several
classes
compiled
form
public
methods
constants
may
need
included
text
files
describing
note
smileyface
smileyfacepart
lab
2
explain
graphics
coding
program
much
involved
previous
assignments
provide
code
already
compiled
class
files
basicframe
basicdisplay
racingframe
racingdisplay
additional
technical
details
smiley
racer
animated
face
additional
characteristics
name
name's
display
color
racer
racing
lap
direction
moving
whether
finished
race
smileyracer
class
extended
smileyanimation
class
race
information
decided
smileyracer
brings
important
issue
encountered
designing
classes
class
responsibility
keep
detailed
information
make
needed
information
available
classes
information
intimately
tied
two
classes
example
smileyracer
keep
track
whether
racer
finished
race
whether
racer
crossed
finish
line
property
racer
rather
racing
class
keep
track
racers
finished
race
needs
know
participants
still
running
completed
race
last
two
assignments
placed
joint
responsibilities
primarily
animation
class
assignment
place
racers
one
can
argue
either
approach
better
wanted
give
chance
see
chance
write
code
using
approaches
give
insight
ramifications
way
thus
construct
racer
first
construct
smiley
face
set
attributes
needed
pass
smiley
face
smiley
racer
constructor
along
racer's
name
name
color
constructor
will
use
smiley
face's
attributes
set
attributes
smiley
racer
can
also
pass
exisiting
smiley
racer
smiley
racer
constructor
along
new
name
color
works
smiley
racer
animated
smiley
albeit
one
additional
characteristics
avoid
write
new
methods
make
smiley
appear
profile
make
use
couple
tricks
start
make
left
eye
color
face
right
eye
different
color
switch
colors
time
wall
hit
think
work
place
mouth
smiley
coordinate
center
coordinate
right
point
smiley
face
make
color
display's
background
color
will
make
smiley
appear
open
mouth
shift
mouth
side
face
time
wall
hit
position
smileys
move
left
right
right
left
will
collide
worry
constructing
smiley
faces
race
starts
left
sides
touch
left
hand
side
race
track
instead
racer
constructor
translate
whenever
feasible
best
program
handle
tasks
like
one
tedious
user
class
measure
time
ticks
tick
just
arbitrary
time
unit
corresponds
roughly
time
one
frame
animation
next
kind
like
saying
24
frames
per
second
means
time
one
frame
film
next
1
24th
second
1
24th
second
tick
duration
tick
set
racinganimation
class
racer's
base
speed
units
pixels
per
tick
determined
racer
constructed
also
randomly
determined
time
racer
racing
strategy
racer
can
run
race
constant
speed
can
decrease
speed
amount
lap
peaks
early
increases
speed
amount
lap
paces
gradually
pushes
harder
course
decreasing
speed
go
zero
still
finish
race
racer
must
move
least
1
pixel
per
tick
fastest
racer
can
go
double
starting
speed
possible
two
racers
run
race
numbers
ticks
can
ties
simplify
stats
computations
tie
fastest
runner
can
declare
tied
racers
fastest
applies
identifying
slowest
good
sport
racer
computation
display
logic
list
fastest
slowest
racers
case
ties
fairly
complex
beyond
needed
practice
concepts
lab
covers
particularly
careful
racer
finished
race
move
common
error
racer
finished
moved
one
time
program
knows
move
result
often
racer
facing
wrong
way
finish
touching
finish
line
error
program
work
zero
racers
happens
progam
run
stats
screen
immediately
displays
message
race
display
statistics
program
also
handle
large
number
relatively
small
sized
racers
least
range
10
20
animation
may
slow
number
racers
large
racer
names
may
go
outside
smiley
face
acceptable
class
java
source
files
need
placed
eclipse
project
zipped
archive
download
lab4
zip
get
using
procedure
followed
previously
import
project
eclipse
workspace
remember
test
program
incrementally
described
assignment
2
will
likely
save
lot
time
frustration
also
remember
style
matters
can
lose
points
poor
style
particular
poorly
structured
code
lack
poorly
done
comments
deliverables
zip
project
folder
file
smileysattheraces
zip
turn
via
checkmate
written
norman
jacobson
ics
21
fall
2006
october
2006
revised
norman
jacobson
explain
set
smile
properly
discuss
go
button
november
2006
minor
editing
clarity
norman
jacobson
december
2006
september
2008
updated
reflect
use
eclipse
norman
jacobson
september
2009
includes
text
adapted
alex
thornton's
lab
3
ics
21
summer
2009
minor
edits
norman
jacobson
september
2010
updated
discuss
use
getleftedge
norman
jacobson
december
2010
revised
graded
lab
assignment
use
interfaces
ics
45j
fall
2012
norman
jacobson
august
2012
deliverables
section
added
norman
jacobson
october
2012
bad
link
repaired
minor
typos
fixed
norman
jacobson
november
2012
