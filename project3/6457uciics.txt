ics 175 project artificial intelligence 
assignment 4 
assignment
4
cs
175
project
artificial
intelligence
due
9
30am
tuesday
october
30th
2006
instructions
assignment
4
assignment
will
begin
work
images
faces
learn
display
will
use
knn
classifier
assignment
2
classify
faces
two
classes
first
download
zip
file
assignment4
zip
contains
matlab
functions
matlab
mat
files
containing
images
part
1
displaying
face
image
first
type
load
singleface
load
matlab
image
single
face
stored
matlab
file
singleface
mat
single
monochrome
image
discussed
class
can
display
image
using
dispimg
function
among
matlab
files
downloaded
dispimg
function
takes
input
image
performs
simple
scaling
calling
scale
function
defines
colormap
gray
displays
image
try
modifying
function
uses
different
colormap
type
help
colormap
find
colormaps
available
see
effect
can
change
back
function
grayscale
done
find
maximum
minimum
median
mean
standard
deviation
pixel
intensities
image
plot
histogram
pixel
intensities
comment
tells
image
use
hist
function
keep
mind
functions
operate
column
vectors
will
need
reshape
image
matrix
column
vector
first
use
reshape
now
write
simple
function
will
threshold
image
create
new
image
pixels
original
image
brighter
threshold
mapped
1
pixels
intensities
less
equal
mapped
value
0
function
timage
threshold
image
image
function
timage
threshold
image
image
brief
description
function
name
cs
175
date
inputs
image
matrix
pixel
intensities
scalar
intensity
threshold
outputs
timage
matrix
thresholded
pixel
intensities
intensities
1
others
0
code
goes
display
thresholded
images
3
different
values
1
mean
average
pixel
intensity
original
image
2
0
2
3
0
7
briefly
discuss
use
thresholding
way
detect
objects
images
advantages
potential
limitations
approach
part
2
displaying
sets
faces
now
load
files
i2up
mat
i2straight
mat
matlab
will
get
two
arrays
data
structures
size
20
4
one
called
i2up
one
called
i2straight
i2up
i2up
20x4
struct
array
fields
directory
name
image
type
tells
us
i2up
structure
array
dimension
20
4
element
array
4
fields
first
dimension
structure
varies
1
20
corresponds
20
different
people
second
dimension
array
varying
1
4
corresponds
specific
type
expression
happy
sad
angry
neutral
recorded
person
field
i2up
type
string
records
name
image
type
can
ignore
directory
field
i2up
name
field
character
string
containing
name
person
i2up
image
field
actual
image
matrix
pixel
values
images
relatively
low
resolution
will
able
see
person's
expression
clearly
thus
20
people
4
images
person
80
images
total
i2up
i2straight
structure
exactly
people
exactly
order
expressions
i2up
person
head
upward
angle
i2straight
person
head
straight
head
angle
camera
first
can
display
individual
images
call
dispimg
i2straight
2
3
image
will
display
image
2nd
person
using
3rd
expression
straight
angle
camera
i2straight
2
3
type
will
tell
us
type
expression
image
images
pretty
low
resolution
60
60
pixels
can
actually
see
pixel
boundaries
informative
grab
corner
figure
window
shrink
figure
window
screen
surprisingly
able
see
face
clearly
shrinks
pixel
boundaries
distract
brain
visible
shrink
figure
distracted
pixel
boundaries
brain
can
recognize
structure
image
typically
features
face
now
can
display
whole
sets
images
function
dispset2d
simple
matlab
function
takes
array
structure
form
described
i2up
displays
mosaic
individual
images
image
grid
call
dispset2d
i2straight
1
will
display
images
first
person
list
dispset2d
i2straight
1
will
display
first
expression
person
list
note
also
function
lays
mosaic
column
column
columnwise
rather
row
wise
mosaic
note
may
blank
images
set
will
need
check
image
field
contains
data
just
null
matrix
write
matlab
function
will
take
structure
array
images
exactly
fields
i2up
find
nearest
neighbor
images
specified
query
image
display
original
image
nearest
neighbor
images
plotflag
1
first
image
shows
displayed
result
top
leftmost
image
mosaic
list
indices
query
image
query
image
specified
input
arguments
namely
th
element
structure
array
wish
can
provide
additional
visual
information
identify
query
image
first
image
displayed
automatically
drawing
red
box
around
image
visual
cue
nearest
neighbor
images
defined
images
including
query
image
closest
query
image
closeness
measured
euclidean
distance
euclidean
distance
two
matrix
images
defined
way
two
vectors
pixel
pixel
differences
squared
summed
one
way
convert
images
vectors
just
call
code
assignment
2
finding
closest
vectors
given
one
can
take
differences
2
images
directly
subtracting
2
matrices
corresponding
2
images
squaring
resulting
differences
summing
taking
square
root
sum
note
working
knn
code
slow
feel
free
use
code
examples
provided
slides
class
work
please
feel
free
email
ta
instructor
finally
need
call
dispset2d
within
function
create
display
adapt
replicate
necessary
code
within
dispset2d
get
work
may
need
experiment
bit
function
dispset2d
function
list
knndispset
imageset
plotflag
function
list
knndispset
imageset
plotflag
brief
description
function
name
cs
175
date
inputs
imageset
array
structure
images
cs
175
format
integers
specifying
imageset
image
query
image
number
neighbors
find
plotflag
display
nearest
neighbors
plotflag
1
outputs
list
2
matrix
first
row
contains
indices
imageset
nearest
neighbor
second
row
contains
indices
2nd
nearest
neighbor
forth
code
goes
test
code
can
print
indices
neighbors
found
query
individual
find
almost
cases
data
3
closest
neighbors
also
images
individual
part
3
comparing
classifiers
using
cross
validation
part
assignment
giving
code
will
need
just
need
run
code
describe
generate
table
results
discussed
class
training
data
accuracy
need
good
indicator
classifier
will
perform
new
unseen
data
estimate
generalization
accuracy
can
use
technique
cross
validation
discussed
class
will
use
function
called
test
classifiers
will
calculate
cross
validation
accuracy
training
accuracy
minimum
distance
classifier
different
knn
classifiers
using
different
value
default
value
1
1
minimum
distance
classifier
described
class
called
minimum
distance
can
find
called
typing
help
minimum
distance
matlab
code
calls
function
knn
specified
assignment
2
arguments
need
working
version
knn
code
run
header
function
test
classifiers
follows
function
cvacc
trainacc
test
classifiers
data1
data2
kvalues
rseed
function
test
classifiers
data1
data2
kvalues
rseed
inputs
data1
n1
feature
data
class
1
data2
n2
feature
data
class
2
kvalues
1
vector
kvalues
knn
fold
cross
validation
rseed
state
random
seed
permuting
data
order
useful
debugging
since
allows
us
repeat
given
run
exactly
output
cvacc
1
1
vector
accuracies
estimated
using
cross
validation
trainacc
1
1
vector
accuracies
training
data
1
accuracy
expressed
percentage
0
100
2
number
different
values
used
knn
length
kvalues
3
cvacc
trainacc
1
accuracy
knn
kvalues
4
cvacc
1
trainacc
1
accuracy
minimum
distance
classifier
well
returning
specified
results
code
prints
training
accuracy
cross
validation
accuracy
example
screen
easy
see
going
simple
test
code
use
data1
data2
data
sets
data
2
classes
mat
file
assignment4
simulated
data
mat
call
function
1
nearest
neighbors
get
approximately
following
results
may
differences
random
number
generator
works
different
machines
cross
validation
partitions
might
different
used
runs
consequentaly
accuraries
reported
may
little
different
roughly
similar
test
classifiers
data1
data2
1
10
1234
training
data
results
minimum
distance
accuracy
74
00
knn
1
accuracy
100
00
cross
validation
results
10
minimum
distance
accuracy
74
00
knn
1
accuracy
67
00
now
try
multiple
different
values
results
follows
test
classifiers
data1
data2
1
3
5
7
9
11
13
15
21
31
51
10
1234
training
data
results
minimum
distance
accuracy
74
00
knn
1
accuracy
100
00
knn
3
accuracy
84
00
knn
5
accuracy
83
50
knn
7
accuracy
82
00
knn
9
accuracy
81
50
knn
11
accuracy
80
00
knn
13
accuracy
80
50
knn
15
accuracy
80
00
knn
21
accuracy
79
00
knn
31
accuracy
77
50
knn
51
accuracy
76
50
cross
validation
results
10
minimum
distance
accuracy
74
00
knn
1
accuracy
67
00
knn
3
accuracy
76
00
knn
5
accuracy
75
00
knn
7
accuracy
78
00
knn
9
accuracy
77
00
knn
11
accuracy
76
00
knn
13
accuracy
74
50
knn
15
accuracy
75
50
knn
21
accuracy
76
00
knn
31
accuracy
75
50
knn
51
accuracy
76
50
note
results
will
sensitive
random
permutation
data
different
random
permutations
give
different
train
validation
sets
can
give
different
accuracy
estimates
thus
want
get
results
time
run
code
can
use
value
rseed
reset
state
pseudorandom
number
generator
important
verify
code
working
producing
numbers
similar
running
reasonable
time
certainly
less
minute
example
multiple
values
proceed
part
4
part
4
classifying
images
will
find
matlab
file
imagedata
mat
following
sets
images
1
rimages
array
structure
20
images
rimages
1
image
faces
facing
right
image
shrunk
original
120
128
size
30
32
done
save
computation
time
2
simages
rimages
faces
facing
straight
camera
3
uimages
1
faces
pointed
upwards
write
general
function
uses
functions
can
take
2
sets
image
structures
right
set
straight
set
compare
performance
training
accuracy
cross
validation
accuracy
minimum
distance
classifier
nearest
neighbor
classifier
part
3
will
now
need
modify
test
classifiers
function
can
handle
image
structures
input
function
defined
note
images
blank
use
blank
images
either
training
classifier
testing
classifier
suggest
simply
remove
blank
images
image
matrix
conversion
note
remove
blank
images
minimum
distance
classifier
particular
will
typically
give
much
worse
performance
nearest
neighbor
classifier
affected
much
general
can
think
case
2
classifiers
function
cvacc
trainacc
test
imageclassifiers
imageset1
imageset2
plotflag
kvalues
rseed
function
cvacc
trainacc
test
imageclassifiers
imageset1
imageset2
plotflag
kvalues
rseed
learns
classifier
classify
images
imageset1
images
imageset2
using
minimum
distance
knn
classifiers
returns
training
cross
validation
accuracies
name
cs
175
date
inputs
imageset1
imageset2
arrays
size
m2
n2
structures
imageset1
image
matrix
pixel
image
values
size
nx
ny
assumed
images
size
imageset1
imageset2
plotflag
plotflag
1
plot
mean
image
set
plot
difference
means
images
two
sets
kvalues
1
vector
values
knn
classifier
number
folds
fold
cross
validation
outputs
cvacc
1
1
vector
accuracies
estimated
using
cross
validation
trainacc
1
1
vector
accuracies
training
data
1
accuracy
expressed
percentage
0
100
2
number
different
values
used
knn
length
kvalues
3
cvacc
trainacc
1
accuracy
knn
kvalues
4
cvacc
1
trainacc
1
accuracy
minimum
distance
classifier
convert
imageset
feature
matrix
form
classification
learning
dvector1
image
matrix
imageset1
dvector2
image
matrix
imageset2
now
run
various
classifiers
report
accuracy
results
cvacc
trainacc
test
classifiers
dvector1
dvector2
kvalues
rseed
end
matlab
code
help
test
function
example
output
produced
function
called
arguments
test
imageclassifiers
rimages
simages
0
3
10
1234
training
data
results
minimum
distance
accuracy
89
47
knn
3
accuracy
84
21
cross
validation
results
10
minimum
distance
accuracy
86
67
knn
3
accuracy
76
67
note
due
variability
way
random
number
generator
seeding
works
numbers
obtain
may
slightly
different
nonetheless
70
80
percent
ranges
turn
eee
submission
9
30am
tuesday
eee
part
1
report
word
containing
following
report
clearly
mark
name
top
report
max
min
etc
values
part
1
plot
histogram
add
comments
interpretation
data
plots
3
thresholded
images
part
1
comments
plots
displayed
mosaic
images
part
2
straight
data
using
3
1
query
image
3
10
using
15
1
query
image
3
10
add
comments
results
eee
part
2
report
word
containing
following
important
use
rseed
1234
experiments
feel
free
conduct
experiments
seed
values
investigate
sensitivity
results
ordering
results
will
sensitive
since
using
relatively
small
sample
sizes
table
cross
validation
accuracies
minimum
distance
nearest
neighbor
classifier
1
3
5
7
9
6
different
classifiers
total
classifying
straight
versus
right
images
add
commentary
interpretation
classification
results
comment
whether
think
now
constructed
good
classifier
whether
people's
faces
general
capture
images
people
cs
175
class
digital
camera
pixel
size
roughly
scale
position
relative
camera
feed
classifier
repeat
last
part
straight
versus
images
repeat
last
part
versus
right
images
optional
find
errors
specific
classifier
makes
display
mosaic
display
images
confused
straight
vice
versa
note
purely
optional
quite
informative
since
tells
types
images
classifier
making
mistakes
may
suggest
ideas
improving
classification
performance
new
features
might
help
might
show
images
even
human
incorrectly
label
pixel
information
inherently
ambiguous
eee
upload
files
including
files
earlier
assignments
need
functions
wrote
call
assignment
eee
assignment
4
drop
box
hardcopy
turn
hardcopy
matlab
functions
wrote
parts
1
2
3
4
assignment
plus
word
file
end
class
tuesday
make
sure
name
clearly
indicated
front
page
hardcopy
submission
