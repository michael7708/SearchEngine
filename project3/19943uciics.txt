ics 125 project opportunities 
list candidate projects 
uc
irvine
ics
125
project
software
system
design
fq
2004
project
opportunities
index
1
working
sphere
2
integrating
palant
subversion
eclipse
3
creating
updating
palant
views
4
robustifying
palant
5
integration
xlinkit
archstudio
3
6
xarchscript
scripting
xadl
2
0
documents
archstudio
3
7
unexceptional
net
phase
ii
8
file
sharing
moving
towards
see
get
9
gxl
validator
plug
10
gxl
visualization
plug
11
new
computer
based
choral
musical
score
display
12
blah
blah
blah
content
creation
infrastructure
support
speech
based
location
aware
mobile
phone
gaming
13
new
true
3
digital
display
system
14
java
based
genome
browser
mitochondrial
dna
last
modified
september
27
2004
12
15
pm
working
sphere
offered
ict
group
ics
department
uc
irvine
customer
contacts
prof
gloria
mark
victor
gonzalez
like
students
design
system
whereby
people
connect
together
separate
events
daily
working
lives
related
part
common
project
call
working
sphere
means
people
identify
projects
outset
nsf
itr
project
135
course
jpl
project
etc
people
create
word
docs
excel
spreadsheets
send
receive
emails
write
notepads
phone
messages
etc
assign
separate
working
spheres
thus
working
sphere
contain
set
information
related
way
people
access
data
according
working
spheres
wait
gets
complicated
think
simple
traditional
file
hierarchy
way
go
like
see
similarity
indexes
used
relate
documents
within
working
sphere
terms
closeness
closeness
measure
determined
time
artifact
created
specifying
key
person
people
involved
importance
even
measure
means
effect
people
different
visualizations
information
dependiing
dimension
like
use
view
information
envision
interface
visualization
information
within
working
sphere
motivation
system
comes
real
life
data
shows
people
switch
projects
every
12
minutes
lower
order
events
every
3
minutes
goal
system
can
help
people
maintain
continuity
working
spheres
back
index
integrating
palant
subversion
eclipse
offered
software
engineering
group
ics
department
uc
irvine
customer
contacts
prof
andre
van
der
hoek
anita
sarma
palant
workspace
awareness
tool
informs
developers
ongoing
activities
developers
specifically
informs
potential
conflicts
develop
conflicts
may
direct
one
developer
working
cubicle
starts
editing
file
another
developer
working
cubicle
side
building
just
started
editing
well
indirect
one
developer
edits
file
makes
significant
changes
interface
class
defined
file
another
developer
reworking
program
make
increased
use
now
old
interface
palant
tool
developed
helps
situations
operates
sending
events
regarding
changes
developer
makes
thereby
informing
developers
changes
allowing
contact
notice
work
overlaps
date
palant
operated
stand
alone
fashion
recently
completed
integration
palant
cvs
eclipse
now
like
create
integration
palant
subversion
another
cm
system
eclipse
project
will
involve
understanding
eclipse's
plug
architecture
works
intimate
familiarity
leading
configuration
management
system
using
distributed
event
based
infrastructure
features
build
wrapper
around
subversion
subclipse
subversion
eclipse
plug
emits
events
palant
event
server
calculate
severity
size
changes
wrapper
support
easy
configurability
eclipse
special
requirement
use
palant
cvs
eclipse
development
tool
separate
branch
repository
report
issues
palant
suggest
improvements
along
way
will
implement
however
information
www
ics
uci
edu
asarma
palantir
back
index
creating
updating
palant
views
offered
software
engineering
group
ics
department
uc
irvine
customer
contacts
prof
andre
van
der
hoek
anita
sarma
palant
workspace
awareness
tool
informs
developers
ongoing
activities
developers
specifically
informs
potential
conflicts
develop
conflicts
may
direct
one
developer
working
cubicle
starts
editing
file
another
developer
working
cubicle
side
building
just
started
editing
well
indirect
one
developer
edits
file
makes
significant
changes
interface
class
defined
file
another
developer
reworking
program
make
increased
use
now
old
interface
palant
tool
developed
helps
situations
operates
sending
events
regarding
changes
developer
makes
thereby
informing
developers
changes
allowing
contact
notice
work
overlaps
date
built
number
different
visualizations
palantir
experimental
since
people
starting
use
palantir
number
different
settings
need
reexamine
views
reimplement
properly
scalable
resistant
errors
investigate
ways
visualizing
information
mere
reimplementation
effort
want
critically
look
visualizations
team
decide
upon
features
build
visualizations
scratch
addition
ms
windows
explorer
view
brand
new
project
involves
working
state
art
configuration
management
approach
designing
implementing
ms
windows
extension
working
eclipse
state
art
visualizations
designed
features
create
new
eclipse
perspective
informs
developers
minimal
average
maximum
severity
changes
redesign
reimplement
grid
view
properly
scale
work
build
ms
windows
explorer
view
similar
palant
explorer
view
actually
extension
real
windows
explorer
program
update
internet
palant
explorer
view
special
requirement
use
palant
cvs
eclipse
development
tool
separate
branch
repository
report
issues
palant
suggest
improvements
along
way
will
implement
however
information
www
ics
uci
edu
asarma
palantir
back
index
robustifying
palant
offered
software
engineering
group
ics
department
uc
irvine
customer
contacts
prof
andre
van
der
hoek
anita
sarma
palant
workspace
awareness
tool
informs
developers
ongoing
activities
developers
specifically
informs
potential
conflicts
develop
conflicts
may
direct
one
developer
working
cubicle
starts
editing
file
another
developer
working
cubicle
side
building
just
started
editing
well
indirect
one
developer
edits
file
makes
significant
changes
interface
class
defined
file
another
developer
reworking
program
make
increased
use
