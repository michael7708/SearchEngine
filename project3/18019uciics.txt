ics 54 interacting shells 
chapter 8 the shell 
uc
irvine
information
computer
science
department
winter
2000
ics
54
interacting
shells
brief
notes
chapters
8
9
20
shells
shell
just
another
unix
program
utility
command
tool
whose
capabilities
responsibilities
include
providing
command
line
interface
filename
expansion
substitution
variable
name
substitution
expansion
redirection
acting
scripting
interpreted
programming
language
focusing
first
4
use
shell
csh
enhanced
compatible
variant
tcsh
base
reference
present
extensive
use
principal
student
systems
uci
critical
files
csh
tcsh
starts
shell
source
cshrc
login
shell
sources
etc
login
cshrc
login
order
logout
source
logout
shells
sh
ksh
bash
shells
programs
set
prompt
ics54
ics54
echo
prompt
ics54
ics54
ps
pid
tty
time
cmd
487
pts
2
0
47
tcsh
ics54
csh
ics54
ps
pid
tty
time
cmd
21689
pts
2
0
00
csh
ics54
sh
ps
pid
tty
time
cmd
21696
pts
2
0
00
sh
bash
bash
ps
pid
tty
time
cmd
21698
pts
2
0
00
bash
bash
ksh
ps
pid
tty
time
cmd
21700
pts
2
0
00
ksh
exit
bash
exit
exit
exit
ics54
exit
ics54
ics54
filename
expansion
substitution
home
login
directory
user
user's
home
login
directory
match
single
character
name
file
match
number
characters
name
file
match
character
set
name
file
example
ls
3
6
list
ch4
cw4x
ct5ab
existed
c3
str1
str2
strn
match
strings
str1
str2
str3
example
ls
htm
txt
lists
htm
txt
set
nomatch
prevents
generation
error
message
match
set
noglob
turns
filename
expansion
unset
noglob
turns
filename
expansion
filename
expansion
also
limited
mechanisms
governing
shell
variable
expansion
substitution
'
variables
variable
expansion
substitution
shell
immediate
relatives
set
somename
defines
variable
somename
null
value
set
somename
somev
defines
variable
somename
value
somev
unset
somename
undefine
variable
somename
somename
replace
value
variable
somename
ls
home
example
echo
somename
somename
echo
somename
somename
undefined
variable
set
somename
echo
somename
set
somename
sam
echo
somename
sam
unset
somename
echo
somename
somename
undefined
variable
turn
special
meaning
next
character
example
ls
home
often
used
end
line
want
line
end
'
interpret
enclosed
text
except
example
ls
'
home'
interpret
enclosed
text
except
'
`
evaluate
inside
back
quotes
set
prompt
`hostname`
octavian
ics
uci
edu
environment
variables
normal
shell
variables
apply
shell
defined
environment
variables
exported
available
shells
created
spawned
shell
defined
words
child
shell
inherits
parent
shell's
environment
variables
normal
regular
shell
variables
setenv
somename
defines
environment
variable
somename
null
value
setenv
somename
somev
defines
environment
variable
somename
value
somev
unsetenv
somename
undefine
environment
variable
somename
example
set
apple
setenv
banana
csh
echo
undefined
variable
echo
banana
set
cat
setenv
dog
exit
echo
apple
echo
banana
echo
undefined
variable
echo
undefined
variable
important
shell
variables
home
user
group
host
term
tz
listed
actually
environment
variables
pid
processes
id
number
currently
running
shell
path
look
executable
programs
shell
use
rehash
adding
program
one
directories
search
path
anyway
security
bad
idea
include
search
path
prompt
shell
indicate
ready
another
command
noclobber
overwrite
existing
files
redirecting
output
ignoreeof
exit
ctrl
history
savehist
many
previous
commands
remember
invocation
shell
save
next
invocation
noglob
expand
filenames
filec
enable
filename
completion
cwd
home
shell
term
current
working
directory
home
directory
shell
terminal
group
gid
user
uid
group
name
id
user
name
id
setenv
shows
set
environment
variables
set
shows
set
variables
redirection
redirect
standard
output
ls
listing
redirect
standard
output
clobbering
need
ls
listing
redirect
standard
output
appending
ls
xx
listing
redirect
standard
output
error
output
ls
xx
listing
redirect
standard
input
take
stdin
follows
example
cat
eof
data
eof
cat
data
pipe
redirect
one
process's
output
process
another's
input
ls
lr
multiple
commands
single
line
pwd
date
home
ics54
public
html
doc
mon
jan
10
15
29
37
pst
2000
often
always
used
command
options
just
often
enough
useful
mean
stdin
standard
input
job
control
one
can
work
parallel
one
job
running
time
using
job
control
gcc
big
program
output
1
2014
jobs
1
running
gcc
big
program
output
vi
foo
stopped
jobs
1
running
gcc
big
program
output
2
stopped
vi
foo
various
ways
refer
job
current
job
job
number
strn
job
whose
command
matches
strn
recently
suspended
job
next
recently
suspended
job
note
begin
use
jobid
indicate
useful
job
control
commands
cmd
run
cmd
background
kill
1
kills
job
1
fg
vi
brings
job
2
foreground
bg
continues
current
job
background
jobid
fg
jobid
suspend
current
foreground
job
kill
current
foreground
job
kill
9
jobid
kill
job
jobid
history
history
rh
display
last
commands
reverse
order
without
numbers
previous
command
command
numbered
3
3rd
recent
command
strt
command
beginning
strt
strn
command
containing
strn
last
argument
command
numbered
arguments
command
numbered
first
argument
command
numbered
last
argument
previous
command
arguments
previous
command
first
argument
previous
command
str1
str2
redo
last
command
str1
replaced
str2
ls
ch01
html
ch01
html
1
2
ls
ch02
html
ch02
html
tcsh
cursor
based
command
line
editing
use
arrow
get
earlier
commands
use
left
right
arrow
move
within
command
backspace
delete
keys
remove
characters
character
keys
insert
characters
aliases
aliases
abbreviations
useful
commands
alias
name
string
define
name
abbreviation
string
alias
jobs
alias
rm
rm
alias
fg
alias
alias
pd
pushd
alias
lists
aliases
unalias
name
remove
alias
definiton
name
arguments
alias
example
alias
rm
'
bin
mv
rm'
ith
argument
alias
example
alias
cd
'cd
1
set
prompt
1
'
last
argument
alias
aliasedcommand
reverts
original
meaning
aliasedcommand
thus
rm
really
give
usr
bin
rm
shell
tcsh
alias
definitions
put
cshrc
available
use
every
time
shell
starts
shells
use
files
startup
processes
ps
processes
ls
files
ps
ps
illegal
option
usage
ps
aadeflcjlpy
format
termlist
userlist
userlist
grouplist
proclist
pgrplist
sidlist
'format'
one
user
ruser
group
rgroup
uid
ruid
gid
rgid
pid
ppid
pgid
sid
pri
opri
pcpu
pmem
vsz
rss
osz
nice
class
time
etime
stime
lwp
nlwp
psr
tty
addr
wchan
fname
comm
args
ps
pid
tty
time
cmd
17020
pts
3
0
01
tcsh
ps
uid
pid
ppid
stime
tty
time
cmd
ics54
17020
17018
0
14
03
26
pts
3
0
01
tcsh
ps
user
pid
tty
time
cmd
17322
pts
5
0
00
17212
pts
5
0
01
tcsh
17020
pts
3
0
02
tcsh
17332
pts
3
0
00
17330
pts
5
0
00
vi
17256
pts
5
0
01
vi
ps
user
uid
pid
ppid
stime
tty
time
cmd
ics54
17322
17212
0
14
41
18
pts
5
0
00
ics54
17212
17210
0
14
34
16
pts
5
0
01
tcsh
ics54
17020
17018
0
14
03
26
pts
3
0
02
tcsh
ics54
17325
17212
0
14
42
14
pts
5
0
00
vi
s1
txt
s2
txt
ics54
17327
17020
0
14
42
19
pts
3
0
00
ics54
17256
17212
0
14
35
58
pts
5
0
01
vi
c20
html
kill
sig
pid
jobid
sends
signal
sig
process
pid
job
jobid
kill
lists
signals
often
used
hup
1
kill
9
comments
welcome
javascript
must
enabled
order
page
fully
functional
current
24
january
2000
html
4
01
checked
