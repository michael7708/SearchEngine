ics 32 winter 2013 code example recursion 
using recursion traverse recursive data structure 
ics
32
winter
2013
news
course
reference
schedule
project
guide
code
examples
alex
ics
32
winter
2013
code
example
recursion
problem
summing
numbers
lists
integers
doubt
seen
previous
coursework
iterate
elements
list
python
using
loop
example
given
list
integers
use
following
function
calculate
sum
integers
list
also
use
built
sum
function
look
detailed
pattern
sum
numbers1
py
def
sum
numbers
numlist
sum
0
num
numlist
sum
num
return
sum
now
suppose
change
problem
just
slightly
instead
given
list
containing
lists
integers
always
two
levels
depth
maintain
goal
summing
integers
function
changes
somewhat
need
handle
additional
level
depth
need
loop
sublists
list
loop
integers
sublists
sum
numbers2
py
def
sum
numbers
numlist
sum
0
sublist
numlist
num
sublist
sum
num
return
sum
far
good
can
still
solve
problem
using
tools
already
though
nest
loops
things
gotten
bit
complicated
add
one
final
twist
problem
now
assume
want
sum
numbers
list
whose
elements
either
integers
lists
integers
total
two
levels
depth
can
add
appropriate
condition
function
handle
case
requires
know
function
type
returns
type
object
can
compare
types
using
see
sum
numbers3
py
def
sum
numbers
numlist
sum
0
element
numlist
type
element
list
num
element
sum
num
else
sum
element
return
sum
unconstraining
problem
imagine
now
might
need
function
order
able
sum
numbers
list
like
one
1
2
3
4
5
6
7
different
list
three
levels
deep
list
containing
list
contains
another
list
even
complex
three
functions
constrained
problem
summing
lists
might
two
levels
deep
using
strategy
supporting
third
level
depth
require
another
level
nesting
function
innermost
loop
need
contain
another
statement
check
type
elements
sublist
yet
another
loop
inside
loop
elements
third
level
sublist
indeed
solve
problem
way
support
four
levels
without
fourth
level
nesting
code
fifth
level
nesting
list
require
fifth
level
nesting
code
unconstrain
problem
altogether
consider
following
definition
data
structure
nested
list
integers
list
every
element
either
integera
nested
list
integers
data
structure
recursive
included
definition
inside
nested
lists
integers
can
smaller
nested
lists
integers
inside
can
smaller
ones
still
nesting
continue
forever
base
case
definition
allows
us
nested
list
integers
contains
integers
nested
lists
inside
function
can
sum
numbers
nested
list
integers
generalization
three
functions
wrote
handle
cases
three
functions
handle
plus
combination
nesting
possible
order
achieve
generalization
however
need
embrace
new
concept
recursive
function
code
final
code
example
lecture
sum
recursive
module
moral
programming
languages
encourage
recursion
primary
form
repetition
need
something
repeatedly
tend
want
use
recursion
else
python
one
however
python
first
inclination
use
loops
solve
problems
repetition
however
soon
discover
problems
lead
well
formulated
way
particularly
start
wanting
iterate
recursive
data
structures
like
nested
list
integers
find
combination
nested
loops
will
ever
solve
entire
problem
matter
deeply
nest
loops
can
find
input
nests
deeper
loops
find
situation
recursion
offers
approach
will
lead
general
solution
particular
interest
context
project
1
file
system
recursive
data
structure
directories
contain
collections
files
directories
turn
contain
collections
files
directories
find
technique
using
recursion
useful
traversing
file
system
searching
files
directory
structures
deeply
nested
