first homework 
first homework 
informatics
41
david
kay
uc
irvine
fall
2011
first
homework
homework
assignment
due
start
lab
monday
september
26
ta
will
come
around
check
2
00
early
section
second
homework
assignment
will
available
web
next
friday
will
due
following
monday
start
lab
follow
pattern
quarter
url
assignments
http
www
ics
uci
edu
kay
courses
i41
hw
distribute
printed
copies
subsequent
assignments
unless
couple
weeks
great
clamor
homework
assignments
will
include
reading
textbook
exercises
try
read
people
learn
best
apply
read
go
best
read
book
computer
hand
can
type
things
try
always
big
gap
thinking
understand
something
read
actually
able
apply
expect
exercises
go
quickly
find
spending
couple
minutes
exercise
without
making
progress
ask
us
classmate
rather
continuing
spin
wheels
unproductively
note
also
means
get
started
early
time
get
questions
answered
homework
asssignments
carry
much
weight
course
grade
though
lab
assignments
point
get
started
next
week's
concepts
thus
big
deal
answers
every
exercise
homework
long
questions
ones
answer
fact
expect
run
problem
ask
classmate
send
question
i41
uci
edu
even
monday's
lab
also
expect
find
especially
week
two
right
answer
know
right
course
computer
check
will
help
will
probably
observe
even
check
machine
makes
contrast
usual
experience
popular
programming
languages
click
'run'
cross
fingers
way
people
often
work
1
everything
course
syllabus
heading
week
get
started
informatics
41
includes
registering
checkmate
ics
uci
edu
filling
questionnaire
http
eee
uci
edu
survey
i41
f11
turning
photo
2
read
lab
assignment
0
come
lab
friday
just
get
idea
partner
3
encourage
talk
help
understand
assignments
limits
though
particular
remember
knowing
quiz
comes
example
much
important
just
putting
answer
already
read
guidelines
collaboration
independent
work
http
www
ics
uci
edu
kay
courses
i41
hw
collab
html
may
also
wish
read
general
advice
http
www
ics
uci
edu
kay
college
html
approach
college
work
practices
served
well
secondary
school
work
4
already
read
guidelines
pair
programming
http
www
ics
uci
edu
kay
courses
i41
hw
pair
html
describes
will
work
lab
pair
programming
simple
just
working
together
specific
roles
specific
things
person
needs
5
read
chapters
0
5
picturing
programs
textbook
pp
chapters
exercises
designated
worked
exercise
author
uses
introduce
new
concepts
context
actual
problem
thus
just
glance
quickly
try
follow
along
closely
least
sometimes
work
along
book
typing
running
solutions
drracket
enough
just
glance
solution
say
yeah
guess
makes
sense
5
1
chapter
1
write
answer
exercises
1
5
2
typing
definitions
window
drracket
running
course
make
sure
solution
works
remember
need
click
run
get
drracket
evaluate
picturing
programs
teachpack
happens
automatically
type
code
definitions
window
just
typing
simple
expressions
interactions
window
still
need
click
run
one
first
time
start
session
also
write
answer
exercise
1
8
9
easiest
paper
5
2
chapter
2
answer
exercises
2
1
3
2
4
3
easiest
paper
5
3
chapter
3
answer
exercise
3
4
4
5
4
english
one
way
say
thing
teacher
kicked
chalk
means
chalk
kicked
teacher
even
though
can
get
picky
stylistic
nuances
passive
voice
ability
paraphrase
say
thing
different
ways
common
natural
languages
human
languages
also
common
programming
languages
chapter
4
introduces
function
definitions
£á
fundamental
way
teach
computer
new
tricks
notice
class
use
one
way
defining
functions
called
mit
style
lambda
textbook
uses
another
way
called
indiana
style
thing
see
ways
course
may
use
either
way
though
strong
preference
use
mit
style
will
make
things
easier
later
mit
style
looks
like
define
double
define
double
lambda
2
function
lambda
takes
one
argument
returns
2
2
indiana
style
looks
like
define
double
define
function
double
takes
one
argument
2
returns
2
mit
style
uses
define
syntax
already
know
define
name
value
just
value
function
lambda
expression
indiana
style
adds
second
syntax
define
define
name
parameter1
parameter2
expression
go
along
original
form
define
still
use
variables
two
exercises
listed
chapter
may
skip
item
5
5
like
details
mit
indiana
style
read
rest
section
mit
university
indiana
two
places
done
lot
work
scheme
years
scheme
invented
mit
fact
based
language
lisp
also
invented
mit
1958
john
mccarthy
lisp
turn
based
kind
logic
called
lambda
calculus
logic
described
behavior
functions
invented
logician
alonzo
church
lisp
scheme
much
easier
create
manipulate
functions
programming
languages
function
can
treated
piece
data
scheme
program
just
like
number
image
string
scheme
term
use
building
describing
functions
lambda
comes
alonzo
church
greek
letters
bother
just
think
greek
word
function
hurt
think
way
exercise
4
2
1
mit
style
indiana
style
varying
function
name
second
case
can
definitions
file
pages
62
63
textbook
gives
syntax
rules
include
description
indiana
style
defining
functions
rules
4
5
give
different
syntax
using
define
mit
style
rule
4
remains
unchanged
rule
define
rule
5
just
describe
lambda
expression
another
kind
legal
expression
like
syntax
rule
5
mit
left
parenthesis
followed
word
lambda
left
parenthesis
one
identifiers
right
parenthesis
legal
expression
another
right
parenthesis
legal
expression
think
matching
pattern
lambda
identifier
expression
sort
lambda
expression's
value
function
takes
many
parameters
identifiers
names
can
appear
inside
expression
though
defined
variables
funciton
will
return
value
expression
mit
style
makes
explicit
point
functions
scheme
first
class
objects
values
can
handled
just
like
numbers
strings
images
see
implications
weeks
exercise
4
6
2
styles
paper
5
5
chapter
5
exercise
5
3
2
note
just
asks
contract
purpose
statement
know
enough
scheme
yet
write
actual
function
5
6
just
skim
chapter
6
now
describes
set
animations
fun
build
animations
need
complicated
set
conventional
functions
drracket's
interactions
window
despite
additional
details
underlying
programming
principles
contexts
will
animations
lab
assignments
emphasize
quizzes
final
anything
ask
require
memorize
details
provide
whatever
reference
material
necessary
also
reference
sheet
operations
may
find
useful
6
look
sections
scheme
finger
exercises
absolutely
sure
know
write
answers
turn
still
feeling
little
uncertain
working
will
help
build
ability
7
posted
group
short
videos
cover
various
helpful
background
information
expect
watch
next
week
information
show
quizzes
8
read
lab
assignment
1
lab
monday
idea
coming
take
minute
consult
drracket
help
desk
help
menu
will
useful
quarter
long
enter
picturing
programs
search
box
skim
documentation
picturing
programs
teachpack
kind
documentation
describes
api
application
programming
interface
api
library
functions
someone
added
toolkit
can
use
task
try
learn
memorize
page
just
get
overview
introduce
necessary
features
go
along
also
follow
image
teachpack
link
scan
api
turn
items
just
need
start
lab
monday
show
ta
solutions
exercises
part
5
let
know
difficulty
based
part
ics
h21
h22
assignments
david
kay
fall
2003
earlier
modified
david
kay
informatics
core
course
fall
2004
fall
2008
alex
thornton
fall
2006
richard
pattis
fall
2008
modified
picturing
programs
david
kay
iin
fall
2010
david
kay
kay
uci
edu
saturday
september
24
2011
5
42
pm
