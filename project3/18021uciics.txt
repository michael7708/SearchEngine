ics 54 tools filters utilities 
chapter 14 tools filters utilities 
uc
irvine
information
computer
science
department
winter
2000
ics
54
tools
filters
utilities
brief
notes
chapter
14
introduction
unix
allows
compose
programs
interactivly
command
file
shell
provides
user
interface
programs
encourages
dictates
keeping
programs
simple
single
purpose
use
capability
effectively
must
learn
existing
commands
select
right
commands
application
combine
commands
effectively
develop
new
commands
simple
filters
filters
programs
transform
input
stream
produce
output
stream
pg
less
paging
file
examples
pg
file
less
head
display
first
lines
file
standard
input
examples
head
100
file
head
100
head
100
tail
display
last
lines
file
tail
display
line
end
file
standard
input
tail
follow
initial
tail
file
keep
reading
passing
later
additions
file
useful
monitoring
file
written
log
file
wc
clw
count
words
well
actually
characters
lines
words
file
input
stream
uniq
cdu
report
filter
repeated
lines
file
input
stream
producing
output
stream
unique
lines
options
label
line
replication
count
show
duplicated
repeated
lines
show
unique
non
repeated
lines
spell
list
misspelled
words
file
standard
input
tee
file
copy
standard
input
standard
output
also
put
copy
file
examples
tee
copy
spell
memo
tee
misspelled
expand
change
tabs
spaces
unexpand
change
spaces
tabs
fmt
simple
text
formatting
filling
joining
lines
make
maximum
width
works
great
vi
format
paragraph
maximum
line
width
64
fmt
64
filters
tr
tr
cds
str1
str2
translate
corresponding
characters
str1
str2
example
convert
upper
case
lower
tr
'
'
'
'
file1
file2
option
instead
using
str1
use
complement
every
character
str1
example
replace
every
character
letter
number
tr
'
0
9
'
'
'
option
delete
input
characters
str1
option
squeeze
strings
repeated
output
characters
str2
single
characters
classic
example
transforms
input
list
words
one
line
tr
cs
'
'
'
012
'
filters
sort
sort
tchar
frn
pos1
pos1
sort
according
fields
separated
char
going
position
pos1
position
pos2
form
denotes
fields
offset
start
denotes
character
offsets
within
field
option
ignore
case
folding
upper
lower
together
option
sort
reverse
order
option
sort
numeric
order
example
sort
thisfile
reverse
numeric
order
field
fourth
colon
sort
4nr
thisfile
example
list
directory
reverse
order
file
size
ls
sort
4nr
filters
grep
family
grep
fgrep
egrep
search
string
pattern
files
input
stream
normally
matching
lines
output
options
can
change
default
behavior
grep
options
pattern
pattern
can
fixed
string
limited
form
regular
expressions
vi
see
table
14
1
text
beware
typo
says
match
character
match
start
line
match
end
line
match
character
brackets
example
abca
z7
match
character
except
brackets
example
abca
z7
match
0
repetitions
previous
item
fgrep
options
string
fixed
strings
regular
expressions
allowed
can
look
multiple
strings
using
option
read
strings
file
one
string
per
line
egrep
options
pattern
allows
full
regular
expressions
awk
see
table
14
2
text
beware
typo
says
match
1
repetitions
previous
item
match
0
1
repetitions
previous
item
treat
enclosed
text
group
item
separator
items
considered
alternatives
example
ny
la
sf
option
display
count
matches
option
ignore
case
letters
option
put
line
numbers
front
match
option
list
names
files
containing
match
lines
option
display
lines
match
string
pattern
option
match
words
sub
string
within
word
file
option
take
strings
patterns
matched
file
expression
option
used
indicated
explicitly
expression
string
pattern
follows
useful
expression
begins
utilities
script
typescript
start
shell
keep
transcript
typescript
everything
printed
screen
exit
exit
clean
control
characters
typescript
default
value
typescript
typescript
bc
basic
calculator
ibase
8
obase
12
great
way
convert
base
8
base
12
ever
cal
month
year
display
calendar
echo
built
part
various
shells
separate
program
extremely
useful
can
cause
portability
problems
date
format
current
date
time
just
format
can
want
find
path
expression
find
files
recursively
descending
directory
hierarchy
path
specified
path
seeking
files
match
criteria
given
expression
example
find
name
'
html'
mtime
3
exec
ls
lists
file
whose
name
ends
html
modified
last
3
days
want
examples
want
explanation
exec
want
details
expressions
including
complex
expressions
read
friendly
manual
another
reference
comments
welcome
javascript
must
enabled
order
page
fully
functional
current
28
january
2000
html
4
01
checked
