
gram cc 
id
copyright
2007
regents
university
california
redistribution
file
permitted
terms
gnu
public
license
gpl
date
04
08
2007
author
yiming
lu
include
include
include
gram
using
namespace
std
constructor
stringposition
stringposition
position
0
actualcnt
0
sizeofstringids
1
stringids
new
unsigned
sizeofstringids
stringposition
stringposition
unsigned
stringid
unsigned
short
position
position
position
actualcnt
1
sizeofstringids
1
stringids
new
unsigned
sizeofstringids
stringids
0
stringid
void
stringposition
addstringid
unsigned
stringid
actualcnt
array
full
need
allocate
new
space
new
stringid
actualcnt
sizeofstringids
unsigned
newsizeofstringids
sizeofstringids
1
unsigned
newstringids
new
unsigned
newsizeofstringids
unsigned
0
sizeofstringids
newstringids
stringids
delete
stringids
stringids
newstringids
sizeofstringids
newsizeofstringids
stringids
actualcnt
1
stringid
ostream
operator
ostream
output
const
stringposition
stringpos
position
output
stringpos
position
istream
input
stringposition
stringpos
position
input
stringpos
position
num
stringids
unsigned
size
input
size
string
ids
unsigned
0
size
unsigned
stringid
input
stringid
stringpos
addstringid
stringid
return
input
destructor
stringposition
stringposition
delete
stringids
constructor
groupstringposition
groupstringposition
length
0
actualcnt
0
sizeofpositions
1
positions
new
stringposition
sizeofpositions
groupstringposition
groupstringposition
unsigned
short
length
unsigned
stringid
unsigned
short
position
length
length
actualcnt
1
sizeofpositions
1
positions
new
stringposition
sizeofpositions
stringposition
strpos
new
stringposition
stringid
position
positions
0
strpos
groupstringposition
groupstringposition
unsigned
short
length
stringposition
strpos
length
length
actualcnt
1
sizeofpositions
1
positions
new
stringposition
sizeofpositions
positions
0
strpos
void
groupstringposition
insertintopositions
unsigned
strid
unsigned
short
pos
use
binary
search
find
location
insert
new
stringid
signed
left
0
signed
right
signed
actualcnt
1
signed
mid
0
left
positions
mid
getposition
left
mid
1
else
pos
positions
mid
getposition
right
mid
1
else
positions
mid
addstringid
strid
return
check
whether
necessary
allocate
new
space
actualcnt
actualcnt
sizeofpositions
unsigned
newsizeofpositions
sizeofpositions
1
stringposition
newpositions
new
stringposition
newsizeofpositions
unsigned
0
sizeofpositions
newpositions
positions
delete
positions
positions
newpositions
sizeofpositions
newsizeofpositions
insert
new
position
stringposition
position
new
stringposition
strid
pos
signed
signed
actualcnt
1
right
1
positions
positions
1
positions
right
1
position
return
void
groupstringposition
appendtopositions
stringposition
strpos
check
whether
necessary
allocate
new
space
actualcnt
actualcnt
sizeofpositions
unsigned
newsizeofpositions
sizeofpositions
1
stringposition
newpositions
new
stringposition
newsizeofpositions
unsigned
0
sizeofpositions
newpositions
positions
delete
positions
positions
newpositions
sizeofpositions
newsizeofpositions
positions
actualcnt
1
strpos
ostream
operator
ostream
output
const
groupstringposition
group
length
output
group
length
istream
input
groupstringposition
group
length
input
group
length
num
positions
unsigned
size
input
size
positions
unsigned
0
size
stringposition
strposptr
new
stringposition
input
strposptr
group
appendtopositions
strposptr
return
input
groupstringposition
groupstringposition
unsigned
0
actualcnt
delete
positions
delete
positions
constructor
lengthbucket
lengthbucket
actualcnt
0
sizeofgroups
1
groups
new
groupstringposition
sizeofgroups
lengthbucket
lengthbucket
unsigned
stringid
unsigned
short
position
unsigned
short
length
actualcnt
1
sizeofgroups
1
groupstringposition
groupstrpos
new
groupstringposition
length
stringid
position
groups
new
groupstringposition
sizeofgroups
groups
0
groupstrpos
destructor
lengthbucket
lengthbucket
unsigned
0
actualcnt
delete
groups
delete
groups
void
lengthbucket
insertintogroups
unsigned
stringid
unsigned
short
position
unsigned
short
length
use
binary
search
find
location
insert
signed
left
0
signed
right
signed
actualcnt
1
signed
mid
0
left
groups
mid
getlength
left
mid
1
else
length
groups
mid
getlength
right
mid
1
else
groups
mid
insertintopositions
stringid
position
return
check
whether
necessary
allocate
new
space
actualcnt
actualcnt
sizeofgroups
unsigned
newsizeofgroups
sizeofgroups
1
groupstringposition
newgroups
new
groupstringposition
newsizeofgroups
unsigned
0
sizeofgroups
newgroups
groups
delete
groups
groups
newgroups
sizeofgroups
newsizeofgroups
insert
new
group
groupstringposition
groupstrpos
new
groupstringposition
length
stringid
position
signed
signed
actualcnt
1
right
1
groups
groups
1
groups
right
1
groupstrpos
return
void
lengthbucket
appendtogroups
groupstringposition
groupstrpos
actualcnt
actualcnt
sizeofgroups
unsigned
newsizeofgroups
sizeofgroups
1
groupstringposition
newgrops
new
groupstringposition
newsizeofgroups
unsigned
0
sizeofgroups
newgrops
groups
delete
groups
groups
newgrops
sizeofgroups
newsizeofgroups
groups
actualcnt
1
groupstrpos
ostream
operator
ostream
output
const
lengthbucket
bucket
num
group
output
bucket
actualcnt
istream
input
lengthbucket
bucket
num
groups
unsigned
size
input
size
groupstringposition
unsigned
0
size
groupstringposition
groupposptr
new
groupstringposition
input
groupposptr
bucket
appendtogroups
groupposptr
return
input
counttable
counttable
maxcount
100000
patternid
1
stringcount
0
counttable
counttable
const
counttable
counttable
maxcount
100000
patternid
counttable
patternid
stringcount
counttable
stringcount
counttable
counttable
const
unsigned
patternid
const
unsigned
count
maxcount
100000
patternid
patternid
stringcount
count
counttable
counttable
unsigned
counttable
addcount
unsigned
patternid
patternid
previous
one
just
increase
count
patternid
patternid
stringcount
otherwise
reset
count
0
else
patternid
patternid
stringcount
1
return
stringcount
unsigned
counttable
getcount
unsigned
patternid
patternid
previous
one
just
increase
count
patternid
patternid
return
stringcount
otherwise
reset
count
0
else
patternid
patternid
stringcount
0
return
0
void
counttable
resetcount
unsigned
patternid
patternid
patternid
stringcount
maxcount
else
patternid
patternid
stringcount
maxcount
