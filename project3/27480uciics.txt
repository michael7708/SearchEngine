program 0 
program 0 
program
0
computing
infrastructure
introduction
computer
science
ics
21
introduction
first
programming
assignment
programming
assignment
designed
ensure
know
fundamentals
using
computing
infrastructure
course
machine
one
computers
labs
primarily
concerns
starting
learn
use
eclipse
integrated
development
environment
ide
java
available
microsoft
windows
mac
operating
system
knowing
use
tools
first
important
first
step
towards
able
learn
program
well
subsequent
programming
assignments
will
much
less
cookbook
flavor
instead
will
focus
designing
writing
debugging
programs
java
specifications
supply
assignments
will
assume
already
experienced
windows
mac
os
eclipse
user
knows
tools
skills
covered
assignment
can
easily
apply
writing
actual
programs
treat
assignment
seriously
will
want
still
learning
material
time
writing
early
programs
now
time
begin
mastering
important
tools
skills
finally
read
follow
instructions
carefully
excellent
idea
print
copy
web
page
read
highlight
details
think
important
might
forget
working
assignment
confused
students
lose
points
failing
follow
directions
properly
problem
gets
worse
quarter
starting
right
thing
assignment
excellent
idea
questions
instructions
example
think
error
just
confusing
please
contact
directly
sending
email
issues
concern
everyone
class
sending
email
class
discussion
list
often
can
email
making
trivial
reply
directly
answering
discussion
email
going
rest
class
time
carefully
read
last
two
sections
extra
credit
time
management
important
sections
relevant
programming
assignments
appear
one
part
1
questionnaire
download
copy
course
questionnaire
microsoft
word
file
read
edit
questionnaire
microsoft
word
filling
answers
questions
note
questions
first
page
experience
goals
expectations
questions
second
page
require
practice
navigating
course
web
site
find
useful
information
course
filled
questionnaire
submit
using
homework
dropff
link
course
web
page
part
2
using
eclipse
ide
read
windows
operating
system
eclipse
ide
web
page
also
accessible
handouts
web
page
includes
information
initially
need
know
using
eclipse
ide
includes
downloading
programming
projects
web
unzipping
starting
eclipse
creating
projects
new
ones
scratch
previously
existing
ones
editing
java
files
compiling
programs
correcting
syntax
errors
running
programs
uploading
downloading
projects
ics
lab
accounts
usb
memory
submitting
programming
assignmnments
checkmate
homework
dropoff
system
finished
reading
following
instructions
document
perform
tasks
shown
culminating
successfully
dropping
two
simple
working
java
programs
questions
feel
free
ask
help
staff
member
students
uci
please
cross
question
answering
threshold
quickly
get
habit
able
ask
us
questions
especially
lab
assignment
must
already
downloaded
installed
java
eclipse
ide
computer
using
one
uci
lab
machines
already
downloaded
installed
first
part
will
start
new
project
write
trivial
program
eclipse
create
new
java
project
new
class
anonymous
package
named
test1
creating
class
specify
via
checkbox
inclusion
public
static
void
main
string
args
method
otherwise
will
type
code
first
delete
comment
lines
4
6
instead
put
comment
line
1
name
comment
appear
richard
pattis
replace
body
method
replacing
line
todo
auto
generated
method
stub
comment
single
statement
system
println
java
program
test
scceeded
run
compile
execute
program
ensure
produces
correct
output
console
might
need
edit
incorrectly
typed
line
fact
know
bit
java
now
great
time
experiment
introducing
recompiling
fixing
small
syntax
errors
seeing
eclipsed
ide
reports
helps
correct
close
project
fact
go
ahead
delete
project
workbench
ensure
delete
project
contents
disk
undone
button
checked
move
project
folder
workspace
onto
desktop
copy
project
folder
including
contents
onto
ics
lab
space
usb
memory
always
save
work
even
using
computer
can
optionally
zip
first
delete
project
folder
empty
recycle
bin
log
computer
log
back
computer
download
project
folder
just
uploaded
onto
desktop
put
folder
workspace
ensure
saved
correctly
unzip
first
necessary
able
create
java
project
specify
project
file
existing
source
create
project
ensure
still
compiles
executes
correctly
problems
please
ask
help
lab
finished
repeat
steps
times
can
memory
programming
assignment
cookbook
end
mastered
steps
needed
creating
manipulating
projects
eclipse
something
will
quarter
finished
submit
file
created
test1
java
using
homework
dropff
link
second
part
will
download
project
use
eclipse
ide
download
collatz
project
folder
unzip
folder
desktop
contain
one
file
named
collatz
java
eclipse
create
new
java
project
named
collatz
click
create
project
existing
source
radio
button
browse
specify
collatz
folder
existing
source
create
project
edit
collatz
java
file
diclose
read
comments
top
collatz
java
file
understand
program
try
run
program
application
eclipse
will
indicate
four
syntax
errors
ensure
see
error
messages
problems
tab
bottom
window
disclose
four
errors
note
error
involves
prompt
forint
method
means
correctly
follow
instructions
end
installing
java
eclipse
document
installing
class
library
redo
steps
fix
three
errors
follows
expected
understand
errors
yet
careful
descriptions
errors
great
two
specify
way
fix
problem
right
way
code
just
blindly
follow
suggestions
expression
statement
line
67
line
numbers
turned
eclipse
turn
put
last
string
quotes
identifier
testnumber
expression
statement
line
75
put
semicolon
operator
expression
statement
line
76
replace
operator
operator
spaces
two
equal
signs
expression
statement
line
77
replace
identifier
testnumber
identifier
testnumber
notice
capital
fixing
errors
save
program
try
run
program
prompted
number
enter
7
ultimately
requires
17
cycles
reduced
1
close
project
fact
go
ahead
delete
project
workbench
ensure
delete
contents
button
checked
collatz
java
file
collatz
project
folder
used
create
project
updated
fixes
entered
copy
project
folder
including
contents
onto
ics
lab
space
usb
memory
always
save
work
even
using
computer
can
optionally
zip
first
delete
project
folder
empty
recycle
bin
log
computer
log
back
computer
download
project
folder
just
uploaded
onto
desktop
put
folder
workspace
ensure
saved
correctly
unzip
first
necessary
able
create
java
project
specify
project
file
existing
source
create
project
ensure
still
compiles
executes
correctly
problems
please
ask
help
lab
finished
repeat
steps
times
can
memory
programming
assignment
cookbook
end
mastered
steps
needed
creating
manipulating
projects
eclipse
something
will
quarter
finished
submit
corrected
file
modified
collatz
java
using
homework
dropff
link
bottom
line
will
writing
many
programming
assignments
quarter
requiring
create
new
projects
modify
existing
ones
able
manipulate
kinds
projects
easily
eclipse
also
whenever
want
write
small
program
test
understanding
java
low
threshold
quickly
creating
project
writing
experimental
code
want
test
extra
credit
programming
assignments
must
turned
time
can
get
partial
credit
partially
completed
assignment
must
turned
time
will
accept
late
homework
unless
official
excuse
pre
arranged
even
turn
whatever
work
completed
due
date
time
fact
another
incentive
finish
time
finish
early
programming
assignments
turn
everything
least
24
hours
officialy
due
will
receive
1
point
extra
credit
turn
48
hours
earlier
will
receive
2
points
extra
credit
extra
credit
early
turn
ins
recommend
turning
48
hours
early
equivalent
half
grade
improvement
40
point
assignment
previous
quarter
50
students
completed
assignments
early
received
amount
extra
credit
adds
two
main
advantages
planning
finishing
early
first
run
major
problem
will
extra
time
solve
actual
due
date
even
experienced
programmers
frequently
run
problems
yes
means
second
importantly
racing
finish
deadline
stress
levels
can
go
roof
become
less
interested
learning
material
whole
purpose
programming
assignments
learn
material
interested
just
getting
finished
learn
material
will
major
disadvantage
subsequent
programming
assignments
tests
cumulative
nature
material
course
therefore
plan
finish
every
assignment
monday
tuesday
evening
programming
assignments
sometimes
also
include
extra
credit
section
worth
1
2
points
designed
students
finish
early
want
continue
exploring
programming
within
context
assignment
points
acknowledge
small
way
extra
effort
assignment
special
extra
credit
section
can
get
extra
credit
early
dropoff
time
management
one
hardest
parts
college
learning
manage
time
time
management
especially
important
programming
courses
real
world
working
complicated
projects
hard
deadlines
difference
good
bad
time
management
can
profound
impact
much
learn
course
well
perform
much
effort
actually
need
expend
well
will
try
divide
programming
assignments
series
smaller
tasks
can
serve
milestone
solved
sequence
tasks
will
complete
entire
assignment
start
writing
programs
will
discuss
divide
conquer
method
formally
calling
iterative
enhancement
generally
best
spread
work
week
long
assignment
assignemnts
become
available
thursday
morning
recommend
reading
assignment
lab
day
discussed
lab
unsure
parts
can
ask
relevant
questions
lab
reading
includes
running
executable
files
included
assignment
see
program
behave
including
input
output
must
match
start
working
lab
plan
complete
least
half
programming
assignment
weekend
finish
early
following
week
monday
can
use
lab
tuesday
get
finish
asking
questions
starff
lab
students
look
assignment
think
best
done
one
sitting
can
great
plan
work
way
one
sitting
weekend
wednesday
night
way
wrong
amount
time
will
take
will
still
adequate
time
complete
assignment
meeting
time
goals
will
maximize
learn
minimize
anxiety
time
takes
learning
remember
assignments
must
turned
time
can
get
partial
credit
partially
completed
assignment
must
turned
time
will
accept
late
homework
unless
official
excuse
pre
arranged
even
turn
whatever
work
completed
due
date
time
finally
find
falling
behind
seek
help
immediately
ta
lab
tutor
even
students
course
appropriate
real
programs
start
will
discuss
kind
help
can
get
legitimately
kind
help
constitutes
cheating
