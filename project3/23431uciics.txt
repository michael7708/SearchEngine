pair programming guidelines 
specific guidelines 
ics
31
david
kay
uc
irvine
pair
programming
guidelines
two
heads
better
one
according
old
saying
even
applies
writing
programs
pair
programmers
working
described
nearly
always
beats
stereotypical
solitary
loner
pair
produces
high
quality
code
less
time
far
two
one
pair
programming
two
programmers
share
one
computer
one
driver
controls
keyboard
mouse
navigator
observes
asks
questions
suggests
solutions
thinks
slightly
longer
term
strategies
two
programmers
switch
roles
frequently
every
15
minutes
good
interval
us
though
flexible
even
activities
driver
navigator
flexible
except
typing
goal
work
collaboratively
partner
assisting
needed
produce
best
joint
result
possible
pair
programming
one
person
work
partners
just
split
work
half
independently
basic
idea
spend
time
scheduled
labs
working
partner
one
driver
navigator
switching
regularly
may
need
arrange
times
meet
beyond
scheduled
lab
sections
expect
everyone
flexible
professional
possible
arranging
times
necessary
schedule
highly
constrained
explore
possible
outside
meeting
times
prospective
partners
commit
partnership
may
enjoy
reading
paper
pair
programming
really
need
know
pair
programming
learned
kindergarten
laurie
williams
robert
kessler
communications
acm
may
2000
alternate
link
individual
differences
people
new
pair
programming
often
ask
happens
members
pair
different
abilities
actually
will
true
pair
people
world
probably
even
including
identical
twins
differences
may
great
small
one
member
may
strengths
exactly
like
real
world
working
situations
part
accomplishing
task
get
member
make
member
stronger
productive
subsequent
tasks
clearly
stronger
partner
may
feel
frustrated
slowed
partner
stronger
partner
still
benefits
teamwork
many
ways
partner's
requests
clarification
often
point
flaws
approach
solution
teamwork
skills
gained
great
value
job
market
exercise
providing
clear
explanation
solidifies
deepens
explainer's
understanding
less
strong
partner
may
feel
questions
hold
partner
back
benefit
participating
actively
pair
programming
studies
show
paired
work
consistently
better
work
stronger
partner
individually
part
partner's
job
understand
whole
task
means
asking
questions
necessary
answering
possible
will
choose
different
partner
every
assignment
partners'
skill
levels
certain
vary
week
week
still
choice
try
pick
partner
whose
skill
level
close
always
possible
sometimes
hard
compare
skill
levels
find
pairs
productive
partners
level
balanced
give
take
happens
right
according
guidelines
learn
much
scores
exams
will
lower
will
grades
class
others
consequences
strike
instantly
like
bolt
lightening
real
nonetheless
affect
grade
participation
pair
programming
cause
low
grades
failure
participate
fully
cooperatively
hand
problem
assignments
specify
pair
programming
pair
will
submit
one
solution
marked
partners'
names
electronic
submissions
via
checkmate
just
one
member
pair
submit
solution
must
contain
partners'
names
top
file
also
make
sure
inform
ta
pairings
first
place
pair
will
receive
single
score
assignment
also
paired
assignment
student
individually
will
submit
brief
partner
evaluation
form
administered
electronically
will
ask
questions
partner
come
scheduled
meetings
time
ready
work
partner
read
assignment
preparatory
materials
coming
scheduled
meetings
showing
either
specific
questions
ready
contribute
partner
cooperatively
follow
pair
programming
model
rotating
roles
driver
navigator
questioning
making
observations
navigator
partner
contribute
fully
fairly
actively
best
ability
completion
lab
assignment
partner's
participation
professional
cooperative
overall
filling
evaluation
required
student
assignment
forgetting
evaluation
will
lower
participation
score
will
tally
evaluation
scores
use
computing
participation
part
grade
taking
care
nobody's
score
hurt
single
bad
partnership
selection
partners
happen
give
low
scores
may
instructive
read
selection
students'
partner
evaluation
comments
previous
course
give
picture
good
partnerships
like
disasters
additional
information
pair
programming
one
aspect
programming
methodology
called
agile
development
search
pair
programming
agile
methodologies
web
will
yield
many
references
david
kay
kay
uci
edu
monday
january
7
2013
1
57
pm
