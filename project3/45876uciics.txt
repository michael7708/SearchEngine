ics 32 winter 2013 code example basics tkinter library 
basics tkinter library implementing graphical user interfaces 
ics
32
winter
2013
news
course
reference
schedule
project
guide
code
examples
alex
ics
32
winter
2013
code
example
basics
tkinter
library
background
interact
software
computers
mobile
devices
often
interact
graphical
user
interfaces
guis
programs
guis
stand
stark
contrast
programs
built
quarter
featured
console
mode
user
interfaces
print
text
console
read
text
keyboard
plenty
real
software
uses
console
spend
lot
time
day
day
use
computers
manipulating
guis
instead
natural
want
learn
build
guis
python
can
help
among
things
standard
library
includes
module
called
tkinter
technically
interface
gui
toolkit
called
tk
gets
name
allows
us
build
guis
using
python
code
example
begins
exploration
tkinter
module
find
information
tkinter
want
know
tkinter
library
two
places
can
get
lot
good
information
almost
surely
want
things
guis
end
time
cover
lecture
show
code
examples
places
go
want
find
general
happy
help
though
find
knowledge
library
encyclopedic
chance
stump
send
places
linked
good
place
start
chapter
9
perkovic
text
recommended
course
used
ics
31
exhaustive
look
tkinter
covers
basic
concepts
tkinter
built
around
detail
see
lecture
code
examples
tkinter
8
5
reference
new
mexico
tech
computer
center
comprehensive
reference
book
weighing
160
pages
printable
pdf
version
will
tell
absolutely
everything
want
know
tkinter
one
thing
cautious
python
code
examples
use
older
version
python
language
python
2
differs
version
using
python
3
number
mostly
minor
ways
need
cognizant
differences
creating
empty
gui
window
first
step
toward
learning
build
gui
can
create
completely
empty
gui
window
using
tkinter
surprisingly
easily
fire
python
interpreter
type
three
statements
import
tkinter
window
tkinter
tk
window
mainloop
creating
tkinter
tk
object
creates
tkinter
based
gui
causes
window
pop
screen
however
window
will
inactive
notice
call
mainloop
method
window
python
interpreter
becomes
inactive
given
another
prompt
enter
next
statement
expression
however
close
window
normal
way
close
window
using
operating
system
python
interpreter
will
prompt
another
statement
expression
might
seem
like
irrelevant
detail
reveals
something
important
way
tkinter
based
guis
behave
built
using
event
based
programming
different
way
think
writing
program
done
previously
event
based
programming
tkinter
gui
make
active
calling
mainloop
method
main
window
name
mainloop
actually
tells
us
lot
actually
going
tkinter
gui
main
loop
also
sometimes
called
event
loop
watches
variety
input
events
mouse
movements
mouse
button
clicks
pressing
releasing
keys
keyboard
complex
task
one
guis
require
rather
require
every
implementor
handle
tasks
manually
tkinter
handles
automatically
main
loop
calling
mainloop
method
causes
code
stop
making
progress
return
window
dismissed
leaves
open
interesting
question
tkinter
circles
long
running
main
loop
long
window
displayed
can
code
anything
answer
use
technique
called
event
based
programming
tkinter
runs
show
speak
tell
events
code
interested
told
events
happens
function
method
code
will
called
process
event
function
method
returns
tkinter's
main
loop
goes
back
watching
inputs
two
lessons
can
take
unlike
programs
writing
date
program
tkinter
based
gui
handle
control
flow
program
instead
create
gui
wire
set
event
handlers
code
simply
waits
event
handlers
called
write
event
handling
function
method
ran
long
time
say
one
downloaded
large
file
via
internet
entire
gui
will
unresponsive
event
handler
returns
worry
now
since
event
handlers
will
fast
early
examples
will
problem
worth
keeping
mind
broaden
skills
widgets
options
window
tkinter
gui
consists
building
blocks
called
widgets
variety
built
widgets
tkinter
will
sound
familiar
think
gui
based
programs
used
examples
include
buttons
text
labels
fields
can
enter
text
checkboxes
menus
scrollbars
addition
using
widgets
built
library
can
also
build
need
something
custom
provided
widget
set
options
can
configured
widget
first
created
passing
keyword
arguments
constructor
example
might
create
button
way
button
tkinter
button
master
window
text
'hello
'
font
'helvetica'
20
created
button
set
three
options
master
widget
button
will
placed
window
tk
object
another
widget
aside
outermost
window
gui
every
widget
master
text
text
will
displayed
inside
button
can
set
string
want
set
display
constant
text
font
specifies
font
button's
text
displayed
font
specified
tuple
consisting
least
two
elements
name
font
size
points
font
chosen
20
point
helvetica
layout
window
container
collection
widgets
displayed
window
label
several
buttons
checkbox
will
widgets
displayed
within
window
answer
question
lies
something
called
layout
manager
also
called
geometry
manager
whose
role
decide
arrange
widgets
within
area
arrangement
change
area's
size
changes
window
resized
spend
lot
time
layout
managers
yet
aware
two
layout
managers
provided
tkinter
pack
grid
can
also
build
using
third
layout
manager
called
place
though
well
beyond
scope
quarter
can
specify
layout
rules
widget
calling
one
three
methods
pack
grid
place
see
examples
throughout
next
code
examples
now
assume
call
pack
method
pass
parameters
asking
widget
fill
entire
available
area
window
window
resized
automatically
takes
much
space
widget
needs
complex
layout
examples
will
follow
later
behaviors
events
talked
tkinter's
main
loop
watches
various
inputs
converts
events
code
can
register
interest
events
specifying
functions
methods
tkinter
will
call
time
one
events
occur
widgets
behaviors
built
convert
lower
level
events
like
keypresses
mouse
movement
higher
level
behaviors
like
button
widget
pressed
example
button
widget
option
called
command
set
option
function
takes
parameters
function
will
called
whenever
button
clicked
button
tkinter
button
master
window
text
'hello
'
font
'helvetica'
20
command
hello
button
clicked
def
hello
button
clicked
whatever
want
button
clicked
event
binding
widget
expose
exactly
behavior
need
can
achieve
need
instead
called
event
binding
binding
event
widget
done
calling
bind
method
widget
example
given
button
created
previously
bind
event
generated
mouse
cursor
moves
button
button
bind
'
enter
'
button
entered
def
button
entered
event
whatever
want
button
entered
first
parameter
bind
description
event
sequence
events
interested
case
specified
name
'
enter
'
event
generated
mouse
cursor
moves
widget
second
parameter
event
handler
function
event
handler
functions
required
take
single
parameter
will
passed
event
object
describes
event
different
kinds
events
carry
different
attributes
though
carry
certain
ones
attribute
widget
specifies
widget
event
applied
information
events
can
bound
specify
modifiers
combine
events
sequences
attributes
available
within
event
objects
different
kinds
events
check
chapter
9
perkovic
text
exhaustive
list
chapter
54
tkinter
reference
code
bring
concepts
together
single
example
code
example
demonstrates
tkinter
gui
containing
single
button
whose
text
changes
move
mouse
causes
message
printed
console
clicked
simple
window
py
