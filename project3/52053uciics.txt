
lbaktree cc 
id
lbaktree
cc
5795
2010
10
23
01
18
03z
abehm
copyright
2010
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
08
19
2010
author
sattam
alsubaiee
include
include
lbaktree
lbaktree
lbaktree
storage
storage
algorithmtype
type
unsigned
il
float
simt
rtree
storage
kf1
temp1
kf2
temp2
type
fl
cout
error
wrong
algorithm
name
endl
exit
1
init
type
simt
indexeslevel
il
lbaktree
lbaktree
storage
storage
string
file
algorithmtype
type
double
sb
float
simt
rtree
storage
kf1
temp1
kf2
temp2
type
vl
cout
error
wrong
algorithm
name
endl
exit
1
init
type
simt
queryworkloadfile
file
spacebudget
sb
lbaktree
lbaktree
storage
storage
string
file
algorithmtype
type
double
sb
float
simt
float
kft
rtree
storage
kf1
temp1
kf2
temp2
type
vlf
cout
error
wrong
algorithm
name
endl
exit
1
init
type
simt
queryworkloadfile
file
spacebudget
sb
kfthreshold
kft
lbaktree
lbaktree
delete
gramgen
unordered
map
iterator
mit1
mit1
recordsmap
begin
mit1
recordsmap
end
mit1
delete
recordsmap
mit1
first
recordsmap
clear
unordered
map
iterator
mit2
mit2
keywordshashesmap
begin
mit2
keywordshashesmap
end
mit2
delete
keywordshashesmap
mit2
first
keywordshashesmap
clear
unordered
map
iterator
mit3
mit3
wrappersmap
begin
mit3
wrappersmap
end
mit3
delete
wrappersmap
mit3
first
wrappersmap
clear
unordered
map
iterator
mit4
mit4
strcontainersmap
begin
mit4
strcontainersmap
end
mit4
delete
strcontainersmap
mit4
first
strcontainersmap
clear
void
lbaktree
init
algorithmtype
type
float
simt
create
algotype
type
simthreshold
simt
avgkwdslength
0
numkwds
0
2
gramgen
new
gramgenfixedlen
sx
0
sy
0
sx2
0
sy2
0
sxy
0
0
void
lbaktree
insert
const
object
obj
vector
kwds
recordsmap
obj
id
new
vector
unsigned
0
kwds
size
unordered
map
iterator
keywordsmap
find
kwds
avgkwdslength
double
kwds
length
numkwds
keywordsmap
end
dictionary
push
back
kwds
keywordsmap
kwds
dictionary
size
1
recordsmap
obj
id
push
back
dictionary
size
1
else
recordsmap
obj
id
push
back
second
rtree
insert
obj
void
lbaktree
buildindex
kf1
open
true
cout
fatal
error
failed
open
temp1
file
endl
exit
1
kf2
open
true
cout
fatal
error
failed
open
temp2
file
endl
exit
1
propagatekeywords
storage
getroot
selectsanodes
fillkeywordshashesmap
fillwrappersmap
kf1
close
kf2
close
void
lbaktree
readqueryworkload
const
rectangle
unsigned
id
storage
getroot
queryworkloadmap
id
readqueryworkload
range
id
void
lbaktree
readqueryworkload
const
rectangle
unsigned
objectid
node
node
node
storage
read
objectid
unsigned
0
node
numchildren
node
objects
mbr
intersects
range
queryworkloadmap
node
objects
id
node
isleaf
readqueryworkload
range
node
objects
id
storage
free
node
void
lbaktree
propagatekeywords
unsigned
objectid
node
node
node
storage
read
objectid
unordered
set
kwds
node
isleaf
unsigned
0
node
numchildren
insertkeywords
node
objects
id
kwds
true
else
unsigned
0
node
numchildren
propagatekeywords
node
objects
id
insertkeywords
node
objects
id
kwds
false
string
text
unordered
set
iterator
kwds
begin
kwds
end
text
text
kf1
write
text
node
id
kwds
size
storage
free
node
void
lbaktree
insertkeywords
unsigned
objectid
unordered
set
kwds
bool
leaf
leaf
unsigned
0
recordsmap
objectid
size
kwds
insert
dictionary
recordsmap
objectid
else
string
text
kf1
read
objectid
parsekeywords
text
kwds
void
lbaktree
parsekeywords
string
text
unordered
set
kwds
string
size
type
lastpos
text
find
first
0
string
size
type
pos
text
find
first
lastpos
string
npos
pos
string
npos
lastpos
kwds
insert
text
substr
lastpos
pos
lastpos
lastpos
text
find
first
pos
pos
text
find
first
lastpos
void
lbaktree
computegradientintercept
unsigned
objectid
vector
keywords
node
node
node
storage
read
objectid
string
text
kf1
read
node
id
unordered
set
kwds
parsekeywords
text
kwds
objectid
storage
getroot
srand
unsigned
time
0
unsigned
0
100
keywords
push
back
dictionary
rand
dictionary
size
stringcontainervector
strcontainer
strcontainer
initstatscollector
gramgen
unordered
set
iterator
kwds
begin
kwds
end
strcontainer
insertstring
wrappersimpleednorm
wrapper
strcontainer
gramgen
false
wrapper
buildindex
unsigned
0
keywords
size
vector
resultstringids
struct
timeval
t1
t2
struct
timezone
tz
starttimemeasurement
t1
tz
wrapper
search
keywords
simthreshold
resultstringids
stoptimemeasurement
t2
tz
double
timemeasurement
gettimemeasurement
t1
t2
sx
double
strcontainer
size
sy
timemeasurement
sx2
double
strcontainer
size
double
strcontainer
size
sy2
timemeasurement
timemeasurement
sxy
double
strcontainer
size
timemeasurement
node
isleaf
computegradientintercept
node
objects
0
id
keywords
storage
free
node
void
lbaktree
selectsanodes
avgkwdslength
double
numkwds
algotype
fl
usefl
else
vector
keywords
computegradientintercept
storage
getroot
keywords
gradient
sx
sy
sxy
sx
sx
sx2
intercept
sx
sxy
sy
sx2
sx
sx
sx2
ifstream
queries
queryworkloadfile
str
queries
cerr
fatal
error
failed
open
query
workload
file
endl
exit
1
string
line
getline
queries
line
rectangle
range
string
coordinates
line
substr
0
line
find
istringstream
coordinatesstream
coordinates
coordinatesstream
range
min
range
min
range
max
range
max
readqueryworkload
range
algotype
vl
usevl
else
fillkeywordsintersectionsfile
usevlf
void
lbaktree
usefl
node
root
node
storage
read
storage
getroot
indexeslevel
root
level
indexeslevel
root
level
storage
free
root
unordered
map
iterator
mit
mit
kf1
begin
mit
kf1
end
mit
node
node
node
storage
read
mit
first
node
level
indexeslevel
stringcontainervector
strcontainer
strcontainer
new
stringcontainervector
true
strcontainer
initstatscollector
gramgen
strcontainersmap
node
id
strcontainer
storage
free
node
void
lbaktree
usevl
vector
heap
node
root
node
storage
read
storage
getroot
double
pfuzzyspacecost
double
kf1
getindexnode
root
id
numkeywords
avgkwdslength
double
1
0
4
0
double
pfuzzytimecost
double
queryworkloadmap
root
id
gradient
double
kf1
getindexnode
root
id
numkeywords
intercept
double
cfuzzyspacecost
0
double
cfuzzytimecost
0
unsigned
0
root
numchildren
cfuzzyspacecost
double
kf1
getindexnode
root
objects
id
numkeywords
avgkwdslength
double
1
0
4
0
cfuzzytimecost
double
queryworkloadmap
root
objects
id
gradient
double
kf1
getindexnode
root
objects
id
numkeywords
intercept
nodepriority
rootimportance
rootimportance
id
root
id
rootimportance
priority
cfuzzytimecost
pfuzzytimecost
pfuzzyspacecost
cfuzzyspacecost
rootimportance
pfuzzyspacecost
pfuzzyspacecost
rootimportance
cfuzzyspacecost
cfuzzyspacecost
rootimportance
pfuzzytimecost
pfuzzytimecost
rootimportance
cfuzzytimecost
cfuzzytimecost
spacebudget
pfuzzyspacecost
heap
push
back
rootimportance
storage
free
root
heap
empty
nodepriority
nodeimportance
nodeimportance
id
heap
0
id
nodeimportance
priority
heap
0
priority
nodeimportance
pfuzzyspacecost
heap
0
pfuzzyspacecost
nodeimportance
cfuzzyspacecost
heap
0
cfuzzyspacecost
nodeimportance
pfuzzytimecost
heap
0
pfuzzytimecost
nodeimportance
cfuzzytimecost
heap
0
cfuzzytimecost
pop
heap
heap
begin
heap
end
heap
pop
back
node
node
node
storage
read
nodeimportance
id
nodeimportance
priority
0
nodeimportance
cfuzzyspacecost
isleaf
node
level
1
spacebudget
nodeimportance
pfuzzyspacecost
spacebudget
nodeimportance
cfuzzyspacecost
stringcontainervector
strcontainer
strcontainer
new
stringcontainervector
true
strcontainer
initstatscollector
gramgen
strcontainersmap
node
id
strcontainer
else
stringcontainervector
strcontainer
strcontainer
new
stringcontainervector
true
strcontainer
initstatscollector
gramgen
strcontainersmap
node
id
strcontainer
storage
free
node
continue
unsigned
0
node
numchildren
node
node2
node
storage
read
node
objects
id
pfuzzyspacecost
double
kf1
getindexnode
node2
id
numkeywords
avgkwdslength
double
1
0
4
0
pfuzzytimecost
double
queryworkloadmap
node2
id
gradient
double
kf1
getindexnode
node2
id
numkeywords
intercept
cfuzzyspacecost
0
cfuzzytimecost
0
node2
isleaf
cfuzzyspacecost
0
cfuzzytimecost
std
numeric
limits
max
else
unsigned
0
node2
numchildren
cfuzzyspacecost
double
kf1
getindexnode
node2
objects
id
numkeywords
avgkwdslength
double
1
0
4
0
cfuzzytimecost
double
queryworkloadmap
node2
objects
id
gradient
double
kf1
getindexnode
node2
objects
id
numkeywords
intercept
nodepriority
nodeimportance2
nodeimportance2
id
node2
id
nodeimportance2
priority
cfuzzytimecost
pfuzzytimecost
pfuzzyspacecost
cfuzzyspacecost
nodeimportance2
pfuzzyspacecost
pfuzzyspacecost
nodeimportance2
cfuzzyspacecost
cfuzzyspacecost
nodeimportance2
pfuzzytimecost
pfuzzytimecost
nodeimportance2
cfuzzytimecost
cfuzzytimecost
heap
push
back
nodeimportance2
push
heap
heap
begin
heap
end
storage
free
node2
storage
free
node
void
lbaktree
usevlf
vector
heap
node
root
node
storage
read
storage
getroot
double
pfuzzyspacecost
double
kf1
getindexnode
root
id
numkeywords
avgkwdslength
double
1
0
4
0
double
pfuzzytimecost
double
queryworkloadmap
root
id
gradient
double
kf1
getindexnode
root
id
numkeywords
intercept
double
cfuzzyspacecost
0
double
cfuzzytimecost
0
unsigned
0
root
numchildren
unordered
set
intersectedkeywords
unordered
set
iterator
string
text
kf1
read
root
objects
id
unordered
set
kwds
parsekeywords
text
kwds
string
intscttext
kf2
read
root
objects
id
unordered
set
intsctkwds
parsekeywords
intscttext
intsctkwds
intsctkwds
begin
intsctkwds
end
kwds
find
kwds
end
intersectedkeywords
insert
cfuzzyspacecost
double
kf1
getindexnode
root
objects
id
numkeywords
intersectedkeywords
size
avgkwdslength
double
1
0
4
0
cfuzzytimecost
double
queryworkloadmap
root
objects
id
gradient
double
kf1
getindexnode
root
objects
id
numkeywords
intersectedkeywords
size
intercept
cfuzzyspacecost
double
kf2
getindexnode
root
id
numkeywords
avgkwdslength
double
1
0
4
0
cfuzzytimecost
double
queryworkloadmap
root
id
gradient
double
kf2
getindexnode
root
id
numkeywords
intercept
nodepriority
rootimportance
rootimportance
id
root
id
pfuzzyspacecost
cfuzzyspacecost
rootimportance
priority
pfuzzytimecost
cfuzzytimecost
else
rootimportance
priority
cfuzzytimecost
pfuzzytimecost
pfuzzyspacecost
cfuzzyspacecost
rootimportance
pfuzzyspacecost
pfuzzyspacecost
rootimportance
cfuzzyspacecost
cfuzzyspacecost
rootimportance
pfuzzytimecost
pfuzzytimecost
rootimportance
cfuzzytimecost
cfuzzytimecost
spacebudget
pfuzzyspacecost
heap
push
back
rootimportance
storage
free
root
heap
empty
nodepriority
nodeimportance
nodeimportance
id
heap
0
id
nodeimportance
priority
heap
0
priority
nodeimportance
pfuzzyspacecost
heap
0
pfuzzyspacecost
nodeimportance
cfuzzyspacecost
heap
0
cfuzzyspacecost
vector
ancestorsids
heap
0
ancestorsids
nodeimportance
pfuzzytimecost
heap
0
pfuzzytimecost
nodeimportance
cfuzzytimecost
heap
0
cfuzzytimecost
pop
heap
heap
begin
heap
end
heap
pop
back
node
node
node
storage
read
nodeimportance
id
nodeimportance
priority
0
nodeimportance
cfuzzyspacecost
isleaf
spacebudget
nodeimportance
pfuzzyspacecost
spacebudget
nodeimportance
cfuzzyspacecost
stringcontainervector
strcontainer
strcontainer
new
stringcontainervector
true
strcontainer
initstatscollector
gramgen
strcontainersmap
node
id
strcontainer
else
stringcontainervector
strcontainer
strcontainer
new
stringcontainervector
true
strcontainer
initstatscollector
gramgen
strcontainersmap
node
id
strcontainer
storage
free
node
continue
ancestorsids
push
back
nodeimportance
id
unsigned
0
node
numchildren
node
node2
node
storage
read
node
objects
id
string
text
kf1
read
node2
id
unordered
set
kwds
parsekeywords
text
kwds
string
intscttext
kf2
read
node2
id
unordered
set
intsctkwds
parsekeywords
intscttext
intsctkwds
unordered
map
tempmap
unsigned
0
ancestorsids
size
string
intscttext2
kf2
read
ancestorsids
parsekeywords
intscttext2
tempmap
ancestorsids
node2
isleaf
unsigned
0
ancestorsids
size
unordered
set
iterator
tempmap
ancestorsids
begin
tempmap
ancestorsids
end
kwds
erase
cfuzzyspacecost
0
cfuzzytimecost
std
numeric
limits
max
else
unsigned
0
ancestorsids
size
unordered
set
iterator
tempmap
ancestorsids
begin
tempmap
ancestorsids
end
intsctkwds
erase
kwds
erase
cfuzzyspacecost
0
cfuzzytimecost
0
ancestorsids
push
back
node2
id
unsigned
0
node2
numchildren
string
text2
kf1
read
node2
objects
id
unordered
set
kwds2
parsekeywords
text2
kwds2
unordered
set
intersectedkeywords
unsigned
0
ancestorsids
size
unordered
set
iterator
tempmap
ancestorsids
begin
tempmap
ancestorsids
end
kwds2
find
kwds2
end
intersectedkeywords
insert
cfuzzyspacecost
double
kf1
getindexnode
node2
objects
id
numkeywords
intersectedkeywords
size
avgkwdslength
double
1
0
4
0
cfuzzytimecost
double
queryworkloadmap
node2
objects
id
gradient
double
kf1
getindexnode
node2
objects
id
numkeywords
intersectedkeywords
size
intercept
cfuzzyspacecost
double
intsctkwds
size
avgkwdslength
double
1
0
4
0
cfuzzytimecost
double
queryworkloadmap
node2
id
gradient
double
intsctkwds
size
intercept
ancestorsids
pop
back
pfuzzyspacecost
double
kwds
size
avgkwdslength
double
1
0
4
0
pfuzzytimecost
double
queryworkloadmap
node2
id
gradient
double
kwds
size
intercept
nodepriority
nodeimportance2
nodeimportance2
id
node2
id
pfuzzyspacecost
cfuzzyspacecost
nodeimportance2
priority
pfuzzytimecost
cfuzzytimecost
else
nodeimportance2
priority
cfuzzytimecost
pfuzzytimecost
pfuzzyspacecost
cfuzzyspacecost
nodeimportance2
pfuzzyspacecost
pfuzzyspacecost
nodeimportance2
cfuzzyspacecost
cfuzzyspacecost
nodeimportance2
ancestorsids
ancestorsids
nodeimportance2
pfuzzytimecost
pfuzzytimecost
nodeimportance2
cfuzzytimecost
cfuzzytimecost
heap
push
back
nodeimportance2
push
heap
heap
begin
heap
end
text
unordered
set
iterator
kwds
begin
kwds
end
text
text
kf1
write
text
node2
id
kwds
size
intscttext
intsctkwds
begin
intsctkwds
end
intscttext
intscttext
kf2
write
intscttext
node2
id
intsctkwds
size
storage
free
node2
storage
free
node
void
lbaktree
fillkeywordsintersectionsfile
unordered
map
iterator
mit
mit
kf1
begin
mit
kf1
end
mit
node
node
node
storage
read
mit
first
node
isleaf
unordered
set
intsctkwds
string
text
kf1
read
node
id
unordered
set
kwds
parsekeywords
text
kwds
unordered
map
tempmap
unsigned
0
node
numchildren
string
text2
kf1
read
node
objects
id
parsekeywords
text2
tempmap
node
objects
id
unordered
set
iterator
kwds
begin
kwds
end
double
counter
0
unsigned
0
node
numchildren
tempmap
node
objects
id
find
tempmap
node
objects
id
end
counter
counter
double
node
numchildren
kfthreshold
intsctkwds
insert
string
intscttext
intsctkwds
begin
intsctkwds
end
intscttext
intscttext
kf2
write
intscttext
node
id
intsctkwds
size
storage
free
node
void
lbaktree
fillkeywordshashesmap
unordered
map
iterator
mit
mit
kf1
begin
mit
kf1
end
mit
node
node
node
storage
read
mit
first
strcontainersmap
find
node
id
strcontainersmap
end
string
text
kf1
read
node
id
unordered
set
kwds
parsekeywords
text
kwds
array
array
new
array
kwds
size
1
unordered
set
iterator
kwds
begin
kwds
end
array
append
keywordsmap
sort
array
begin
array
end
keywordshashesmap
node
id
array
storage
free
node
void
lbaktree
fillwrappersmap
wrappersimpleednorm
wrapper
unordered
map
iterator
mit
mit
kf1
begin
mit
kf1
end
mit
node
node
node
storage
read
mit
first
strcontainersmap
find
node
id
strcontainersmap
end
strcontainersmap
find
node
objects
0
id
strcontainersmap
end
string
text
kf1
read
node
id
unordered
set
kwds
parsekeywords
text
kwds
unordered
set
iterator
kwds
begin
kwds
end
strcontainersmap
node
id
insertstring
wrapper
new
wrappersimpleednorm
strcontainersmap
node
id
gramgen
false
wrapper
buildindex
wrappersmap
node
id
wrapper
else
strcontainersmap
find
node
objects
0
id
strcontainersmap
end
string
intscttext
kf2
read
node
id
unordered
set
intsctkwds
parsekeywords
intscttext
intsctkwds
unordered
set
iterator
intsctkwds
begin
intsctkwds
end
strcontainersmap
node
id
insertstring
wrapper
new
wrappersimpleednorm
strcontainersmap
node
id
gramgen
false
wrapper
buildindex
wrappersmap
node
id
wrapper
storage
free
node
void
lbaktree
rangequery
vector
objects
const
rectangle
const
vector
kwds
unsigned
id
storage
getroot
vector
strings
kwds
size
vector
hashes
kwds
size
searchwrapper
id
kwds
strings
hashes
strings
hashes
rangequery
objects
range
id
kwds
strings
hashes
void
lbaktree
rangequery
vector
objects
const
rectangle
unsigned
id
const
vector
kwds
vector
strings
vector
hashes
node
node
node
storage
read
id
strcontainersmap
find
node
id
strcontainersmap
end
strcontainersmap
find
node
objects
0
id
strcontainersmap
end
unsigned
0
kwds
size
hashes
empty
return
unsigned
0
node
numchildren
node
objects
mbr
intersects
range
node
isleaf
bool
keywordfounded
true
unsigned
0
kwds
size
bool
candidatefounded
false
unsigned
0
strings
size
searchvector
node
objects
id
strings
candidatefounded
true
break
candidatefounded
keywordfounded
false
break
keywordfounded
objects
push
back
node
objects
else
vector
resultstrings
kwds
size
vector
resulthashes
kwds
size
strcontainersmap
find
node
objects
id
strcontainersmap
end
searchwrapper
node
objects
id
kwds
strings
hashes
resultstrings
resulthashes
rangequery
objects
range
node
objects
id
kwds
resultstrings
resulthashes
else
searcharray
node
objects
id
kwds
size
strings
hashes
resultstrings
resulthashes
rangequery
objects
range
node
objects
id
kwds
resultstrings
resulthashes
storage
free
node
bool
lbaktree
searchwrapper
unsigned
objectid
const
vector
kwds
vector
strings
vector
hashes
vectorresultstrings
vectorresulthashes
unsigned
0
kwds
size
vector
resultstringids
wrappersmap
objectid
search
kwds
simthreshold
resultstringids
unsigned
0
strings
size
resultstrings
push
back
strings
resulthashes
push
back
hashes
unsigned
0
resultstringids
size
string
temp
strcontainersmap
objectid
retrievestring
temp
resultstringids
resultstrings
push
back
temp
resulthashes
push
back
keywordsmap
temp
return
true
bool
lbaktree
searcharray
unsigned
objectid
unsigned
numkeywords
vector
strings
vector
hashes
vectorresultstrings
vectorresulthashes
unsigned
0
numkeywords
unsigned
0
hashes
size
keywordshashesmap
objectid
hashes
resultstrings
push
back
strings
resulthashes
push
back
hashes
resultstrings
empty
return
false
return
true
bool
lbaktree
searchvector
unsigned
objectid
const
string
keyword
unsigned
0
recordsmap
objectid
size
dictionary
recordsmap
objectid
length
keyword
length
dictionary
recordsmap
objectid
compare
keyword
0
return
true
return
false
void
lbaktree
getobjectkeywords
unsigned
objectid
vector
objectkeywords
unsigned
0
recordsmap
objectid
size
objectkeywords
push
back
dictionary
recordsmap
objectid
void
lbaktree
starttimemeasurement
struct
timeval
t1
struct
timezone
tz
gettimeofday
t1
tz
void
lbaktree
stoptimemeasurement
struct
timeval
t2
struct
timezone
tz
gettimeofday
t2
tz
double
lbaktree
gettimemeasurement
struct
timeval
t1
struct
timeval
t2
unsigned
totaltime
t2
tv
sec
t1
tv
sec
1000000
t2
tv
usec
t1
tv
usec
double
tval
0
tval
static
cast
totaltime
1000
return
tval
