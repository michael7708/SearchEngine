ics 23 cse 23 project 1 dark end tunnel 
project 1 dark end tunnel 
ics
23
cse
23
project
1
dark
end
tunnel
due
date
time
friday
october
10
6
59pm
introduction
little
kid
fascinated
mazes
whenever
saw
maze
printed
piece
paper
grab
try
solve
soft
covered
books
full
even
tried
drawing
though
undeveloped
skills
time
terms
able
design
challenging
maze
also
fundamental
skill
able
draw
straight
line
proved
difficult
proposition
got
older
discovered
software
excellent
job
generating
challenging
maze
also
rather
easily
figure
solution
one
though
undergraduate
understood
project
write
java
class
generates
two
dimensional
maze
arbitrary
size
another
java
class
solves
one
will
give
practice
understanding
using
recursion
solve
real
problems
will
also
provide
opportunity
make
heavy
use
pre
existing
classes
source
code
perhaps
valuable
real
world
programming
skill
program
program
displays
maze
solution
capable
animating
maze
generation
process
well
animating
search
solution
screenshot
gui
maze
displayed
left
side
gui
along
right
side
options
can
select
either
maze
generator
class
one
provided
similarly
can
select
either
maze
solver
class
mine
providing
maze
generator
maze
solver
can
test
classes
separately
can
also
select
size
maze
generating
well
decide
whether
like
animate
maze
generated
solution
maze
solved
try
running
program
using
provided
generator
solver
create
solve
maze
including
animation
will
show
roughly
program
behave
finished
generator
solver
though
maze
generator
uses
different
algorithm
will
starting
point
code
need
complete
project
included
zip
archive
much
code
provided
compiled
class
form
provided
java
files
heavily
commented
need
work
two
classes
studentmazegenerator
studentmazesolver
everything
else
left
run
program
dark
class
contains
main
method
run
program
execute
dark
class
generating
maze
studentmazegenerator
class
implement
maze
generation
algorithm
lots
ways
generate
mazes
implement
one
relatively
simple
algorithm
particular
algorithm
will
generate
perfect
maze
viewing
maze
two
dimensional
matrix
square
cells
perfect
maze
one
two
cells
connected
single
unique
path
consequence
definition
cells
perfect
maze
reachable
starting
point
path
meaning
perfect
mazes
guaranteed
unique
solution
generate
perfect
maze
use
recursive
algorithm
variant
depth
first
searching
recall
depth
first
tree
traversals
one
path
tree
followed
completion
another
path
followed
generate
maze
much
way
start
maze
possible
walls
exist
wall
exists
every
side
cell
continue
removing
walls
perfect
maze
algorithm
goes
like
mark
current
cell
visited
current
cell
adjacent
cells
yet
visited
choose
one
unvisited
adjacent
cells
random
randomness
important
algorithm
will
always
generate
maze
remove
wall
current
cell
cell
just
chose
recursively
call
algorithm
chosen
cell
becoming
current
cell
generate
maze
make
sure
make
appropriate
calls
given
mazegeneratorlistener
object
essentially
time
maze
altered
call
method
mazegeneratorlistener
notifies
gui
change
made
causing
maze
redrawn
time
without
making
right
calls
mazegeneratorlistener
gui
will
animate
maze
generating
process
may
notice
watching
animated
version
maze
generator
provided
one
provided
maze
generator
uses
different
algorithm
one
described
intended
fun
implemented
provided
maze
generator
using
smarter
complicated
maze
generating
algorithm
generates
mazes
branches
result
difficult
solutions
solving
maze
studentmazesolver
class
implement
maze
solving
algorithm
algorithm
will
recursive
one
backtracking
backtracking
algorithm
one
recursively
investigates
possibilities
moving
path
hopefully
leads
solution
path
fails
backing
place
mistake
made
trying
another
path
leave
details
algorithm
exercise
figure
understand
maze
generating
algorithm
big
step
design
maze
solving
algorithm
maze
generating
process
addition
solving
maze
method
make
appropriate
calls
given
mazesolverlistener
object
mazesolverlistener
notified
whenever
solution
changed
will
allow
gui
animate
solution
deliverables
need
turn
studentmazegenerator
java
studentmazesolver
java
files
along
additional
classes
created
need
turn
files
provided
follow
link
explanation
turn
project
additional
work
advanced
students
research
maze
building
find
implement
algorithm
produces
complicated
mazes
one
use
submit
new
generator
file
different
name
course
along
required
one
don
forget
comment
work
well
cite
sources
solver
use
strategy
produces
correct
result
faster
memory
efficient
manner
one
provided
submit
new
solver
along
required
one
cite
sources
comment
work
well
additional
minor
rewrites
alex
thornton
summer
2004
incorporated
phrases
written
norman
jacobson
spring
2003
originally
written
alex
thornton
fall
2002
