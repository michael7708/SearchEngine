ics 32 winter 2013 code example protocols part 2 
protocols part 2 wrapping protocol implementation 
ics
32
winter
2013
news
course
reference
schedule
project
guide
code
examples
alex
ics
32
winter
2013
code
example
protocols
part
2
background
wrapping
protocol
example
previous
code
example
began
implementation
protocol
called
ics
32
text
file
sharing
protocol
i32tfsp
code
beginning
take
shape
made
number
design
decisions
intended
abstract
details
away
gradually
simpler
functions
well
chosen
names
end
goal
eliminate
repetition
boilerplate
code
example
takes
things
step
farther
continuing
divide
code
i32tfsp
py
module
smaller
pieces
completes
implementation
passing
functions
parameters
functions
important
remember
functions
python
objects
sense
lot
like
strings
like
integers
like
lists
like
namedtuples
might
think
can
store
functions
variables
pass
parameters
functions
even
return
result
functions
objects
objects
functions
fit
description
well
course
objects
capabilities
objects
different
types
differ
terms
can
can
add
integers
can
find
length
strings
can
append
element
list
can
functions
call
passing
arguments
expecting
result
returned
true
functions
define
def
also
functions
stored
variables
passed
parameters
functions
can
still
call
using
syntax
using
along
following
parentheses
arguments
encountered
interesting
problem
developing
part
example
lecture
written
function
i32tfsp
receive
file
called
program
wants
wait
file
arrive
via
i32tfsp
receive
i32tfsp
interesting
wrinkle
includes
decision
server
side
whether
file
will
accepted
decide
whether
file
acceptable
talking
little
realized
one
answer
question
calling
i32tfsp
receive
file
program
console
mode
user
interface
maybe
want
tell
user
name
description
file
let
user
decide
want
accept
files
matter
maybe
just
want
say
files
acceptable
never
want
accept
files
maybe
just
want
say
solution
problem
found
i32tfsp
receive
file
make
decision
instead
passed
function
parameter
called
time
make
decision
pass
function
like
one
always
wanted
accept
file
def
always
accept
filename
description
return
true
pass
function
wanted
never
accept
file
def
never
accept
filename
description
return
false
pass
function
wanted
user
decide
console
def
user
decision
filename
description
print
'a
file
offered'
print
'filename
'
filename
print
'description
'
description
return
input
'accept
es
'
strip
upper
'y'
keeps
i32tfsp
py
flexible
can
use
kind
program
rather
able
use
particular
kind
user
interface
binding
network
interface
one
wrinkle
came
completed
example
problem
choosing
network
interface
binding
listen
socket
laptop
probably
least
two
network
interfaces
quite
possibly
mine
example
three
wired
network
interface
can
plug
standard
network
cable
connect
existing
network
wireless
network
interface
allows
laptop
connect
wifi
network
like
campus
wireless
network
public
wireless
network
find
place
like
starbucks
loopback
interface
separate
interface
used
send
information
programs
running
machine
word
loopback
sounds
familiar
right
spoken
loopback
address
common
example
127
0
0
1
loopback
address
way
specifying
just
want
send
receive
data
programs
single
machine
want
loopback
interface
without
involving
network
hardware
software
controls
want
listen
incoming
connection
generally
decide
two
things
port
listen
19999
network
interface
listen
identified
interface's
ip
address
date
using
'127
0
0
1'
address
bind
understand
actually
means
means
want
listen
incoming
connections
loopback
interface
means
able
hear
connections
coming
machine
alternatives
use
ip
address
assigned
one
network
interfaces
simply
ask
python
bind
particular
port
network
interfaces
can
latter
sensible
enough
default
stick
rest
quarter
passing
address
''
empty
string
socket
bind
method
example
tweak
word
warning
noted
code
going
able
copy
paste
whole
project
2
solution
protocol
implementing
project
program's
interaction
different
one
ideas
techniques
translate
trick
sure
understand
done
example
attempt
use
ideas
programs
part
important
understanding
parts
example
fit
problem
solving
project
code
links
complete
implementation
i32tfsp
protocol
along
simple
console
mode
test
programs
provided
previously
minor
update
text
file
server
py
accommodate
new
parameters
i32tfsp
receive
file
now
requires
i32tfsp
py
implementation
i32tfsp
protocoltext
file
server
py
short
program
implements
console
mode
text
file
servertext
file
client
py
short
program
implements
console
mode
text
file
client
remember
download
files
place
directory
important
directory
python
will
able
find
one
imports
fancier
things
can
generally
keep
programs
single
directory
get
much
much
larger
