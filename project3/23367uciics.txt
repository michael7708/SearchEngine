gettingstarteddoc chen li group trac 
flamingo getting started guide 
back
index
appstring
appstringdoc
getting
started
introduction
downloading
package
requirements
wrappers
simplest
way
use
library
step
step
guide
step1
compiling
library
step2
using
library
application
step3
compiling
running
application
basic
usage
example
files
getting
started
introduction
tutorial
will
guide
basics
steps
needed
perform
approximate
string
search
collection
strings
using
library
guide
focuses
use
filtertree
filtertreedoc
module
downloading
package
entire
package
may
downloaded
http
flamingo
ics
uci
edu
releases
2
0
1
flamingo
2
0
1
tgz
requirements
modules
release
developed
tested
ubuntu
linux
using
gnu
gcc
compiler
order
compile
run
modules
will
need
following
linux
environment
preferably
debian
based
linux
ubuntu
compiler
gcc
version
4
0
later
boost
library
http
www
boost
org
required
partenumdoc
systems
aptitude
package
manager
ubuntu
debian
can
install
required
packages
typing
following
root
user
using
sudo
apt
get
install
gcc
libboost
dev
module
mattreedoc
developed
visual
makefile
provided
module
recommend
using
windows
visual
module
wrappers
simplest
way
use
library
convenience
added
wrappers
contain
necessary
objects
described
section
basic
usage
need
build
index
execute
queries
create
instance
wrapper
wrappers
initialize
components
default
values
simplest
fastest
way
use
library
expense
able
control
tuning
parameters
filters
used
fanout
etc
recommend
browsing
code
filtertree
wrappers
example
cc
step
step
guide
guide
will
use
wrapper
show
perform
approximate
string
search
using
edit
distance
step1
compiling
library
let
us
say
extracted
archive
following
directory
home
joe
flamingo
2
0
1
need
edit
home
joe
flamingo
2
0
1
src
makefile
inc
set
codebaseroot
root
directory
source
files
home
joe
flamingo
2
0
1
src
modifications
home
joe
flamingo
2
0
1
src
makefile
inc
look
like
codebaseroot
home
joe
flamingo
2
0
1
src
appstringroot
codebaseroot
vpath
appstringroot
cc
cppflags
wall
appstringroot
o3
cppflags
wall
appstringroot
ifndef
codebaseroot
error
please
edit
makefile
ini
set
codebaseroot
variable
absolute
path
source
code
directory
put
code
home
user
flamingo
2
0
1
src
codebaseroot
home
user
flamingo
2
0
1
src
endif
now
can
compile
wrapper
library
required
libraries
entering
home
joe
flamingo
2
0
1
src
filtertree
wrappers
running
make
cd
home
joe
flamingo
2
0
1
src
filtertree
wrappers
make
now
file
libfiltertreewrappers
home
joe
flamingo
2
0
1
src
filtertree
wrappers
ls
get
output
similar
following
ls
rwxr
xr
1
joe
joe
139644
2008
09
17
16
36
example
rw
1
joe
joe
2913
2008
09
17
10
55
example
cc
rw
1
joe
joe
84668
2008
09
17
16
35
example
rw
1
joe
joe
1772
2008
09
17
16
35
libfiltertreewrappers
rw
1
joe
joe
1609
2008
09
17
10
55
makefile
rw
1
joe
joe
1822
2008
09
17
10
55
wrapperabs
rw
1
joe
joe
307
2008
09
17
10
55
wrappers
cc
rw
1
joe
joe
679
2008
09
17
10
55
wrappers
rw
1
joe
joe
985
2008
09
17
16
35
wrappersimple
rw
1
joe
joe
1640
2008
09
17
16
35
wrappers
note
exact
file
sizes
may
differ
step2
using
library
application
now
compiled
library
ready
include
application
let
us
assume
wish
use
library
application
located
home
joe
searchapp
consists
one
source
file
home
joe
searchapp
main
cc
can
copy
paste
following
lines
source
code
home
joe
searchapp
main
cc
us
compile
include
wrappers
wrappers
include
iostream
include
vector
using
namespace
std
int
main
stringcontainervector
strcontainer
strcontainer
fillcontainer
home
joe
flamingo
2
0
1
src
filtertree
data
dummy
txt
80
read
80
lines
file
specified
wrappersimpleed
wrapper
strcontainer
3
use
simple
wrapper
uses
edit
distance
3
grams
wrapper
buildindex
float
editdistance
2
0f
string
querystring
xample
vector
unsigned
resultstringids
store
result
string
ids
wrapper
search
querystring
editdistance
resultstringids
print
result
strings
cout
similar
strings
endl
unsigned
0
resultstringids
size
string
tmp
strcontainer
retrievestring
tmp
resultstringids
cout
tmp
endl
return
0
application
will
use
first
80
lines
home
joe
flamingo
2
0
1
src
filtertree
data
dummy
txt
data
strings
will
build
index
support
approximate
string
search
answer
query
asks
data
strings
within
edit
distance
2
xample
finally
results
will
displayed
step3
compiling
running
application
since
decided
every
module
produce
library
file
necessary
link
several
files
main
produced
home
joe
searchapp
main
cc
simplest
way
achieve
create
makefile
application
create
file
home
joe
searchapp
makefile
following
contents
include
home
joe
flamingo
2
0
1
src
makefile
inc
ldflags
lrt
main
main
main
home
joe
flamingo
2
0
1
common
libcommon
home
joe
flamingo
2
0
1
listmerger
liblistmerger
home
joe
flamingo
2
0
1
filtertree
libfiltertree
home
joe
flamingo
2
0
1
util
libutil
home
joe
flamingo
2
0
1
filtertree
wrappers
libfiltertreewrappers
now
able
compile
application
using
make
make
make
successful
compiled
linked
application
time
try
run
typing
main
output
something
similar
following
inputfile
home
joe
flamingo
2
0
1
src
filtertree
data
dummy
txt
100
filling
container
80
80
0'0
0'0
100
inserting
index
80
80
0'0
0'0
similar
strings
example1
example2
example3
example4
example5
congratulations
successfully
created
first
application
using
library
basic
usage
approximate
string
search
can
performed
two
basic
steps
1
building
index
2
answering
queries
using
index
will
now
discuss
basic
components
steps
high
level
building
index
needed
components
string
container
stores
data
strings
want
perform
queries
gram
generator
decomposes
strings
grams
indexer
builds
filter
tree
inverted
lists
needs
string
container
gram
generator
answering
queries
using
index
needed
components
list
merger
solves
occurrence
problem
given
set
inverted
lists
merging
threshold
indexer
builds
filtertree
inverted
lists
needs
string
container
gram
generator
searcher
answers
queries
needs
list
merger
indexer
similarity
metric
represents
similarity
metric
used
query
contains
query
string
similarity
metric
similarity
threshold
refer
filtertree
example
cc
examples
example
files
apart
reading
guide
recommend
browse
code
example
files
provided
files
help
understand
use
library
quickly
possible
filtertree
wrappers
example
ccfiltertree
example
ccfiltertree
perftest
ccfiltertree
unittest
cc
back
index
