mesh generation open problems 
review open problems 
ics
280g
spring
1997
mesh
generation
graphics
scientific
computation
open
problems
proved
4
3
97
existence
triangulations
polygon
straight
line
graph
convex
quadrilateralizations
orthogonal
polygon
curved
objects
spline
polygons
spline
triangulations
example
formed
connecting
four
quarter
ellipses
shows
steiner
points
may
needed
even
quadratic
splines
maybe
need
added
interior
splinegon
4
8
97
went
dynamic
programming
techniques
optimal
triangulation
minimum
total
edge
length
simple
polygons
n3
time
e3
2
visibility
graph
edges
slowest
case
seemingly
simple
polygon
convex
can
find
minimum
length
triangulation
convex
polygons
n3
time
steve
suggested
frances
yao's
generalization
knuth's
speedup
optimal
binary
search
tree
construction
general
dynamic
programming
form
seem
work
dynamic
programming
methods
also
work
optimal
quadrilateralization
time
n4
sometimes
possible
speedup
can
break
quadrilaterals
pairs
triangles
reduce
time
n3
quality
functions
can
computed
adding
separately
qualities
two
triangles
total
edge
length
allowing
concave
quadrilaterals
speedup
seem
work
want
use
angle
based
quality
measures
even
simple
problem
testing
whether
exists
partition
simple
polygon
convex
quadrilaterals
can
test
existence
partition
time
4
convex
quadrilateralization
non
simple
polygons
non
simple
polygons
holes
can
reduced
simple
ones
choosing
edges
one
going
leftwards
leftmost
vertex
hole
boundary
way
can
find
optimal
triangulations
time
n3
famous
open
problem
whether
minimum
length
triangulation
polynomial
time
can
get
rid
exponent
also
can
use
separator
based
divide
conquer
reduce
time
bound
sqrt
can
constants
made
small
enough
actually
practical
n3
bound
o'rourke's
art
gallery
book
mentions
n7
log
time
bound
dynamic
programming
based
method
partitioning
simple
polygons
minimum
number
star
shaped
regions
can
improved
dynamic
programming
partitioning
minimum
number
convex
pieces
presumably
works
n3
n4
worse
note
added
later
jeff
erickson
tells
best
known
bound
convex
partition
r2n
log
number
reflex
vertices
might
large
gotten
steiner
problems
yet
minimum
steiner
partition
convex
pieces
can
also
solved
time
r3
algorithm
chazelle
can
find
triangulation
planar
straight
line
graph
pslg
minimizes
maximum
edge
length
polynomial
time
edelsbrunner
tan
focs
'91
solved
point
sets
extending
results
pslgs
also
solve
problem
left
open
minimizing
lexicographically
ordered
vector
edge
lengths
least
point
sets
general
position
much
famous
optimal
triangulation
problem
can
find
triangulation
minimizing
sum
edge
lengths
polynomial
time
lot
work
point
sets
less
pslgs
perhaps
extra
complexity
pslg
make
easier
np
completeness
proof
go
given
set
three
dimensional
points
can
find
continuous
piecewise
linear
interpolating
function
surface
formed
projecting
points
onto
xy
plane
triangulating
lifting
triangles
back
3d
minimizes
total
surface
area
polynomial
time
function
maximizes
minimum
dihedral
angle
note
examples
based
regular
octahedron
oriented
two
faces
parallel
xy
plane
vertices
project
regular
hexagon
show
edge
insertion
work
problems
anything
can
prove
optimal
quadrilateralization
point
sets
planar
straight
line
graphs
every
point
set
polygon
planar
straight
line
graph
well
defined
minimum
weight
steiner
triangulation
minimum
weight
well
defined
possibility
adding
steiner
points
might
needed
get
closer
closer
limiting
weight
showed
4
22
97
number
elements
required
small
angle
triangulation
bounded
integral
1
local
feature
size
2
used
prove
optimality
quadtree
triangulation
ruppert's
incremental
delaunay
method
paper
approximating
minimum
weight
steiner
triangulation
showed
quadtree
triangulation
also
approximately
minimizes
total
edge
length
among
steiner
triangulations
point
set
left
open
problem
extending
result
polygons
quadtree
triangulations
total
edge
length
proportional
integral
1
local
feature
size
general
lower
bound
length
triangulations
simplify
results
lead
polygon
extension
also
interest
find
polynomial
time
approximation
minimum
edge
length
quadtrees
may
nonpolynomial
perhaps
done
shortcutting
technique
used
paper
another
open
question
approximate
minimum
weight
paper
exist
convex
polygons
min
weight
triangulation
requires
steiner
points
boundary
steiner
points
ever
required
interior
polygon
one
might
able
compute
optimal
triangulation
dynamic
programming
interesting
since
optimal
steiner
triangulation
result
currently
known
went
circle
packing
method
bern
mitchell
ruppert
4
24
97
nonobtusely
triangulates
polygon
without
cracks
using
triangles
produces
lots
right
triangles
can
modified
produce
acute
triangles
bern
mitchell
ruppert's
method
works
dividing
polygon
kite
shaped
regions
split
two
four
right
triangles
can
say
anything
quality
quadrilateral
mesh
obtained
splitting
kites
sometimes
may
possible
pack
circles
region
bounded
four
tangent
circles
way
remaining
regions
bounded
three
circles
general
position
however
happen
easily
can
tell
whether
circles
special
position
allows
kind
packing
polynomial
time
algorithm
nonobtusely
triangulating
polygons
cracks
arbitrary
planar
straight
line
graphs
lower
bound
omega
n2
required
output
complexity
known
upper
bound
n4
special
case
pslg
triangulation
simple
polygon
polynomial
size
non
obtuse
triangulation
polygons
edelsbrunner
tan
gave
n3
algorithm
conforming
delaunay
triangulation
relaxation
nonobtuse
triangulation
omega
n2
lower
bound
applies
can
problem
solved
n2
complexity
many
tetrahedra
simplices
needed
triangulate
given
polyhedron
polytope
also
closely
related
problem
computing
number
flips
required
convert
one
planar
triangulation
another
worst
case
version
question
3d
maximum
number
tetrahedra
required
function
answered
sleator
tarjan
thurston
algorithmic
question
many
required
particular
polyhedron
remains
open
also
open
many
simplices
required
triangulate
dimensional
hypercube
function
steiner
points
ever
help
reduce
number
tetrahedra
simplices
always
possible
tetrahedralize
without
steiner
points
shape
formed
forming
convex
polyhedron
void
inside
kernel
star
shaped
polyhedron
point
set
r3
one
can
form
flip
graph
different
tetrahedralizations
point
set
partitions
convex
hull
tetrahedra
meeting
face
face
points
vertices
two
tetrahedralizations
connected
edge
differ
flip
two
face
face
tetrahedra
together
form
convex
5
vertex
polyhedron
replace
three
tetrahedron
subdivision
polyhedron
vice
versa
graph
bipartite
can
disconnected
worse
can
isolated
vertices
tetrahedralizations
flips
possible
every
line
3
dimensional
delaunay
triangulation
intersect
tetrahedra
note
added
october
1999
jonathan
shewchuk
found
3d
dt
line
can
stab
omega
n2
tetrahedra
can
efficiently
construct
triangulation
3d
point
set
maximizing
minimum
solid
angle
note
unlike
planar
analog
optimized
delaunay
triangulation
due
fact
three
four
vertices
tetrahedron
fixed
solid
angle
fourth
point
also
fixed
locus
possible
locations
point
non
spherical
can
prove
locus
convex
proof
messy
algebraic
simple
conceptual
proof
given
points
space
delaunay
triangulation
tetrahedra
quickly
can
find
triangulation
chan
snoeyink
yap
algorithm
running
time
log2
quite
match
known
lower
bound
omega
log
practical
problems
mac
meaning
solution
likely
involve
actual
working
system
although
one
might
imagine
theoretical
results
areas
hex
meshing
quality
approaching
producable
hand
region
decomposition
controlled
expert
intelligent
meshing
features
tell
cad
system
put
certain
type
feature
object
information
used
mesher
fast
remeshing
local
change
mesh
smoothing
high
order
elements
curved
boundaries
problem
dependent
black
box
meshing
whole
process
selecting
mesh
type
performing
mesh
generation
applying
numerical
algorithm
etc
automatically
performed
given
specification
problem
solved
decomposition
nice
2
1
2d
regions
generalized
cylinders
meeting
parallel
one
apply
planar
mesh
algorithm
cylinder
cross
section
cut
horizontally
get
good
3d
mesh
david
eppstein
theory
group
dept
information
computer
science
uc
irvine
last
update
20
oct
1999
14
28
04
pdt
