lab assignment f 
lab assignment f 
informatics
42
winter
2012
david
kay
uc
irvine
lab
assignment
assignment
due
end
lab
wednesday
march
14
turn
whatever
completed
date
since
end
quarter
much
leeway
later
submissions
please
read
introductory
instructions
carefully
lab
will
implement
enhancements
theme
park
simulator
nine
parts
assignment
independent
order
expect
anyone
important
many
parts
implement
implement
thorough
correct
partial
correct
implementations
state
clearly
include
will
receive
much
credit
attempts
everything
contain
bugs
unexpected
undocumented
behavior
choice
whether
make
enhancements
cumulatively
implementing
part
top
changes
made
part
independently
starting
base
simulator
part
ample
opportunity
many
parts
make
design
decisions
three
different
areas
precise
functionality
behavior
enhancement
user
interface
design
code
write
thorough
discussion
design
choices
made
area
will
contribute
score
way
group
thought
lot
user
interface
designed
one
parts
describing
clearly
rationale
design
choices
may
get
high
score
group
implemented
features
correctly
followed
straightforward
design
approach
without
much
analysis
description
expect
every
group
actually
implement
features
thorough
consideration
description
design
choices
can
valuable
raw
coding
along
code
submit
short
document
explaining
clearly
parts
assignment
completed
correctly
including
discussion
analysis
mentioned
previous
paragraph
simulator's
home
page
http
www
ics
uci
edu
kay
courses
i42
wildride
using
tkinter
examples
basis
create
setup
preference
panel
simulator
panel
display
default
parameters
allow
user
change
values
include
button
starting
actual
simulation
allow
user
set
values
opening
time
closing
time
park
entrance
park
exit
name
customers
file
name
rides
file
implement
timer
code
simulation
speed
constants
code
consider
adding
preference
pane
good
way
approach
designing
many
guis
start
model
view
distinction
write
separate
function
supply
information
want
gui
supply
first
write
equivalent
function
text
based
prompting
user
needed
information
calculating
text
based
version
works
can
write
gui
version
parameters
return
type
think
gui
components
make
sense
entry
kind
information
making
sense
context
means
minimizing
effort
terms
typing
terms
thinking
user
taking
advantage
conventions
software
follows
make
display
pleasing
legible
using
pack
grid
layout
manager
implement
commands
write
complete
statistics
file
include
summary
statistics
followed
line
statistics
customer
ride
choose
format
complete
concise
easy
scan
using
plan
lab
partner's
plan
new
plan
change
simulator's
tick
length
one
per
minute
one
per
second
re
run
tests
rescaling
data
course
see
whether
results
significantly
different
using
tkinter's
canvas
widget
implement
graphical
display
overview
statistics
printed
customers
attractions
bear
mind
general
principle
every
pixel
contribute
conveying
information
get
carried
away
fancy
decoration
using
tkinter
create
real
time
graphical
display
aspect
simulation
can
viewed
simulation
running
ideas
display
queue
length
ride
selected
rides
plot
map
park
showing
location
customer
plot
map
park
showing
location
ride
perhaps
using
color
indicate
estimated
wait
implement
store
type
rides
mentioned
problem
description
create
gui
customer
file
generator
created
lab
might
integrate
simulator
perhaps
pane
button
setup
panel
allows
user
generate
customer
data
might
also
implement
way
users
describe
random
numbers
generated
according
distribution
randomly
across
whole
space
possible
values
like
generate
ride
data
using
grammar
based
approach
turn
gui
go
right
ahead
change
implementation
one
data
structures
identified
ninth
homework
make
efficient
sure
describe
choices
performance
relative
original
create
gui
progress
bar
shows
far
simulation
come
go
completion
usual
warnings
wisdom
dos
apply
assignment
get
started
early
read
re
read
specifications
partner
worked
yet
quarter
make
sure
joel
knows
paired
use
checkmate
submissions
usual
pair
submit
just
one
solution
usual
grading
criteria
lab
assignments
apply
fill
partner
evaluation
eee
end
day
friday
march
16
get
credit
written
david
kay
jeff
ridenour
winter
2005
modified
winter
2006
winter
2008
winter
2012
