hw3 
project3 
hw3
due
5
4
12
30pm
eee
dropbox
template
based
detection
assignment
will
implement
face
tracker
will
use
face
images
project
video
set
will
explore
different
strategies
template
updating
effect
searching
scale
choice
template
scoring
functions
overview
will
given
skeleton
code
high
level
script
hw3
wrapper
implementing
basic
template
tracker
will
need
fill
referenced
functions
order
code
execute
correctly
questions
involve
significant
additions
basic
wrapper
user
interaction
wrapper
script
requires
user
draw
rectangle
first
frame
using
matlab's
getrect
function
included
rectangle
saved
matlab
matfile
reference
rectangle
will
encoded
4
element
array
x1
y1
x2
y2
capturing
topleft
bottom
right
corner
three
sections
assignment
helper
functions
showbox
10
pts
function
will
display
image
draw
rectangle
fiven
coordinates
suggest
using
imshow
line
matlab
functions
cropim
10
pts
function
takes
image
rectangle
optional
pad
region
crops
rectangular
portion
image
basic
tracker
ssdim
20
pts
function
computes
ssd
sum
squared
difference
score
template
image
possible
locations
nccim
20
pts
function
computes
ncc
normalized
cross
correlation
score
template
image
possible
locations
maxresp
20
pts
function
returns
rectangle
maximum
response
given
array
response
values
hand
hand
completed
functions
complete
comments
also
hand
figures
illustrating
behaviour
various
extensions
basic
tracker
specified
given
strategy
show
three
illustrative
frames
one
frame
sucessful
tracking
frame
tracker
starts
fail
one
frame
tracker
completely
lost
track
also
specify
frame
tracker
lost
track
time
failure
statistic
common
way
evaluate
trackers
note
following
extensions
trivial
require
significantly
work
beyond
implementing
basic
tracker
q1
implement
basic
tracker
requires
modification
wrapper
beyond
pointing
directory
images
ssdim
nccim
will
required
use
use
matlab's
conv2
compute
suggest
using
conv
interface
rather
conv2
h1
h2
interface
latter
buggy
note
can
still
implement
separable
filter
former
simply
calling
twice
two
one
dimensional
arrays
show
results
ssd
ncc
frames
trackers
begin
loose
track
use
time
failure
specify
scoring
function
better
10
pts
q2
tracker
will
slow
template
quite
big
modify
wrapper
use
smaller
images
templates
using
matlab's
imresize
bilinear
interpolation
minimum
size
still
achieve
good
tracking
results
time
failure
algorithms
use
either
ssd
ncc
scoring
criteria
whichever
works
better
show
three
frames
specify
time
failure
10
pts
code
10
pts
writeup
question
q3
multi
scale
tracking
use
either
ssd
ncc
scoring
criteria
whichever
works
better
face
changes
scale
sequence
implement
tracker
searches
scale
changes
resizing
image
template
will
require
write
multiscalessdim
equiv
ncc
multiscalemaxresp
30
pts
code
10
pts
writeup
question
q4
question
will
examine
template
update
strategies
default
wrapper
update
template
use
either
ssd
ncc
scoring
criteria
whichever
works
better
implement
tracker
uses
estimated
patch
previous
frame
template
show
three
frames
specify
time
failure
10
pts
code
10
pts
writeup
implement
tracker
computes
average
running
average
previous
patches
show
three
frames
specify
time
failure
10
pts
code
10
pts
writeup
implement
tracker
computes
weighted
average
previous
patches
using
update
formula
template
new
template
old
1
patch
new
value
yeilds
best
result
show
three
frames
specify
time
failure
10
pts
code
10
pts
writeup
q5
edge
based
tracking
fix
update
strategy
multi
scale
strategy
performs
best
far
will
now
explore
new
scoring
function
based
edge
based
templates
rather
matching
pixel
intensities
will
match
binary
edge
images
implement
new
function
computeedges
takes
input
grayscale
image
returns
binary
edge
image
size
try
ssd
ncc
scoring
using
binary
edge
features
show
three
frames
specify
time
failure
20
pts
code
10
pts
writeup
q6
extra
credit
implement
chamfer
score
using
binary
edge
templates
may
use
matlab's
bwdist
function
compute
distance
transform
edge
function
perform
canny
edge
detection
show
three
frames
specify
time
failure
10
pts
hints
functions
can
implemented
lines
matlab
code
writing
lots
code
probably
simpler
solution
though
will
penalized
long
code
writeup
requires
lots
plots
use
subplot
generate
figures
multiple
plots
