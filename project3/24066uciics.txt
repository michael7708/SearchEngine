data compression section 2 
semantic dependent methods 
data
compression
2
semantic
dependent
methods
semantic
dependent
data
compression
techniques
designed
respond
specific
types
local
redundancy
occurring
certain
applications
one
area
data
compression
great
importance
image
representation
processing
two
major
reasons
first
digitized
images
contain
large
amount
local
redundancy
image
usually
captured
form
array
pixels
whereas
methods
exploit
tendency
pixels
like
color
intensity
cluster
together
may
efficient
second
reason
abundance
research
area
volume
digital
images
usually
require
large
number
bits
many
uses
digital
images
involve
large
collections
images
one
technique
used
compression
image
data
run
length
encoding
common
version
run
length
encoding
sequence
image
elements
along
scan
line
row
mapped
sequence
pairs
represents
intensity
color
length
run
sequence
pixels
equal
intensity
pictures
weather
maps
run
length
encoding
can
save
significant
number
bits
image
element
sequence
gonzalez
wintz
1977
another
data
compression
technique
specific
area
image
data
difference
mapping
image
represented
array
differences
brightness
color
adjacent
pixels
rather
brightness
values
difference
mapping
used
encode
pictures
uranus
transmitted
voyager
2
8
bits
per
pixel
needed
represent
256
brightness
levels
reduced
average
3
bits
per
pixel
difference
values
transmitted
laeser
et
al
1986
spacecraft
applications
image
fidelity
major
concern
due
effect
distance
spacecraft
earth
transmission
reliability
difference
mapping
combined
error
correcting
codes
provide
compression
data
integrity
voyager
project
another
method
takes
advantage
tendency
images
contain
large
areas
constant
intensity
use
quadtree
data
structure
samet
1984
additional
examples
coding
techniques
used
image
processing
can
found
wilkins
wintz
cappellini
wilkins
wintz
1971
cappellini
1985
data
compression
interest
business
data
processing
cost
savings
offers
large
volume
data
manipulated
many
business
applications
types
local
redundancy
present
business
data
files
include
runs
zeros
numeric
fields
sequences
blanks
alphanumeric
fields
fields
present
records
null
others
run
length
encoding
can
used
compress
sequences
zeros
blanks
null
suppression
may
accomplished
use
presence
bits
ruth
kreutzer
1972
another
class
methods
exploits
cases
limited
set
attribute
values
exist
dictionary
substitution
entails
replacing
alphanumeric
representations
information
bank
account
type
insurance
policy
type
sex
month
etc
bits
necessary
represent
limited
number
possible
attribute
values
reghbati
1981
cormack
describes
data
compression
system
designed
use
database
files
cormack
1985
method
part
ibm's
information
management
system
ims
compresses
individual
records
invoked
time
record
stored
database
file
expansion
performed
time
record
retrieved
since
records
may
retrieved
order
context
information
used
compression
routine
limited
single
record
order
routine
applicable
database
must
able
adapt
format
record
fact
database
records
usually
heterogeneous
collections
small
fields
indicates
local
properties
data
important
global
characteristics
compression
routine
ims
hybrid
method
attacks
local
redundancy
using
different
coding
schemes
different
types
fields
identified
field
types
ims
letters
alphabet
numeric
digits
packed
decimal
digit
pairs
blank
compression
begins
default
code
used
encode
first
character
record
subsequent
character
type
previous
character
determines
code
used
example
record
01870
abcd
lmn
encoded
letter
code
default
leading
zero
coded
using
letter
code
1
8
7
0
first
blank
coded
numeric
code
coded
blank
code
next
blank
letter
code
next
blank
blank
code
letter
code
clearly
code
must
define
codeword
every
character
letter
code
assign
shortest
codewords
letters
numeric
code
favor
digits
etc
system
cormack
describes
types
characters
stored
encode
decode
data
structures
character
received
decoder
checks
type
detect
code
table
will
used
transmitting
next
character
compression
algorithm
might
efficient
special
bit
string
used
alert
receiver
change
code
table
particularly
fields
reasonably
long
decoding
rapid
extra
bits
transmission
excessive
cormack
reports
performance
ims
compression
routines
good
least
fifty
sites
currently
using
system
cites
case
database
containing
student
records
whose
size
reduced
42
1
side
effect
number
disk
operations
required
load
database
reduced
32
7
cormack
1985
variety
approaches
data
compression
designed
text
files
mind
include
use
dictionary
either
representing
words
file
file
coded
list
pointers
dictionary
hahn
1974
representing
common
words
word
endings
file
consists
pointers
dictionary
encodings
less
common
words
tropper
1982
hand
selection
common
phrases
wagner
1973
programmed
selection
prefixes
suffixes
fraenkel
et
al
1983
programmed
selection
common
character
pairs
snyderman
hunt
1970
cortesi
1982
also
investigated
discussion
semantic
dependent
data
compression
techniques
represents
limited
sample
large
body
research
methods
others
like
nature
interesting
great
value
intended
domains
obvious
drawback
lies
limited
utility
noted
however
much
efficiency
gained
use
semantic
dependent
techniques
can
achieved
general
methods
albeit
lesser
degree
example
dictionary
approaches
can
implemented
either
huffman
coding
section
3
2
section
4
lempel
ziv
codes
section
5
1
cormack's
database
scheme
special
case
codebook
approach
section
3
2
run
length
encoding
one
effects
lempel
ziv
codes
