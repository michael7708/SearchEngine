prof michael franz uc irvine research projects 
several competitive grants 
uci
ics
franz
research
projects
home
practical
language
based
security
ground
2002
2005
project
nutshell
use
typed
hardware
abstraction
layer
build
system
based
secure
foundation
sponsoring
agency
national
science
foundationdivision
program
trusted
computing
program
program
manager
dr
carl
landwehr
award
number
ccr
tc
0209163role
project
sole
principal
investigatorin
project
designing
comprehensive
security
architecture
uses
language
based
mechanisms
eliminate
errors
due
circumvention
type
safety
intentional
erroneous
additionally
uses
security
policy
mechanisms
contain
malicious
behavior
approach
extends
techniques
previously
applied
mobile
code
based
combination
mechanically
verifying
absence
errors
software
run
using
code
representations
can
checked
errors
rule
errors
first
place
monitoring
executing
software
malicious
activity
prototype
system
consists
multiple
layers
secured
layer
lowest
can
provided
tamper
resistant
hardware
key
solution
provide
typed
hardware
abstraction
layer
thal
enables
construction
type
safe
system
ground
way
tamper
proof
hardware
hence
goal
build
practical
system
can
make
security
guarantees
hardware
just
operating
system
project
itr
virtual
power
wireless
campus
2002
2005
project
nutshell
develop
software
hardware
technologies
extend
battery
life
reduce
cost
handheld
computing
devices
sponsoring
agency
national
science
foundationdivision
program
itr
information
technology
research
program
program
manager
dr
helen
gill
award
number
ccr
0205712role
project
lead
principal
investigatorco
pis
chandra
krintz
rich
wolski
uc
santa
barbara
pai
chou
nikil
dutt
tony
givargis
uc
irvine
handheld
battery
powered
devices
personal
digital
assistants
pda's
web
enabled
mobile
phones
emerging
new
access
points
world's
digital
infrastructure
cost
short
battery
life
factors
holding
back
enormous
potential
worse
yet
cost
devices
might
even
widen
digital
divide
research
addresses
cost
battery
life
issues
simultaneously
thereby
getting
one
step
closer
vision
ubiquitous
computing
embracing
society
specific
focus
digital
university
campus
wireless
internet
coverage
setting
aim
increase
utility
battery
life
decrease
cost
handheld
wireless
computers
enabling
use
relatively
simple
hardware
mobile
devices
research
aims
designing
embedded
hardware
better
conserves
resources
well
creating
software
layer
masks
limited
computational
prowess
handheld
device
seamlessly
coupling
relatively
high
powered
stationary
computational
infrastructure
via
always
wireless
connection
loading
power
intensive
operations
stationary
infrastructure
battery
powered
mobile
device
provided
virtual
power
developing
adaptive
just
time
compiler
technology
minimizing
power
use
mobile
devices
running
mobile
code
adaptive
scheduling
methods
using
results
computational
grid
research
community
depending
algorithm
run
mobile
device
current
distance
nearest
base
station
computation
performed
automatically
partitioned
part
executed
stationary
infrastructure
another
run
mobile
device
hardware
level
developing
orchestrated
resource
management
strategies
enable
designers
correctly
design
implement
highly
resource
constrained
embedded
systems
helping
meet
system
level
constraints
requires
augmenting
today's
functional
design
flows
resource
centric
view
goal
replace
existing
design
methodologies
yet
another
encompassing
methodology
rather
making
cross
cutting
impact
demonstrating
applicability
results
several
driving
examples
different
levels
abstraction
including
system
chip
soc
platforms
memory
architecture
level
operating
system
level
project
comprehensive
context
mobile
code
deployment
2001
2004
project
nutshell
explore
notions
mobile
code
deployment
go
beyond
current
download
everything
one
place
verify
jit
compile
run
approach
example
verify
firewall
use
code
generating
routers
compile
en
route
sponsoring
agency
office
naval
research
usndivision
program
understanding
mobile
code
critical
infrastructure
protection
high
confidence
adaptable
software
cip
sw
research
program
university
research
initiative
uri
program
manager
frank
deckelman
award
number
n00014
01
1
0854role
project
lead
principal
investigatorco
pi
brett
fleisch
uc
riverside
given
acknowledged
importance
existing
emerging
mobile
code
technologies
remarkably
little
attention
far
devoted
management
mobile
programs
far
predominant
model
example
underlies
distribution
java
applets
internet
identifies
dynamically
linkable
parts
mobile
programs
url
string
model
assumes
constituent
parts
make
mobile
program
will
downloaded
single
location
verified
linked
possibly
dynamically
compiled
finally
executed
location
immediately
obvious
model
far
primitive
capture
whole
spectrum
meaningful
distribution
schemes
mobile
code
many
modes
mobile
code
dissemination
deployment
likely
highly
useful
badly
supported
current
distribution
models
architectures
needed
overarching
architecture
can
describe
current
modes
mobile
code
deployment
also
meaningful
future
ones
physical
separation
machines
performing
verification
dynamic
compilation
execution
support
existence
multiple
levels
security
along
code
distribution
pipeline
conducting
methodical
research
implement
prototype
mobile
code
distribution
architecture
first
developing
comprehensive
model
can
capture
meaningful
modes
mobile
code
deployment
including
issues
code
versioning
code
migration
differentiation
code
validation
dynamic
code
translation
instruction
formats
code
execution
potentially
occur
multiple
physically
disjoint
sites
model
provides
taxonomy
mobile
code
distribution
modes
simultaneously
casting
model
actual
extensible
distributed
safe
secure
code
management
architecture
practical
application
architecture
currently
implementing
prototype
system
native
code
generated
firewall
mobile
code
distribution
format
downloaded
computationally
restricted
devices
deployed
theater
via
secure
high
bandwidth
short
range
wireless
link
second
focus
making
greater
range
security
policies
amenable
automatic
verification
creating
source
language
constructs
accompanying
type
systems
representing
properties
directly
source
language
level
policy
can
cast
language
construct
enables
mechanical
checking
code
receiver
side
also
directly
exposes
policies
programmer
rather
hiding
behind
api
thereby
raises
semantic
level
mobile
code
can
reasoned
enhances
programmer
understanding
process
project
new
approaches
mobile
code
reconciling
efficiency
provable
security
1999
2003
project
nutshell
explore
alternate
mobile
code
formats
superior
virtual
machines
currently
used
java
net
sponsoring
agency
defense
advanced
research
projects
agency
darpa
air
force
research
laboratory
air
force
materiel
command
usafdivision
program
oasis
program
program
manager
dr
jay
lala
award
number
f30602
99
1
0536role
project
sole
principal
investigator
current
mobile
code
formats
require
verification
code
recipient
guard
potentially
malicious
actions
incoming
mobile
program
verification
needed
even
mobile
program
originated
safe
language
java
transmission
might
corrupted
adversary
come
alternative
approach
based
family
mobile
code
formats
simply
allow
illegal
programs
represented
first
place
inherently
safe
format
given
bit
sequence
sufficient
length
guaranteed
map
back
legal
program
original
encoding
domain
prototype
java
hence
incoming
program
meets
trivial
well
formedness
criteria
guaranteed
legal
code
verification
necessary
method
enables
tamper
proof
transport
performance
enhancing
annotations
along
program
current
implementation
able
perform
escape
analysis
code
producer's
side
can
encode
results
analysis
manner
falsified
transit
interestingly
adding
annotations
increases
encoding
density
since
reduces
number
valid
choices
need
represented
addition
annotations
comes
almost
space
cost
current
implementation
focuses
java
method
completely
generic
can
adapted
easily
domains
demonstrate
point
able
build
additional
encoder
oberon
less
week
project
last
update
30th
september
2003
franz
uci
edu
