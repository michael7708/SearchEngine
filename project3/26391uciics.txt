notes modelnet 
internet emulator 
answers
modelnet
home
research
software
publications
industry
resume
flashback
introduction
writeup
intended
reminder
learnt
setting
modelnet
never
worked
emulator
many
questions
going
document
written
form
point
view
questions
like
answered
without
much
rtfm
definitive
page
modelnet
please
visit
modelnet
home
page
modelnet
modelnet
software
lets
get
feel
numbers
happen
deployed
next
killer
app
distributed
application
like
say
bittorrent
internet
means
can
deploy
hundreds
instances
application
nodes
behave
distributed
world
modelnet
will
emulate
actual
packet
delays
losses
throughput
packets
flowing
different
instances
app
quite
invaluable
testing
peer
peer
applications
want
get
hard
numbers
work
ok
whole
works
looks
bit
complicated
system
can
easily
broken
explained
parts
two
different
types
physical
nodes
read
pcs
modelnet
uses
1
emulator
nodes
run
freebsd
2
nodes
run
application
processes
linux
nodes
emulator
node
emulates
happens
packets
traverse
internet
virtual
nodes
run
linux
machines
concept
virtual
node
bit
`abstract'
achieved
clever
use
ip
aliasing
route
setup
custom
library
intercepts
ip
packets
look
detail
tie
together
first
run
application
particular
virtual
node
srcip
10
0
ld
preload
usr
lib
libipaddr
application
application
params
get
details
it'll
obvious
command
ip
aliasing
install
modelnet
machine
sets
ip
aliases
corresponding
number
virtual
nodes
physical
host
will
emulate
ip
addresses
10
0
domain
example
physical
host
will
emulate
2
virtual
nodes
expect
see
something
like
following
sbin
ifonfig
output
eth
0
0
inet
addr
10
0
0
1
eth
0
1
inet
addr
10
0
0
2
assuming
nic
card
setup
eth0
route
setup
modelnet
also
sets
routing
table
physical
host
packets
10
0
domain
routed
emulator
node
important
packets
two
virtual
nodes
physical
machine
still
flow
emulator
loopback
interface
read
modelnet
documentation
details
patience
work
exact
route
two
virtual
nodes
physical
node
using
route
information
host
quite
fascinating
two
references
1
2
subnetting
routing
might
aid
custom
library
modelnet
also
installs
custom
library
physical
host
libipaddr
command
line
invoked
appropriately
ip
packets
handled
library
way
specify
library
prefix
following
command
line
ld
preload
usr
lib
libipaddr
btw
library
may
get
installed
different
place
system
say
lib
libipaddr
figure
first
prefix
command
line
also
add
srcip
10
0
substitute
actual
virtual
node
ip
address
custom
library
can
write
appropriate
host
ip
address
packet
example
srcip
specified
10
0
0
1
outgoing
packets
will
src
ip
10
0
0
1
wtf
ld
preload
ld
preload
way
achieving
library
interpositioning
cool
system
hack
used
achieving
among
things
debugging
performance
analysis
basically
system
call
can
intercepted
custom
code
can
run
call
example
one
can
write
custom
library
prints
'hello
world'
whenever
packet
sent
annoying
possible
putting
together
run
executable
particular
virtual
node
therefore
prefix
following
executable
name
srcip
10
0
ld
preload
usr
lib
libipaddr
tell
custom
library
rewrite
ip
packets
srcip
ip
address
packet
sent
normal
destination
destination
another
virtual
node
packet
sent
emulator
default
gateway
10
0
packets
routes
emulator
set
packet
routed
physical
host
destination
virtual
ip
application
listening
packets
remote
virtual
node
gets
packets
remote
app
want
send
back
reply
reverses
src
destination
ip
addresses
reverse
path
followed
local
virtual
node
get
packet
inside
emulator
appropriate
delays
traffic
shaping
done
netperf
neat
tool
can
use
test
modelnet
tutorial
warns
use
ping
test
connectivity
two
virtual
nodes
ping
uses
raw
sockets
packets
intercepted
modelnet
custom
library
applications
can
run
top
modelenet
modelnet
provides
script
called
vnrunhost
runs
application
executable
particular
virtual
node
reason
found
raised
many
questions
looked
script
application
shell
script
many
paramaters
pass
application
etc
turns
vnrunhost
simple
wrapper
maps
virtual
node
ids
virtual
ips
calls
usual
srcip
ld
preload
short
answer
almost
application
can
use
modelnet
unless
plays
around
raw
sockets
specifically
binds
particular
local
ip
address
moreover
presence
modelnet
underneath
totally
transparent
application
can
even
run
`ls'
modelnet
particular
significance
emulator
emulate
internet
first
tool
inet
used
generate
topology
routers
internet
inet
cam
also
spit
`router
coordinates'
places
router
xy
plane
prints
cartesian
corordinates
router
modelnet
directly
interprets
coordinates
assiging
longer
latencies
milliseconds
farther
routers
assigning
bandwidth
different
beast
easiset
solution
specify
lower
bandwith
mark
upper
bandwidth
mark
modelnet
will
assign
random
bandiwth
two
marks
end
node
assumed
router
backbone
can
handle
end
nodes'
bandwidths
clearly
simplification
still
reasonable
assumption
experiments
modelnet
generates
route
model
files
one
can
also
hand
code
different
bandwidths
node
lastly
modelnet
allows
one
specify
packet
loss
rates
link
high
low
mark
can
set
modelnet
will
randomly
assign
packet
loss
rates
within
range
link
troubleshooting
mentioned
netperf
handy
tool
figure
bandwidth
latency
constraints
two
nodes
emulated
correctly
occasionally
strange
problems
crop
stranger
ones
might
use
see
something
familiar
srcip
src
ip
reason
switched
writing
src
ip
instead
srcip
prefix
command
line
guess
instinctively
following
coding
guidelines
netperf
applications
everything
stopped
working
suddenly
took
see
typo
drove
insane
meantime
ipv6
like
customize
linux
kernels
build
source
particular
kernel
build
enabled
ipv6
reason
interacts
strangely
modelnet
building
linux
kernel
disable
ipv6
even
ask
figured
parting
thoughts
said
used
wide
area
network
emulator
installing
modelnet
using
showed
cool
hacks
made
thing
possible
without
even
going
complexity
emulator
code
almost
magical
actually
run
apps
top
see
whole
thing
action
like
seeing
storm
bottle
internet
bunch
local
area
machines
years
research
modelling
internet
topology
made
emulator
possible
questions
feel
free
shoot
email
reply
answer
maybe
add
page
well
links
rapid
modelnet
inet
ip
aliasing
netperf
html
css
508
