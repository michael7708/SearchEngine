otcompiler 
operation tables scheduling presence partial bypassing 
operation
tables
scheduling
presence
partial
bypassing
aviral
shrivastava
eugene
earlie
nikil
dutt
alex
nicolau
codes
isss
2005
proceedings
2005
international
conference
compilers
architectures
synthesis
embedded
systems
hardware
software
codesign
system
synthesis
abstract
register
bypassing
powerful
widely
used
feature
modern
processors
eliminate
certain
data
hazards
although
complete
bypassing
ideal
performance
bypassing
significant
impact
cycle
time
area
power
consumption
processor
due
strict
constraints
performance
cost
power
consumption
embedded
processors
architects
need
evaluate
implement
incomplete
register
bypassing
mechanisms
however
traditional
data
hazard
detection
avoidance
techniques
used
retargetable
schedulers
break
presence
incomplete
bypassing
paper
present
concept
operation
tables
can
used
detect
data
hazards
even
presence
incomplete
bypassing
furthermore
technique
integrates
detection
data
well
resource
hazards
can
easily
employed
compiler
generate
better
schedules
experimental
results
popular
intel
xscale
embedded
processor
platform
show
even
simple
intra
basic
block
scheduling
technique
achieve
upto
20
performance
improvement
fully
optimized
gcc
generated
code
embedded
applications
mibench
suite
center
embedded
computer
systems
department
information
computer
science
university
california
irvine
strategic
cad
labs
intel
corporation
hudson
massachussets
