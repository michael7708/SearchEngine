ics 54 awk 
chapter 17 awk 
uc
irvine
information
computer
science
department
winter
2000
ics
54
awk
brief
notes
chapter
17
awk
selected
references
http
docs
sun
com
ab2
coll
40
5
refman1
ab2pageview
idmatch
awk
1
sun's
solaris
7
man
page
http
www
opengroup
org
onlinepubs
7908799
xcu
awk
html
open
group's
single
unix
specification
version
2
http
www
faqs
org
faqs
computer
lang
awk
faq
awk
faq
frequently
asked
questions
http
www
ora
com
catalog
unixnut3
chapter
ch11
html
awk
programming
language
chapter
11
unix
nutshell
system
edition
3rd
edition
arnold
robbins
http
www
novia
net
phridge
programming
awk
worked
examples
awk
programming
language
aho
kernighan
wienberger
addison
wesley
1998
isbn
020107981x
awk
pattern
scanning
processing
language
named
inventors
alfred
aho
peter
wienberger
brian
kernighan
please
note
coverage
awk
much
simplified
shows
small
part
full
range
capabilities
awk
awk
progfile
fc
'prog'
parameters
filename
awk
program
sequence
pattern
action
commands
form
pattern
action
awk
scans
input
filename
multiple
ones
can
given
hyphen
can
used
filename
standard
input
lines
match
patterns
specified
program
given
either
prog
string
enclosed
single
quotes
file
progfile
filename
present
program
operates
standard
input
pattern
program
corresponding
action
done
lines
input
pattern
matches
progfile
take
pattern
action
statments
commands
progfile
rather
prog
fc
use
character
rather
space
blank
field
separator
line
input
awk
commands
examples
cat
alice
20
4
bob
12
3
carol
18
3
dave
24
4
ed
30
5
awk
'
0
print
'
alice
20
4
ed
30
5
awk
'
print
nr
0
3
2
1
'
1
alice
20
4
4
20
alice
2
bob
12
3
3
12
bob
3
carol
18
3
3
18
carol
4
dave
24
4
4
24
dave
5
ed
30
5
5
30
ed
awk
f2
'
print
2
1
'
0
4
alice
3
bob
1
carol
18
3
4
4
dave
ed
30
5
awk
'begin
print
hi
2
end
print
sum2
'
hi
sum2
104
awk
'
3
4
2
end
print
'
44
ls
awk
'
end
print
dirs
files
'
3
dirs
6
files
awk
'
2
3
8
print
3
end
print
'
carol
18
3
dave
24
4
ed
30
5
12
awk
'
printf
4
1f
0
2
3
'
alice
20
4
5
0
bob
12
3
4
0
carol
18
3
6
0
dave
24
4
6
0
ed
30
5
6
0
awk
'
2
3
end
printf
4d
4
2f
'
104
19
5
47
awk
'begin
step
2
step
print
nr
0
0
'
awk
'
step
print
nr
0
0
'
step
2
2
bob
12
3
4
dave
24
4
explanations
awk
'
0
print
'
print
lines
file
contain
0
awk
'
print
0
3
2
1
'
print
line
preceded
number
colon
followed
3
fields
line
reverse
order
using
separators
note
nr
number
record
built
variable
awk
f2
'
print
2
1
'
using
2
field
separator
print
fields
2
1
order
using
delimit
awk
'begin
print
hi
2
end
print
sum2
'
print
hi
start
sum
field
2
line
print
sum
end
note
use
begin
end
special
patterns
note
also
means
incremented
value
2nd
field
awk
'
3
4
2
end
print
'
print
sum
2nd
field
line
whose
3rd
field
4
note
use
test
equality
ls
awk
'
end
print
dirs
files
'
count
separately
lines
beginning
beginning
note
means
variable's
value
incremented
1
awk
'
2
3
8
print
3
end
print
'
print
line
whose
2nd
field
matches
pattern
3
8
print
sum
3rd
field
lines
awk
'
printf
4
1f
0
2
3
'
append
line
field
2
divided
field
3
awk
'
2
3
end
printf
4d
4
2f
'
total
columns
3
4
print
average
totals
awk
'begin
step
2
step
print
nr
0
0
'
awk
'
step
print
nr
0
0
'
step
2
print
preceded
line
number
every
line
whose
number
multiple
step
one
can
also
follows
awk
'
step
even
awk
'0
nr
step
print
nr
0
'
step
2
awk
programs
awk
program
consists
one
commands
form
pattern
action
action
performed
lines
input
match
pattern
every
input
line
matches
empty
pattern
awk
patterns
empty
action
done
line
begin
action
done
first
line
end
action
done
last
line
regularexpression
action
done
line
matches
regularexpression
patternmatchingexpression
action
done
patternmatchingexpression
true
line
expressions
composed
match
match
operators
relationalexpression
action
done
relationalexpression
true
line
relational
operations
booleanexpression
action
done
booleanexpression
true
line
expressions
combination
pattern
matching
relational
expressions
using
boolean
operations
needed
parentheses
awk
built
variables
filename
name
current
input
file
fs
input
field
separator
regular
expression
default
blank
tab
nf
number
fields
current
record
nr
number
current
record
ofmt
output
format
numbers
default
6g
ofs
output
field
separator
default
blank
ors
output
record
separator
default
newline
rs
input
record
separator
default
newline
special
characters
regular
expressions
awk
combines
following
character
give
special
meaning
see
special
meaning
without
make
revert
literal
meaning
aalert
bell
ctrl
ascii
7
bbackspace
ctrl
ascii
8
fform
feed
ctrl
ascii
12
nnewline
ctrl
ascii
10
rcarriage
return
ctrl
ascii
13
ttab
ctrl
ascii
9
literal
slash
regular
expressions
nnn
octal
value
nnn
match
character
match
start
line
match
end
line
match
character
brackets
example
abca
z7
match
character
except
brackets
example
abca
z7
match
0
repetitions
previous
item
match
1
repetitions
previous
item
match
0
1
repetitions
previous
item
treat
enclosed
text
group
item
separator
items
considered
alternatives
example
ny
la
sf
examples
cat
alice
20
4
bob
12
3
carol
18
3
dave
24
4
ed
30
5
awk
'
ce
print
'
dave
24
4
awk
'
1
nr
4
print
'
alice
20
4
dave
24
4
ed
30
5
awk
'
1
2
0
print
'
dave
24
4
sh
awk
'
1
2
0
print
'
dave
24
4
echo
0
sh
exit
echo
0
tcsh
awk
'
2
3
end
print
'
416
ls
la
awk
'
5
end
print
files
avg
bytes
'
32
files
avg
1376
21
bytes
awk
arithmetic
addition
subtraction
multiplication
division
modulus
remainder
exponentiation
increment
decrement
value
variable
prefix
value
used
postfix
used
assignment
string
concatenation
indicated
blank
simple
juxtaposition
token
boundaries
clear
awk
statements
awk
action
sequence
statments
terminated
semicolon
newline
right
brace
expression
statement
else
statement
expression
statement
statement
expression
nawk
expression
expression
expression
statement
var
array
statement
break
continue
statement
expression
commonly
variable
expression
print
expression
list
expression
printf
format
expression
list
expression
next
skip
remaining
patterns
input
line
exit
expr
skip
rest
input
exit
status
expr
examples
cat
alice
20
4
bob
12
3
carol
18
3
dave
24
4
ed
30
5
awk
'
2
awk
'
2
awk
'end
awk
'end
print
inawk
'end
print
inawk
'end
awk
'end
0
cat
2n
awk
print
0
next
print
0
awk
2n
awk
in2
alice
20
4
bob
12
3
carol
18
3
dave
24
4
awk
'
exit
end
print
exit
nr
0
'
in2
exit
2
bob
12
3
awk
arrays
awk's
array
variables
associative
arrays
array
variable
fact
collection
variables
written
form
avar
index
avar
name
share
index
called
subscript
index
can
integer
string
value
like
user
defined
variables
avar
index
automatically
created
first
used
thus
array
variable
avar
created
extended
simply
used
examples
cat
alice
20
4
bob
12
3
carol
18
3
dave
24
4
ed
30
5
awk
'
myline
1
nr
end
myline
print
myline
'
ed
5
bob
2
alice
1
dave
4
carol
3
awk
'
name
nr
1
end
name
print
name
'
2
bob
3
carol
4
dave
5
ed
1
alice
awk
'
name
nr
1
end
1
awk
functions
awk
generous
set
built
functions
line
form
chapter
11
awk
programming
language
unix
nutshell
system
edition
3rd
edition
arnold
robbins
excellent
group
listing
alphabetic
summary
awk
functions
commands
standard
minimal
awk
include
user
defined
functions
nawk
gawk
extended
versions
awk
provide
user
defined
functions
examples
cat
val
alice
1
2
3
4
bob
2
5
4
1
carol
3
2
4
2
dave
4
3
2
1
ed
5
3
4
2
awk
valsum
awk
val
awk
syntax
error
near
line
4
awk
bailing
near
line
4
cat
valsum
awk
valsum
awk
sum
values
record
input
name
followed
series
values
function
sum
2
i1
1
tmp
1
1
tmp
return
main
routine
2
comments
welcome
javascript
must
enabled
order
page
fully
functional
current
14
february
2000
html
4
01
checked
