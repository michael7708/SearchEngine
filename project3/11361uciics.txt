software uncertainty modeling 
software uncertainty modeling 
next
premises
hypothesis
introduction
previous
introduction
software
uncertainty
modeling
software
large
complex
artifact
produced
primarily
humans
humans
software
development
operational
use
therefore
dominated
human
action
human
judgment
decision
making
inevitably
human
error
outcome
therefore
often
uncertain
unpredictable
along
uncertainty
natural
phenomena
leads
unavoidable
software
uncertainties
software
failures
experienced
otherwise
affect
human
users
similarly
software
defects
can
traced
human
origins
error
introduced
directly
developer
defect
indirectly
human
related
ieee
software
engineering
standard
example
identifies
two
key
sources
software
uncertainty
``poor
knowledge
understanding
problem
domain''
``insufficient
untimely
orientation
user
needs
overall
quality''
iee94
observation
``software
engineering
fraught
uncertainty''
often
used
explain
known
symptoms
software
crisis
including
high
costs
unexpected
slips
development
schedule
well
unpredictable
failures
operational
software
abundance
uncertainty
also
justifies
extensive
measures
taken
researchers
practitioners
attempting
identify
alleviate
software
risks
uncertainties
software
risk
management
long
active
field
research
producing
significant
contributions
cf
boe89
boe91
subject
software
uncertainties
largely
overlooked
notable
exception
software
reliability
models
lit79
models
validation
software
dependability
ls93
omission
particularly
surprising
light
extensive
research
modeling
management
uncertainty
carried
artificial
intelligence
ai
domains
cf
pea88
nea90
hmw95
thus
despite
pervasiveness
human
involvement
related
software
uncertainties
surprisingly
attempts
made
model
uncertainties
explicitly
dissertation
aims
remedy
situation
initially
presenting
maxim
uncertainty
software
engineering
muse
corollary
urging
software
uncertainties
modeled
directly
using
appropriate
uncertainty
modeling
technique
ideally
uncertainty
modeling
technique
include
probabilistic
notions
uncertainty
confidence
provide
multiple
sources
evidence
influence
support
dynamic
updating
uncertainty
values
software
development
dissertation
claim
bayesian
belief
networks
meet
desiderata
therefore
suitable
software
uncertainty
modeling
many
perceived
benefits
modeling
software
uncertainty
including
among
others
uncertainty
permeates
software
development
yet
generally
absent
software
models
model
providing
explicit
representation
software
uncertainties
therefore
accurate
possibly
useful
one
uncertainties
disregarded
search
uncertainty
plays
pivotal
role
overall
software
risk
management
strategy
following
gemmer
gem97
``it
impossible
manage
risk
without
ferreting
elements
uncertainty
uncertainty
present
decisions
face
''
key
risk
minimization
activity
``systematically
search
uncertainty
wherever
may
''
finally
software
uncertainty
modeling
may
help
guide
ultimately
improve
software
process
decisions
based
changes
fluctuations
software
uncertainty
levels
example
project
manager
may
decide
``conclude
testing
''
``instigate
regression
testing
''
else
``shuffle
testing
priorities
''
generally
believe
software
uncertainty
modeling
holds
promise
improved
human
understanding
decision
making
wide
range
development
activities
dissertation
however
focus
specific
benefits
uncertainty
modeling
specific
development
situations
end
describe
several
premises
propose
specific
research
hypothesis
validated
real
software
project
premises
hypothesis
dissertation
described
next
next
premises
hypothesis
introduction
previous
introduction
hadar
ziv
fri
jun
20
16
22
31
pdt
1997
