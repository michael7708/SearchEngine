
ftindexermemabs 
id
ftindexermemabs
5788
2010
10
22
10
09
57z
abehm
copyright
2010
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
04
04
2008
author
alexander
behm
ifndef
ftindexermemabs
define
ftindexermemabs
include
ftindexerabs
include
gramlistsimple
include
util
src
debug
include
template
class
ftindexermemabs
template
struct
ftindexertraits
typedef
ftindexertraits
traitstype
typedef
typename
traitstype
stringcontainer
stringcontainer
typedef
typename
traitstype
invlist
invlist
template
class
ftindexermemabs
public
ftindexerabs
public
typedef
ftindexertraits
traitstype
typedef
typename
traitstype
stringcontainer
stringcontainer
typedef
typename
traitstype
invlist
invlist
protected
typedef
ftindexerabs
superclass
insert
string
index
stringcontainer
given
id
void
insertstringintoindex
const
string
str
unsigned
stringid
void
addstringtoleaf
filtertreenode
node
const
string
const
unsigned
stringid
used
reading
writing
index
file
using
logical
separation
functions
compressed
indexers
can
use
void
saveleavesrec
filtertreenode
node
ofstream
fpout
void
loadleavesrec
filtertreenode
node
ifstream
fpin
public
typedef
typename
superclass
grammap
grammap
ftindexermemabs
stringcontainer
strcontainer
superclass
strcontainer
ftindexermemabs
stringcontainer
strcontainer
gramgen
gramgenerator
const
unsigned
maxstrlen
150
const
unsigned
ftfanout
50
superclass
strcontainer
gramgenerator
maxstrlen
ftfanout
void
buildindex
impl
const
string
datafile
const
unsigned
linestoread
0
void
buildindex
impl
insert
string
stringcontainer
index
void
insertstring
impl
const
string
str
clear
inverted
lists
void
clearinvertedlists
void
integrateupdates
impl
statically
resolved
interfaces
concrete
indexer
must
implement
use
crtp
design
pattern
void
prepare
static
cast
prepare
impl
void
addstringid
filtertreenode
leaf
const
vector
gramcodes
unsigned
stringid
static
cast
addstringid
impl
leaf
gramcodes
stringid
void
saveindex
const
char
indexfilename
static
cast
saveindex
impl
indexfilename
void
loadindex
const
char
indexfilename
static
cast
loadindex
impl
indexfilename
compressionargs
getcompressionargs
return
static
cast
getcompressionargs
impl
string
getname
return
ftindexermemabs
fstream
getinvlistsfile
impl
return
null
void
printfiltertree
filtertreenode
node
null
template
void
ftindexermemabs
integrateupdates
impl
deletedstringids
size
0
unsigned
numstrings
strcontainer
size
unsigned
stringidmapping
new
unsigned
numstrings
unsigned
0
numstrings
stringidmapping
strcontainer
integrateupdates
deletedstringids
stringidmapping
brute
force
updating
scan
inverted
lists
remap
string
ids
vector
leaves
filtertreenode
getsubtreeleaves
filtertreeroot
leaves
unsigned
0
leaves
size
unordered
set
processedinvlists
typename
superclass
grammap
grammap
leaves
grammap
typename
superclass
grammap
iterator
iter
vector
emptyinvlists
iter
grammap
begin
iter
grammap
end
iter
invlist
invlist
iter
second
getarray
uintptr
invlistaddr
uintptr
invlist
account
potentially
combined
lists
several
grams
point
physical
list
processedinvlists
find
invlistaddr
processedinvlists
end
invlist
newinvlist
unsigned
0
invlist
size
stringidmapping
invlist
0xffffffff
newinvlist
push
back
stringidmapping
invlist
newinvlist
size
0
std
swap
invlist
newinvlist
else
emptyinvlists
push
back
iter
first
processedinvlists
insert
invlistaddr
remove
empty
inverted
lists
gram
map
unsigned
0
emptyinvlists
size
delete
grammap
emptyinvlists
grammap
erase
emptyinvlists
delete
stringidmapping
deletedstringids
clear
template
void
ftindexermemabs
insertstring
impl
const
string
str
unsigned
stringid
strcontainer
insertstring
str
insertstringintoindex
str
stringid
template
void
ftindexermemabs
insertstringintoindex
const
string
str
unsigned
stringid
str
empty
return
filtertreenode
homeleaf
findhomeleafnode
str
homeleaf
addstringtoleaf
homeleaf
str
stringid
template
void
ftindexermemabs
addstringtoleaf
filtertreenode
node
const
string
const
unsigned
stringid
add
stringid
distinctstringids
create
gramlistsimple
instance
neccessary
node
distinctstringids
node
distinctstringids
new
gramlistsimple
node
distinctstringids
getarray
push
back
stringid
add
stringid
grammap
leaf
vector
gramcodes
gramgen
decompose
gramcodes
addstringid
node
gramcodes
stringid
template
void
ftindexermemabs
buildindex
impl
const
string
datafile
const
unsigned
linestoread
strcontainer
fillcontainer
datafile
str
linestoread
maxstrlen
buildindex
template
void
ftindexermemabs
buildindex
impl
ifdef
debug
stat
ixstats
dictsize
strcontainer
size
ixstats
gramlen
gramgen
getgramlength
ixstats
maxstrlen
maxstrlen
ixstats
ftfanout
ftfanout
ixstats
partfilters
filtertypes
size
sutil
starttimemeasurement
endif
prepare
compressor
building
index
prepare
build
empty
filtertree
buildhollowtreerecursive
filtertreeroot
0
timer
start
inserting
index
strcontainer
size
unsigned
stringid
0
stringid
strcontainer
size
stringid
string
currentstring
strcontainer
retrievestring
currentstring
stringid
insertstringintoindex
currentstring
stringid
timer
step
timer
stop
ifdef
debug
stat
sutil
stoptimemeasurement
ixstats
buildtime
sutil
gettimemeasurement
endif
template
void
ftindexermemabs
clearinvertedlists
vector
leaves
filtertreenode
getsubtreeleaves
filtertreeroot
leaves
unsigned
0
leaves
size
grammap
grammap
leaves
grammap
typename
grammap
iterator
iter
iter
grammap
begin
iter
grammap
end
iter
delete
iter
second
grammap
clear
template
void
ftindexermemabs
saveleavesrec
filtertreenode
node
ofstream
fpout
unsigned
node
isleaf
node
distinctstringids
invlist
distinctarr
node
distinctstringids
getarray
write
distinct
string
ids
distinctarr
size
fpout
write
const
char
sizeof
unsigned
unsigned
0
distinctarr
size
distinctarr
fpout
write
const
char
sizeof
unsigned
else
0
fpout
write
const
char
sizeof
unsigned
write
gram
map
grammap
grammap
node
grammap
grammap
size
fpout
write
const
char
sizeof
unsigned
typename
grammap
iterator
iter
grammap
begin
iter
grammap
end
iter
iter
first
fpout
write
const
char
sizeof
unsigned
invlist
arr
iter
second
getarray
arr
arr
size
fpout
write
const
char
sizeof
unsigned
unsigned
0
arr
size
arr
fpout
write
const
char
sizeof
unsigned
else
0
fpout
write
const
char
sizeof
unsigned
else
vector
children
node
children
unsigned
0
children
size
saveleavesrec
children
node
fpout
template
void
ftindexermemabs
loadleavesrec
filtertreenode
node
ifstream
fpin
node
isleaf
node
distinctstringids
delete
node
distinctstringids
unsigned
distinctstrings
fpin
read
char
distinctstrings
sizeof
unsigned
distinctstrings
0
node
distinctstringids
new
gramlistsimple
unsigned
0
distinctstrings
unsigned
tmp
fpin
read
char
tmp
sizeof
unsigned
node
distinctstringids
getarray
push
back
tmp
grammap
grammap
node
grammap
unsigned
grammapsize
unsigned
gramcode
unsigned
arrsize
fpin
read
char
grammapsize
sizeof
unsigned
unsigned
0
grammapsize
fpin
read
char
gramcode
sizeof
unsigned
fpin
read
char
arrsize
sizeof
unsigned
arrsize
0
gramlistsimple
gramlist
new
gramlistsimple
grammap
gramcode
gramlist
invlist
newarr
gramlist
getarray
unsigned
0
arrsize
unsigned
tmp
fpin
read
char
tmp
sizeof
unsigned
newarr
push
back
tmp
else
vector
children
node
children
unsigned
0
children
size
loadleavesrec
children
node
fpin
template
void
ftindexermemabs
printfiltertree
filtertreenode
node
node
printfiltertree
filtertreeroot
return
node
isleaf
grammap
grammap
node
grammap
typename
grammap
iterator
iter
grammap
begin
iter
grammap
end
iter
invlist
arr
iter
second
getarray
cout
iter
first
arr
unsigned
0
arr
size
cout
arr
cout
endl
else
vector
children
node
children
unsigned
0
children
size
cout
children
first
endl
printfiltertree
children
second
endif
