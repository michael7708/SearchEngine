deliverable 3 design 
architecture design 
informatics
117
project
software
system
design
winter
quarter
2009
architecture
module
specifications
due
date
february
12
2009
overview
develop
design
fully
satisfies
requirements
application
deliverable
consists
two
elements
design
specification
consisting
architecture
module
specifications
integration
test
plan
document
must
specify
correspondence
requirements
elements
design
may
show
correspondence
way
feel
appropriate
make
notations
throughout
document
using
table
cross
references
paragraph
numbers
developing
software
design
will
undoubtedly
reveal
inadequacies
previous
documents
please
note
problems
done
resolve
forget
include
meeting
minutes
performance
appraisals
document
refer
syllabus
complete
check
list
turned
make
sure
post
design
documents
meeting
minutes
team
web
page
deliverable
objectives
quality
keep
mind
key
objectives
design
document
include
develop
coherent
representation
software
will
satisfy
requirements
identify
inadequacies
requirements
decompose
system
sub
systems
provide
related
sets
services
establish
framework
sub
system
control
communication
specify
modules
can
assigned
coding
responsibilities
document
design
decisions
rationale
provide
reference
tool
readable
developers
testers
maintainers
provide
basis
integration
testing
addition
keep
mind
design
document
exhibit
following
qualities
complete
everything
essential
described
unambiguous
expressed
well
defined
notation
consistent
mismatched
interfaces
modifiable
document
will
change
just
like
others
confirmable
testable
can
tell
met
design
document
contents
introduction
expand
previous
introduction
discuss
specific
approaches
design
system
organization
document
description
essentially
just
updated
version
introduction
included
previous
deliverable
understanding
expand
understanding
section
previous
document
include
brief
descriptions
actions
took
understand
technology
studied
phase
make
changes
section
add
text
describing
change
necessary
accurately
reflects
new
understanding
section
need
different
understanding
changed
project
plan
will
iterative
expansion
previous
submission
update
project
plan
show
accomplished
far
reassess
project
risks
necessary
expand
task
network
work
breakdown
structure
include
effort
expended
complete
task
necessary
based
work
done
revise
estimates
much
team
can
accomplish
deliver
make
changes
add
text
describing
change
necessary
will
improve
ability
team
accomplish
work
proposed
design
specification
architecture
overview
architectural
style
style
architecture
adopt
provide
reference
defining
document
system
architecture
overview
place
one
great
diagram
shows
system
built
might
want
use
one
diagram
show
different
abstractions
design
data
flow
view
layers
abstraction
view
object
view
os
process
view
multiple
diagrams
fine
subsystem
narrative
subsystem
means
major
limitations
current
design
modules
objects
specification
list
modules
objects
within
system
module
object
provide
module
specification
name
definition
purpose
narrative
comment
works
interfaces
apis
visibility
data
state
keep
access
access
module
object
data
requires
modules
module
depend
upon
constraints
constraints
object
module
must
start
first
must
registered
must
anything
else
necessary
fully
describe
module
diagrams
consider
using
providing
specification
uml
class
diagrams
event
sequence
trace
charts
state
transition
diagrams
package
diagrams
integration
test
plan
test
plan
capable
demonstrating
design
meets
requirements
test
cases
cover
module
object
interaction
specified
test
cases
can
grouped
design
entity
apply
otherwise
cross
reference
listing
sort
provided
test
test
id
purpose
test
item
tested
input
specification
output
specification
expected
results
test
oracle
mechanism
test
environmental
needs
special
test
procedures
initial
demonstration
plan
will
demonstrate
tracking
control
mechanisms
configuration
management
will
modules
objects
managed
svn
cvs
file
structure
sub
directories
makefiles
etc
persistent
data
going
live
requirements
cross
reference
modules
objects
satisfy
requirements
table
mapping
requirement
module
object
modifications
prior
documents
requirements
requirements
changed
make
explicit
highlight
requirement
changed
added
deleted
customer
developer
etc
requirements
changed
state
glossary
define
irregular
terms
used
specifications
portion
document
may
written
extension
glossary
submitted
requirements
may
separate
document
defines
terms
local
design
activity
additional
documentation
section
reserved
additional
documentation
developed
phase
project
specifically
course
developing
architecture
understanding
various
technologies
involved
project
changed
discovered
items
documented
important
include
information
also
list
major
background
sources
used
phase
plan
use
remainder
project
includes
references
similar
systems
procedures
design
presentations
see
syllabus
dates
team
prepare
15
minute
presentation
presentation
include
following
context
project
brief
current
state
project
plan
comparison
previous
version
plan
highlights
design
including
overview
architecture
comprise
bulk
presentation
one
great
diagram
one
key
module
object
specifications
needed
modifications
requirements
arose
result
design
process
overview
integration
test
plan
