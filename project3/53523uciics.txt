
utilities cc 
id
utilities
cc
5149
2010
03
24
23
37
18z
abehm
copyright
2010
regents
university
california
redistribution
file
permitted
terms
bsd
license
author
jiaheng
lu
date
05
11
2007
include
utilities
include
include
include
include
include
include
include
include
include
include
include
include
include
include
include
include
heap
include
showutil
using
namespace
std
typedef
set
unsignedset
unsigned
gettotallogsize
const
vector
lists
unsigned
totalsize
0
unsigned
numberoflists
lists
size
unsigned
0
numberoflists
totalsize
unsigned
ceil
log
lists
size
return
totalsize
end
gettotalsize
unsigned
gettotalsize
const
vector
lists
unsigned
totalsize
0
unsigned
numberoflists
lists
size
unsigned
0
numberoflists
totalsize
lists
size
cout
size
result1
const
vector
result2
result1
size
result2
size
return
false
unsignedset
s1
result1
begin
result1
end
unsignedset
s2
result2
begin
result2
end
unsignedset
iterator
ite1
s1
begin
unsignedset
iterator
ite2
s2
begin
ite1
s1
end
ite1
ite2
return
false
ite1
ite2
end
return
true
end
testconsistent
bool
binarysearch
array
unsigned
value
unsigned
start
unsigned
end
int
low
start
int
high
end
1
int
middle
low
high
1
2
bool
found
false
value
middle
return
true
else
value
middle
high
middle
1
else
low
middle
1
middle
low
high
1
2
low
arrays
unsigned
threshold
unsigned
longlistssize
const
vector
partialresults
const
vector
results
cout
longlists
vector
shortlists
const
unsigned
threshold
const
vector
originallists
unsigned
sortedindex
unsigned
longlistssize
unsigned
originallistsize
originallists
size
unsigned
0
ipush
back
originallists
sortedindex
originallistsize
1
else
shortlists
push
back
originallists
sortedindex
originallistsize
1
end
end
splittwosets
void
splittwosizesets
vector
longlists
vector
shortlists
const
unsigned
threshold
const
vector
originallists
unsigned
sortedindex
unsigned
longlistssize
unsigned
originallistsize
originallists
size
unsigned
0
ipush
back
originallists
sortedindex
originallistsize
1
else
shortlists
push
back
originallists
sortedindex
originallistsize
1
end
end
splittwosets
void
splittwosetswithduplicates
vector
longlists
vector
shortlists
vector
longlistsweights
vector
shortlistsweights
const
vector
originallists
const
vector
originalweights
const
unsigned
shortlistssize
unsigned
originallistsize
originallists
size
unsigned
0
i0
longlists
push
back
originallists
longlistsweights
push
back
listsizeforlonger
longlists
vector
shortlists
const
unsigned
threshold
const
vector
originallists
unsigned
sortedindex
unsigned
originallistsize
originallists
size
unsigned
0
ipush
back
originallists
sortedindex
originallistsize
1
else
shortlists
push
back
originallists
sortedindex
originallistsize
1
end
end
separatetwosets
use
binray
search
search
value
search
set
lists
change
count
void
binarysearchset
unsigned
count
vector
lists
unsigned
data
vector
iterator
ite
lists
begin
ite
lists
end
array
ite
binarysearch
data
0
size
count
ite
end
end
binarysearchset
void
sortbysize
const
vector
alllists
unsigned
sortedindex
vector
const
iterator
ite
alllists
begin
unsigned
sizeheap
alllists
size
unsigned
indexheap
alllists
size
unsigned
index
0
unsigned
heapsize
0
ite
alllists
end
unsigned
sizeoflist
ite
heapinsert
sizeoflist
index
sizeheap
indexheap
heapsize
ite
end
index
0
heapsize
0
sortedindex
index
indexheap
0
heapdelete
sizeheap
indexheap
heapsize
end
end
sortinvertedlist
sort
inverted
list
increasing
order
according
sizes
heapsort
function
used
mergeopt
void
sortbysizeoflists
const
vector
alllists
unsigned
sortedindex
vector
const
iterator
ite
alllists
begin
unsigned
sizeheap
alllists
size
unsigned
indexheap
alllists
size
unsigned
index
0
unsigned
heapsize
0
ite
alllists
end
unsigned
sizeoflist
ite
size
heapinsert
sizeoflist
index
sizeheap
indexheap
heapsize
ite
end
index
0
heapsize
0
sortedindex
index
indexheap
0
heapdelete
sizeheap
indexheap
heapsize
end
end
sortinvertedlist
insert
items
heap
function
used
binarysearchmerger
void
inserttoheaps
unsigned
dataheap
unsigned
indexheap
unsigned
heapsize
const
vector
array
lists
unsigned
pointersindexlist
unsigned
vectorindexcontainer
unsigned
containersize
unsigned
0
iat
position
heapinsert
newdata
index
dataheap
indexheap
heapsize
end
end
inserttoheaps
fucntion
skips
nodes
mergebinaryseach
algorithm
void
skipnodes
const
vector
lists
unsigned
vectorindexcontainer
unsigned
containersize
unsigned
pivotdata
unsigned
pointersindexlist
unsigned
0
ibinarysearch
pivotdata
oldposition
cout
new
data
lists
pointersindexlist
old
data
pivotdata
pointersindexlist
pivotdata
end
end
skipnodes
function
can
deleted
final
release
void
countskipnodes
const
vector
lists
unsigned
vectorindexcontainer
unsigned
containersize
unsigned
pivotdata
unsigned
pointersindexlist
unsigned
elementscanned
unsigned
0
ibinarysearch
pivotdata
oldposition
elementscanned
unsigned
ceil
0
01
log
lists
size
cout
new
data
lists
pointersindexlist
old
data
pivotdata
pointersindexlist
pivotdata
end
end
skipnodes
unsigned
max
unsigned
s1
unsigned
s2
s1
s2
return
s1
else
return
s2
end
max
function
selects
shorest
string
computing
thresholds
filters
unsigned
shoreststringsize
const
vector
strings
unsigned
minsize
0
unsigned
0
arrays
const
unsigned
threshold
vector
results
vector
counters
const
unsigned
maxunsigned
0x10000000
2
const
unsigned
maxunsigned
0xffffffff
unsigned
numberofinvertedlist
arrays
size
threshold
numberofinvertedlist
return
answer
unsigned
pointersindex
numberofinvertedlist
unsigned
0
threshold
got
result
counters
push
back
containersize
results
push
back
mindata
cout
get
result
rule
id
mindata
arrays
const
vector
weights
const
unsigned
threshold
vector
results
vector
counters
const
unsigned
maxunsigned
0xffffffff
unsigned
numberofinvertedlist
arrays
size
unsigned
pointersindex
numberofinvertedlist
unsigned
0
threshold
got
result
counters
push
back
containerweight
results
push
back
mindata
cout
get
result
rule
id
mindata
pivot
break
vectorindexcontainer
containersize
indexheap
0
containerweight
weights
indexheap
0
heapdelete
dataheap
indexheap
sizeofheaps
end
containerweight
pivot
printarray
vectorindexcontainer
containersize
cout
pivot
node
dataheap
0
endl
skipnodes
arrays
vectorindexcontainer
containersize
dataheap
0
pointersindex
cout
arrays
vector
newarrays
vector
newweights
unsigned
sizeofinvertedlists
arrays
size
unsigned
sortedindex
sizeofinvertedlists
sortbysizeoflists
arrays
sortedindex
increasing
order
array
currentarray
arrays
sortedindex
0
unsigned
currentcount
1
unsigned
1
iarray
arrays
sortedindex
iarray
currentarray
currentcount
else
newarrays
push
back
currentarray
newweights
push
back
currentcount
currentcount
1
currentarray
iarray
end
end
newarrays
push
back
currentarray
newweights
push
back
currentcount
end
detectduplicatelists
bugfix
alex
void
detectduplicatelists
const
vector
arrays
vector
newarrays
vector
newweights
unsigned
sizeofinvertedlists
arrays
size
unsigned
sortedindex
sizeofinvertedlists
sortbysizeoflists
arrays
sortedindex
need
take
care
unequal
lists
size
exhaustive
search
within
list
length
group
set
arraysadded
unsigned
0
currentarray
arrays
sortedindex
unsigned
arraddr
unsigned
currentarray
unsigned
currentcount
1
array
added
previously
arraysadded
find
arraddr
arraysadded
end
search
arrays
length
identical
pointers
unsigned
1
sizeofinvertedlists
array
iarray
arrays
sortedindex
iarray
size
currentarray
size
break
iarray
currentarray
currentcount
add
array
newarrays
push
back
currentarray
newweights
push
back
currentcount
arraysadded
insert
arraddr
alex
debug
unsigned
weightsum
0
unsigned
0
newarrays
size
array
tmp
newarrays
bool
contains
false
unsigned
0
tmp
size
tmp
49
contains
true
break
contains
cout
list
unsigned
newarrays
newweights
endl
weightsum
newweights
cout
weightsum
weightsum
endl
