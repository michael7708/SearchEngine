ics h22 winter 2006 lab 3 the company payroll 
lab 3 
lab3
company
payroll
due
feb
3
friday
11
59pm
zip
java
file
readme
txt
file
necessary
submit
zip
eee
folder
lab3
introduction
project
will
write
program
handles
relatively
simple
payroll
processing
tasks
small
business
working
project
will
gain
experience
inheritance
polymorphism
use
generic
arraylist
class
java
library
enumerations
using
console
well
files
read
input
write
formatted
output
skills
will
relied
upon
throughout
quarter
future
projects
important
start
early
leave
plenty
time
get
questions
answered
finish
project
lab
need
read
section
2
5
2
chapter
2
deals
generics
program
write
program
allows
user
manage
payroll
small
company
first
part
assignment
however
will
test
program
will
presents
console
mode
user
interface
will
allow
user
enter
remove
individual
employees
list
weekly
payroll
second
part
assignment
one
will
test
program
will
take
user's
input
file
instead
console
payroll
data
consists
list
employees
three
kinds
employees
hourly
employees
salaried
employees
contract
employees
kind
employee
different
characteristics
described
bit
later
write
end
week
program
will
used
generate
display
nicely
formatted
paychecks
employees
company
first
version
program
graded
first
version
program
provide
console
interface
handles
following
commands
user
add
employee
asks
user
specify
type
employee
hourly
salaried
contract
information
describes
employee
note
different
kinds
employees
described
different
information
see
employee
name
already
exists
list
warn
user
add
new
employee
better
ask
new
person's
middle
name
employee
matching
name
exists
newly
described
employee
added
end
employee
list
remove
employee
asks
user
specify
name
employee
remove
goes
list
employees
removes
employee
matching
name
employee
exists
user
warned
list
employees
stays
unchanged
show
employees
prints
entire
list
employees
console
one
employee
per
line
relevant
information
employee
shown
name
type
employee
wage
salary
weekly
payroll
employee
list
employees
including
paid
hour
program
asks
user
specify
number
hours
worked
week
necessary
include
paycheck
indication
number
hours
worked
employees
regardless
whether
pay
determined
number
hours
worked
asking
employees
program
prints
paychecks
employee
console
one
another
finally
program
prints
total
gross
pay
total
tax
employees
quit
exits
program
message
printed
console
regarding
whether
command
executed
successfully
necessary
make
friendly
user
interface
message
employee
successfully
added
file
successfully
read
provide
lot
code
helps
process
console
input
see
link
zip
file
almost
code
really
need
write
get
initial
version
program
run
will
reusable
second
version
described
second
version
program
will
graded
second
version
program
will
handle
user's
commands
console
instead
one
will
call
program
command
like
java
company
inputfile
txt
program
take
input
inputfile
txt
file
process
top
bottom
follows
file
can
specify
exactly
instructions
except
quit
user
can
specify
case
first
line
input
file
specifies
command
name
subsequent
lines
specify
data
user
input
command
number
lines
differs
different
commands
example
inputfile
txt
can
include
block
lines
follows
addemployee
employee
name
string
can
include
spaces
employee
type
string
employee
hourlypayment
hourly
employee
contract
emplyee
annualpayment
salaried
employee
dollars
program
seeing
line
inputfile
txt
file
trigger
procedure
add
employee
command
treats
data
next
three
lines
way
command
file
can
also
specify
employee
removed
list
includes
following
block
two
lines
removeemployee
name
employee
removed
program
encountering
group
lines
inputfile
txt
process
way
processed
remove
employee
command
also
program
can
group
lines
follows
weeklypayroll
name
1st
employee
hour
worked
1st
employee
name
nth
employee
hour
worked
nth
employee
program
handle
way
first
version
handled
weekly
payroll
command
line
weeklypayroll
string
assumed
followed
pairs
lines
names
hours
current
employees
list
words
current
number
employees
list
program
can
assume
pairs
name
hours
lines
follow
note
however
order
employees
listed
assumed
order
application
stores
employees
might
convenient
therefore
create
temporary
array
storing
name
hour
pairs
execute
weekly
payroll
procedure
using
data
temporary
array
finally
inputfile
txt
following
line
showemployees
program
handle
way
first
version
handled
show
employees
command
example
file
given
inputfile
txt
simplicity
can
assume
input
file
well
written
need
worry
exception
handling
reading
file
contents
however
it'd
probably
smart
thing
choose
deal
perhaps
certain
kinds
errors
either
console
input
file
input
anyway
just
might
simplify
debugging
code
main
method
second
version
program
one
will
grade
defined
class
called
company
provided
zip
file
linked
modify
company
class
result
able
compile
execute
program
amy
input
file
inputfile
txt
choose
following
commands
command
prompt
javac
classes
java
java
company
inputfile
txt
kinds
employees
three
kinds
employees
program
will
required
process
hourly
employees
salaried
employees
contract
employees
purposes
differ
following
ways
hourly
employees
paid
hourly
wage
9
50
per
hour
paid
wage
first
40
hours
worked
week
hourly
employee
works
40
hours
per
week
hours
40
paid
time
half
1
5
times
hourly
wage
example
10
00
per
hour
hourly
employee
works
60
hours
week
paid
10
00
per
hour
first
40
hours
plus
15
00
per
hour
20
additional
hours
total
700
00
salaried
employees
paid
fixed
yearly
salary
75
000
per
year
regardless
number
hours
work
week
paid
1
52
yearly
salary
example
salaried
employee
annual
salary
52
000
will
paid
1
000
per
week
contract
employees
paid
hourly
rate
30
00
per
hour
differ
hourly
employees
ineligible
overtime
pay
hours
paid
rate
regardless
many
hours
work
week
one
way
employees
differ
taxed
hourly
salaried
employees
assessed
20
income
tax
contract
employees
assessed
tax
assumption
somewhat
like
real
world
contract
employees
full
fledged
employees
company
required
handle
taxes
starting
point
provided
quite
bit
code
get
started
program
including
parts
provided
entirety
code
available
zip
archive
sure
look
code
read
comments
get
started
wind
duplicate
work
already
done
general
required
build
provided
rather
starting
scratch
gives
advantage
tedious
portions
done
can
focus
energies
portions
learn
giving
us
advantage
assuming
programs
built
common
base
using
inheritance
polymorphism
program
one
important
programming
habits
can
adopt
already
avoidance
duplicate
code
duplicate
code
mean
code
job
reason
one
place
program
duplicate
code
wasteful
also
recipe
disaster
suppose
developing
program
copy
paste
code
ten
different
methods
scattered
throughout
program
now
suppose
find
bug
one
ten
methods
bug
happens
part
code
copied
fortunate
remember
copied
code
elsewhere
however
doubtful
remember
copied
code
also
precisely
many
times
lucky
find
fix
code
nine
ten
places
likely
miss
least
one
months
find
bug
tenth
place
time
understanding
bug
fix
will
long
since
forgotten
now
imagine
scenario
played
development
large
program
surprisingly
one
can
reasonably
expect
program
will
never
free
bugs
moral
story
whenever
feel
urge
copy
paste
chunk
code
stop
think
better
way
solve
problem
want
copy
chunk
code
two
methods
within
class
put
code
third
method
instead
call
third
method
two
want
copy
chunk
code
one
class
think
creating
third
class
house
duplicate
code
substantial
portions
two
classes
similar
might
time
think
inheritance
third
class
superclass
two
will
face
problem
working
program
face
virtually
programs
lines
one
time
will
face
problem
development
classes
represent
kind
employee
three
kinds
employees
program
hourly
salaried
contract
similarities
differences
similarities
employee
name
paycheck
can
calculated
employee
though
will
calculated
differently
kind
employee
employee
can
turned
string
purposes
printing
employee's
information
console
employee
will
turned
string
will
depend
kind
employee
presence
similarities
argues
strongly
superclass
called
employee
subclasses
specific
kind
employee
hourly
salaried
contract
provided
employee
class
permitted
modify
need
write
three
subclasses
good
news
subclass
need
write
code
distinguishes
particular
kind
employee
others
code
describes
similarities
employees
will
appear
employee
class
much
gained
using
approach
just
obvious
benefit
code
reuse
additionally
will
simplify
portions
user
interface
rather
maintaining
separate
data
structure
kind
employee
one
hourly
employees
one
salaried
employees
one
contract
employees
can
just
one
instead
stores
employees
regardless
type
thanks
polymorphism
print
employee's
information
ask
paycheck
calculated
employee
right
thing
will
automatically
happen
depending
kind
employee
inheritance
polymorphism
important
techniques
use
situation
like
one
required
define
separate
class
kind
employee
relate
together
extending
provided
employee
class
make
use
polymorphism
whenever
makes
sense
using
generic
arraylist
class
one
key
improvements
latest
version
java
inclusion
generic
classes
makes
class
generic
ability
deal
different
kinds
objects
different
parts
program
case
deal
one
kind
object
specifically
example
arraylist
class
generic
using
generic
version
arraylist
can
specify
type
objects
arraylists
will
allowed
hold
example
want
create
arraylist
strings
write
following
code
arraylist
string
new
arraylist
string
two
important
benefits
arise
can
specifically
tell
java
want
arraylist
string
first
whenever
attempt
add
object
arraylist
string
compiler
will
give
error
message
try
add
one
string
words
arraylist
string
guaranteed
strings
second
since
arraylist
string
will
ever
strings
java
will
happily
assume
object
pull
back
arraylist
string
used
arraylist
previous
version
java
might
remember
needing
use
casting
whenever
accessed
individual
objects
list
longer
necessary
fact
frowned
upon
situations
quick
example
following
one
call
add
will
add
string
end
list
add
mary
add
add
happy
string
int
0
size
retrieve
th
element
list
append
get
will
print
maryishappy
console
system
println
arraylist
methods
used
solution
project
add
adds
object
end
list
get
returns
object
list
index
indices
consecutive
first
object
index
0
just
like
array
remove
removes
object
list
index
subsequent
objects
slid
back
one
cell
fill
empty
space
size
returns
number
objects
list
may
wish
use
others
though
recommend
looking
java
library
documentation
information
best
become
acquainted
library
documentation
soon
can
need
often
move
forward
course
especially
move
later
courses
console
file
input
using
scanner
class
java
library
includes
class
called
scanner
makes
reading
input
console
sources
snap
scanner
wraps
around
input
source
console
input
file
can
read
either
one
line
one
value
time
input
source
program
want
read
input
console
set
scanner
write
line
code
like
one
creates
new
scanner
wrapped
around
console
system
scanner
new
scanner
system
noted
already
provided
line
code
payroll
class
created
scanner
many
methods
can
call
read
input
different
types
used
two
solution
nextline
reads
next
line
input
returns
string
nextint
reads
next
word
input
next
space
returns
int
example
fragment
java
code
following
one
reads
two
integers
one
per
line
console
prints
sum
system
print
enter
first
integer
read
next
integer
console
int
i1
nextint
since
nextint
reads
next
space
end
line
adding
call
nextline
call
nextint
good
idea
consume
leftover
input
line
nextline
system
print
enter
second
integer
int
i2
nextint
nextline
int
sum
i1
i2
system
println
sum
sum
example
always
good
idea
prompt
user
explain
kind
input
interested
project
will
deal
exceptions
nextint
throws
input
mismatchexception
tries
consume
input
number
exception
caught
code
compiler
give
error
saying
exception
caught
however
run
program
user
types
string
instead
program
will
end
unexpectedly
require
avoid
unexpectedness
handle
try
catch
somewhere
file
input
will
similiar
console
input
difference
lies
initialize
scanner
console
input
initializes
scanner
class
using
system
parameter
however
file
input
use
file
type
parameter
class
file
abstract
representation
file
directory
pathnames
one
constructors
file
class
follows
file
string
pathname
can
create
file
object
using
following
statement
example
file
inputfile
new
file
input
txt
create
new
file
object
opens
file
working
directory
java
program
runs
named
input
txt
can
use
input
scanner
read
new
scanner
inputfile
statement
initializes
scanner
just
scanner
object
created
console
input
can
combine
two
statements
together
follows
savingcalculatetester
scanner
read
new
scanner
new
file
input
txt
formatted
console
output
program
just
printing
unformatted
text
console
also
need
print
integer
values
right
justify
monetary
amounts
example
want
print
paycheck
console
need
first
format
looks
nice
example
might
print
paycheck
way
paycheck
john
doe
hourly
26
50
hr
hours
worked
40
gross
pay
1
060
00
tax
212
00
net
pay
848
00
clean
way
first
teach
paycheck
objects
format
strings
print
strings
console
using
system
print
system
println
java
set
make
relatively
easy
first
must
write
following
method
paycheck
class
public
string
tostring
course
comment
need
replaced
code
builds
returns
string
representation
paycheck
code
place
paycheck
object
can
print
directly
console
using
system
println
assume
created
appropriately
paycheck
whenever
try
print
object
console
java
automatically
calls
tostring
prints
result
console
system
println
need
able
write
appropriate
code
tostring
method
suppose
instead
paycheck
want
print
identifying
information
person
formatted
nicely
string
format
method
helps
knows
take
data
various
types
format
according
specifications
return
string
first
parameter
pass
called
format
string
used
tell
like
data
formatted
placeholders
data
subsequent
parameters
specify
data
will
replace
placeholders
example
hypothetical
person
class
public
string
tostring
string
string
format
10s
name
name
string
format
10s
title
title
string
format
10s
4d
height
height
string
format
10s
4d
weight
weight
return
code
might
generate
following
output
hypothetical
person
name
john
doe
title
ceo
height
71
weight
190
format
string
occurrence
character
indicates
placeholder
piece
data
followed
letter
string
integer
optional
number
front
indicates
justification
positive
number
means
right
justify
negative
number
means
left
justify
example
code
can
see
placeholder
10s
means
print
string
left
justified
within
10
characters
extra
space
added
fills
least
10
characters
placeholder
4d
means
print
integer
right
justified
within
4
characters
extra
space
added
needed
placeholder
simply
means
print
string
extra
spaces
added
format
string
two
placeholders
example
code
need
supply
two
parameters
supply
data
example
line
string
format
10s
4d
height
height
tells
method
left
justify
text
height
within
10
characters
follow
colon
space
follow
integer
height
right
justified
within
4
characters
see
end
format
string
says
insert
newline
character
subsequent
characters
will
appear
next
line
string
printed
great
tool
can
use
format
output
make
look
nice
expect
use
want
make
paychecks
look
just
like
example
paycheck
showed
feel
free
okay
required
justify
output
can
read
easily
good
rule
thumb
right
justify
numbers
can
easily
read
top
bottom
provided
method
currencyformat
format
can
use
format
integer
number
cents
dollars
cents
form
dollar
sign
decimal
point
writing
tostring
methods
employee
subclasses
paycheck
enumerations
may
encountered
situation
prior
java
course
needed
set
constants
related
one
another
days
week
possible
solved
problem
declaring
set
integer
constants
unique
values
public
static
final
int
sunday
1
public
static
final
int
monday
2
public
static
final
int
tuesday
3
public
static
final
int
wednesday
4
public
static
final
int
thursday
5
public
static
final
int
friday
6
public
static
final
int
saturday
7
two
problems
approach
one
numeric
values
often
actual
relevance
program
fact
need
unique
good
reason
sunday
0
4
000
instead
another
one
lot
important
time
want
declare
variable
parameter
store
day
week
value
declare
type
int
counterintuitive
also
opens
real
possibility
variable
might
eventually
wind
value
one
range
1
7
grind
program
halt
lot
tedious
error
checking
code
throughout
better
way
solve
problem
available
java
5
0
use
enumeration
simplest
form
enumeration
can
thought
precisely
solution
problem
way
expressing
set
named
constants
related
one
another
rather
declaring
separate
constants
existing
data
type
int
can
put
together
enumeration
become
new
type
data
example
public
enum
dayofweek
sunday
monday
tuesday
wednesday
thursday
friday
saturday
think
numeric
values
necessary
reason
problem
can
included
wish
fact
values
even
necessarily
integers
used
differentiate
constants
included
declared
enumeration
becomes
possible
variables
type
dayofweek
will
allowed
one
seven
constant
values
listed
null
example
one
constants
can
directly
assigned
dayofweek
dayofweek
dayofweek
sunday
dayofweek
can
return
value
method
dayofweek
d2
getcurrentdayofweek
can
use
dayofweek
constants
comparisons
d2
dayofweek
monday
system
println
just
another
manic
monday
can
even
use
switch
statements
important
note
used
switch
statement
supposed
qualify
names
constants
putting
dayofweek
front
go
figure
switch
d2
case
monday
system
println
just
another
manic
monday
break
case
friday
system
println
everybody's
workin'
weekend
break
default
system
println
days
better
others
break
provided
enumeration
called
payrollcommand
set
commands
can
executed
user
need
define
enumeration
assignment
will
need
manipulate
payrollcommand
variables
time
time
examples
well
code
provided
starting
point
demonstrate
everything
need
know
dealing
money
properly
probably
notice
methods
manipulate
monetary
amounts
format
method
currencyformat
class
expect
stored
int
values
program
expected
capable
dealing
money
accurately
cent
might
make
wonder
used
double
values
instead
far
payroll
program
concerned
cents
indivisible
words
employee
will
never
paid
taxed
fraction
cent
primary
problem
double
values
may
inaccurate
way
computers
store
floating
point
numbers
numbers
fractional
parts
simple
arithmetic
small
amount
error
0
0000001
can
easily
introduced
calculation
becomes
nightmare
deal
cents
meant
indivisible
rather
representing
money
using
double
values
program
use
int
values
representing
numbers
cents
example
employee's
hourly
wage
17
54
stored
int
value
1754
currencyformat
class
provided
can
used
take
care
formatting
value
will
appear
17
54
time
print
console
paragraph
corrected
2
1
06
decide
format
user
will
input
salary
amount
added
employee
console
input
version
program
user
can
enter
salary
cents
integer
value
dollars
float
double
however
file
input
version
program
inputs
taken
file
input
expect
salary
amounts
added
employees
expressed
dollars
can
decimal
point
see
specification
input
format
addemployee
part
description
input
file
handled
inputfile
txt
file
attached
example
particular
input
salary
expected
look
like
20
50
20
20
00
without
dollar
signs
note
can
read
input
double
value
first
use
appropriate
arithmetic
manipulation
including
rounding
value
01
read
double
can
represented
0999999
9
01000
01
know
one
will
casting
convert
value
read
input
integer
representing
salary
cents
representation
suggest
use
throughout
program
check
double
class
description
helpful
methods
converting
string
double
calculating
tax
amounts
payment
amounts
use
integer
division
whenever
division
required
will
always
round
amount
result
fraction
cent
compiler
warnings
compile
program
command
line
may
see
following
output
note
blah
java
uses
unchecked
unsafe
operations
note
recompile
xlint
unchecked
details
something
ignore
usually
means
using
generics
appropriately
often
means
least
one
use
generic
class
given
type
parameter
somewhere
said
arraylist
instead
arraylist
string
far
concerned
course
serious
compile
time
error
needs
fixed
find
specific
problems
recompile
program
command
javac
xlint
unchecked
java
still
sure
seeing
warnings
feel
free
ask
us
changes
made
handle
input
file
xiaomin
liu
stanislaw
jarecki
winter
2006
couple
changes
introduced
rewording
done
alex
thornton
fall
2005
minor
changes
introduced
alex
thornton
spring
2005
brief
section
compile
time
warnings
added
alex
thornton
winter
2005
originally
written
alex
thornton
portions
adapted
running
empty
scenes
italian
restaurant
also
written
alex
thornton
fall
2004
