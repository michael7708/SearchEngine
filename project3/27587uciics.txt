informatics 45 spring 2010 project 3 the great beyond 
project 3 
informatics
45
spring
2010
news
course
reference
schedule
lab
manual
code
examples
alex
informatics
45
spring
2010
project
3
great
beyond
project
plan
due
saturday
may
15
11
59pm
program
due
monday
may
24
11
59pm
lessons
learned
due
tuesday
may
25
11
59pm
required
work
project
individually
introduction
first
two
projects
helped
take
two
large
steps
extended
boundaries
accomplish
programming
first
project
asked
build
program
graphical
user
interface
second
asked
build
program
establish
socket
connection
send
image
one
program
another
overarching
lesson
hope
take
lot
new
java
skills
solve
either
problems
things
new
gui
easier
used
anonymous
inner
classes
sockets
required
light
multithreading
especially
mixed
guis
knew
already
went
long
way
difficulty
mostly
discovering
details
apis
needed
solve
problem
can
overcome
combination
prototyping
experimentation
adapting
code
examples
lecture
others
may
found
online
searching
internet
information
stuck
second
project
particular
dramatically
pushed
boundaries
accomplish
outward
many
first
time
writing
program
communicate
separate
program
introduced
communication
protocols
showed
take
much
code
get
two
programs
talking
via
network
underscoring
importance
programs
agreeing
specifics
conversation
structured
tool
toolbox
whole
new
world
opens
suddenly
idea
able
write
program
combines
say
google
search
queries
internet
movie
database
favorite
social
network
find
people
like
movies
similar
ones
like
seem
far
fetched
challenge
getting
programs
share
information
twofold
firstly
purely
software
engineering
problem
protocol
designed
programs
can
use
conversation
secondly
social
problem
person
group
people
writing
programs
necessary
agree
protocol
ahead
time
implement
potentially
catastrophic
problem
ever
get
google
agree
use
protocol
just
communicate
largely
solved
presence
standards
defined
world
wide
web
consortium
standards
help
two
ways
providing
detailed
communication
protocol
whose
details
already
hammered
also
allowing
programs
interoperate
many
programs
without
support
separate
protocol
fact
standard
protocols
often
standard
implementations
code
details
example
java
built
support
number
standard
protocols
including
http
hypertext
transfer
protocol
protocol
browser
uses
download
web
pages
among
others
http
particular
importance
since
protocol
used
virtually
web
communications
limited
conversation
browser
web
server
order
download
web
page
though
conversation
certainly
uses
http
http
protocol
underlies
growing
variety
program
program
communications
using
web
protocols
broadly
called
web
services
web
sites
software
systems
communicate
directly
one
another
programs
web
browsers
fetch
data
affect
change
web
sites
software
systems
fortunately
since
http
support
built
directly
java
can
write
programs
use
web
based
apis
without
handle
low
level
details
protocol
though
details
need
familiar
want
use
provided
implementation
effectively
project
gives
opportunity
explore
small
slice
vast
sea
possibilities
presented
web
apis
web
services
get
chance
choose
problem
related
web
interested
solving
writing
java
program
though
provide
one
solve
trouble
choosing
investigate
details
implement
solution
planning
phase
will
special
importance
project
since
part
settle
details
problem
will
based
experimentation
prototyping
can
understand
can
reasonably
expect
accomplish
relatively
short
time
provided
hope
done
program
can
actually
use
day
day
basis
rather
one
submit
us
never
look
reminder
partner
project
work
expected
completed
individually
partner
use
pair
programming
problem
project
provides
choice
problems
work
asked
choose
problem
posed
problem
choice
entirely
encourage
explore
ideas
neither
penalty
deciding
solve
provided
problem
instead
extra
credit
choosing
consider
accepting
freedom
offered
realize
freedom
reward
twitter
twitter
web
site
combines
called
microblogging
sharing
short
messages
internet
rather
longer
articles
called
moblogging
ability
post
messages
go
using
example
mobile
phone
twitter
emerged
exciting
internet
phenomenon
popularity
generated
hype
even
elicited
academic
research
study
summed
paper
twitter
claimed
many
useful
variety
purposes
check
blog
randomly
chosen
person's
ideas
twitter
good
twitter
provides
relatively
small
number
features
post
short
messages
140
characters
called
status
updates
colloquially
tweetsregister
follower
another
user's
messages
notified
whenever
tweetsee
followers
arekeep
track
tweets
favoritespost
receive
tweets
using
text
messaging
feature
mobile
phone
arising
small
feature
set
potentially
powerful
tool
social
networking
online
conversation
even
guerrilla
journalism
like
many
tools
web
interface
important
data
interconnects
makes
powerful
reason
twitter
provides
api
fetching
manipulating
data
outside
confines
web
browser
api
will
explore
choose
solve
provided
problem
provided
problem
manipulating
twitter
account
via
twitter
api
using
java
saw
lecture
twitter
provides
api
interacting
twitter
even
using
web
browser
api
documented
fair
amount
detail
following
link
twitter
api
documentation
get
started
want
create
new
twitter
account
interact
go
twitter
com
click
button
encourages
get
started
join
already
twitter
account
might
want
use
experimentation
first
good
idea
create
fresh
account
can
play
especially
new
twitter
sure
spend
little
bit
time
experimenting
can
clear
works
post
updates
sign
follower
people
check
following
understanding
twitter
works
important
context
understanding
work
problem
choose
work
provided
problem
program
meet
following
requirements
monitor
messages
posted
friends
looking
messages
containing
keywords
specified
user
example
might
watch
messages
words
concert
tonight
example
program
display
messages
keywords
program
support
number
keywords
allow
users
specify
whether
messages
require
keywords
fine
program
require
user
specify
new
list
keywords
time
program
starts
can
also
save
information
file
reload
time
prefer
program
also
provide
ability
user
post
public
response
messages
displays
note
convention
messages
posted
publicly
intended
particular
user
begin
followed
recipient's
name
example
post
reply
i45s2010
account
saw
class
might
post
message
i45s2010
agree
convention
handled
program
automatically
program
check
messages
quickly
overwhelms
limited
number
requests
per
hour
allowed
twitter
api
remember
leave
room
limit
post
replies
may
make
rate
program
checks
new
messages
configurable
can
hard
code
rate
think
reasonable
configurable
wise
hard
code
limit
allow
user
blow
twitter's
api
limits
provides
graphical
user
interface
makes
access
information
functionality
simple
straightforward
usual
design
user
interface
stick
xml
output
twitter
web
method
rather
alternatives
json
rss
atom
twitter
provides
java
built
support
xml
saw
lecture
others
will
require
find
write
code
supports
respectful
rules
governing
use
twitter
api
including
limited
number
web
method
calls
per
hour
note
limit
may
affect
ability
work
test
program
pace
like
sure
plan
effect
limit
will
work
one
way
handle
example
sure
make
requests
slowly
least
less
frequently
testing
program
api
requires
authentication
use
usernames
passwords
belong
will
certainly
run
situations
receive
responses
expecting
hit
limitations
aware
notice
behavior
seem
make
sense
will
best
help
seasoned
twitter
api
experts
may
always
immediate
answer
question
typical
issue
real
world
software
development
one
expert
everything
one
person
expert
tiny
fraction
world
ability
overcome
paramount
want
able
build
maintain
real
software
note
internet
searches
likely
help
discussion
group
users
twitter
api
coming
problem
instead
rather
working
problem
provided
free
come
problem
instead
involving
twitter
web
site
service
combination
web
sites
services
like
general
anything
goes
though
ground
rules
asked
follow
choose
problem
just
everyone
can
somewhat
level
playing
field
will
need
use
least
one
web
site
web
service
api
accessible
java
ideally
stick
apis
like
ones
experimented
lecture
welcome
use
others
work
differently
discussed
inclined
also
strictly
limited
protocols
sit
atop
http
can
something
say
instant
messaging
though
aware
may
making
job
significantly
harder
using
something
proprietary
protocol
rather
standardized
one
required
call
least
three
different
web
methods
part
solution
substantially
interesting
part
program
involve
either
creation
consumption
combination
information
sent
received
methods
goal
program
ideally
automate
something
normally
easy
using
regular
browser
based
interface
provided
chosen
web
site
required
avoid
violating
license
agreement
rules
put
place
chosen
web
site
service
example
twitter
requires
make
certain
number
requests
web
method
calls
per
hour
want
write
twitter
spamming
tool
ethical
reasons
might
well
want
avoid
kind
tool
anyway
chosen
api
requires
authentication
required
use
usernames
passwords
etc
belong
free
may
well
want
create
new
accounts
just
course
assuming
allowed
site's
license
agreement
will
need
give
us
account
use
testing
sure
allowed
site's
license
agreement
give
us
account
paid
note
may
limit
choices
problems
can
work
permitted
use
pre
existing
code
find
online
make
job
communication
easier
long
code
licensed
least
personal
non
commercial
use
long
make
clear
code
came
sources
sources
means
example
use
open
source
library
simplify
connecting
chosen
web
api
receiving
result
expect
code
written
course
permitted
take
code
students
course
students
taken
course
previously
permitted
people
write
code
specifically
sure
whether
allowed
use
code
find
sure
ask
us
working
problem
need
get
approved
early
process
thursday
may
13
8
00pm
need
send
email
describes
problem
plan
solve
detailed
enough
can
assess
whether
problem
solvable
time
allowed
say
example
plan
automate
web
searching
using
google
yahoo
web
site
service
involvedwhat
apis
open
source
libraries
plan
use
please
include
links
api
documentation
since
good
bet
choosing
something
never
used
beforeroughly
expect
user
interface
will
look
like
done
least
functionality
expect
provide
importance
embracing
freedom
may
make
uncomfortable
encouraged
find
problem
solve
project
may
something
asked
often
school
though
find
happens
increasingly
farther
get
especially
go
graduate
school
may
feel
uncomfortable
sure
becuase
sure
whether
idea
can
handle
time
provided
feel
clear
graded
relative
peers
short
thing
will
feel
like
risk
may
risk
averse
comes
courses
receiving
grade
thing
remember
left
project
open
ended
wanted
able
find
problems
excite
opposed
wanting
grade
quality
problem
chose
one
will
graded
specifically
chose
work
provided
problem
rather
finding
fact
one
will
graded
choice
problem
long
approved
problem
planning
phase
will
instead
graded
quality
delivered
whether
solves
problem
posed
whether
provided
us
enough
information
figure
use
problem
interested
solving
let
go
fears
embrace
freedom
help
decide
whether
problem
solvable
given
time
try
help
whittle
something
manageable
big
problem
grading
will
work
though
easy
say
remind
grades
purpose
education
let
keep
getting
came
planning
phase
particularly
decide
work
something
provided
twitter
problem
even
going
want
spend
time
planning
program
experimenting
prototype
code
implement
final
program
prototyping
going
important
since
working
technologies
almost
certain
new
project
plan
always
required
write
project
plan
summarizes
planning
addressing
least
following
questions
free
include
additional
information
like
spending
little
time
putting
thoughts
writing
good
way
get
thoughts
organized
describe
fair
amount
detail
problem
plan
solve
plan
work
provided
problem
can
just
say
plan
work
provided
problem
move
will
user
interface
designed
will
user
interface
program
communicates
web
site
service
will
show
user
interface
establish
connection
parse
result
successfully
can
happen
list
tasks
expect
complete
finished
implementation
expecting
break
level
individual
methods
classs
just
like
see
big
picture
tasks
tasks
dependent
others
features
prototype
prototype
guided
prototyping
past
experience
aspects
project
pose
biggest
risk
success
anticipate
difficulty
guided
prototyping
past
experience
aspects
project
pose
least
risk
success
parts
expect
able
handle
relative
ease
project
plan
due
saturday
may
15
11
59pm
see
section
titled
deliverables
information
submit
various
parts
project
writing
program
program
written
entirely
java
gui
built
using
swing
library
addition
swing
free
use
part
java
library
find
helpful
additionally
permitted
use
components
open
source
components
help
connect
web
site
service
parse
results
though
part
solution
addition
delivering
program
also
need
submit
brief
document
explains
use
program
need
say
much
page
will
suffice
programs
guess
going
need
told
enough
information
can
understand
use
program
document
will
need
supply
us
username
password
authentication
information
necessary
us
use
program
chosen
web
site
service
authentication
necessary
note
twitter
account
can
use
testing
site
will
require
give
us
account
can
use
freely
assume
will
anything
like
account
testing
program
give
us
account
care
usually
going
best
create
new
account
work
course
give
us
part
submission
please
put
enough
information
account
messages
photos
links
whatever
interesting
test
program
sure
within
license
agreement
chosen
web
site
service
give
authentication
information
give
us
account
paid
note
may
limit
choices
problems
can
work
lastly
used
open
source
libraries
provided
jar
files
need
include
jar
files
submission
program
due
monday
may
24
11
59pm
see
section
titled
deliverables
information
submit
various
parts
project
may
seem
unreasonable
first
blush
six
days
write
program
note
expecting
will
written
code
already
planning
phase
deadline
tight
initially
seems
note
also
project
may
require
much
code
might
imagine
since
java's
library
includes
built
support
web
protocols
like
http
assessing
lessons
learned
completed
implementation
submitted
take
little
time
reflect
experience
writing
lessons
learned
document
lessons
learned
document
reflect
least
following
questions
extent
follow
project
plan
implementing
program
features
implement
differently
specified
plan
decide
implement
differently
couple
biggest
successes
project
features
felt
turned
well
challenges
able
overcome
forces
think
helped
successful
cases
couple
aspects
project
gone
better
think
problematic
will
differently
next
time
ensure
handle
better
think
web
site
service
api
chose
make
easier
solve
problem
find
fighting
ways
chosen
web
site
service
api
behave
expected
ways
surprise
changed
one
thing
api
lessons
learned
document
due
tuesday
may
25
11
59pm
see
section
titled
deliverables
information
submit
various
parts
project
deliverables
required
deliver
three
parts
project
checkmate
ics
built
online
assignment
submission
system
follow
link
discussion
submit
files
via
checkmate
aware
holding
rules
specified
document
including
one
says
responsible
submitting
version
project
want
graded
regrade
project
simply
submitted
wrong
version
accidentally
three
parts
project
due
date
project
plan
microsoft
word
doc
docx
rich
text
format
rtf
pdf
document
due
saturday
may
15
11
59pm
program
three
things
collection
java
files
comprising
program
document
explaining
use
jar
files
containing
open
source
libraries
used
please
submit
zip
file
containing
things
files
compiled
class
files
parts
eclipse
workspace
sure
zip
java
files
still
folder
structure
imposed
eclipse
java
use
packages
program
due
monday
may
24
11
59pm
lessons
learned
document
another
microsoft
word
doc
docx
rich
text
format
rtf
pdf
document
due
tuesday
may
25
11
59pm
submitted
work
take
moment
sure
submitted
files
intended
missed
one
able
compile
run
program
can
result
substantial
penalty
since
able
evaluate
program's
correctness
additional
minor
tweaks
alex
thornton
spring
2010
tweaks
alex
thornton
spring
2009
originally
written
alex
thornton
spring
2008
