lab assignment 5 
fifth lab assignment 
ics
h21
uc
irvine
david
kay
fall
2009
lab
assignment
5
assignment
due
end
lab
friday
october
30
choose
partner
assignment
someone
worked
already
starting
assignment
change
language
level
intermediate
student
lambda
class
inorder
traversal
bst
equivalent
exercise
14
2
3
called
bst
list
note
textbook
arranges
trees
little
differently
empty
node
false
used
empty
either
way
works
long
stick
one
way
consistently
also
node
trees
two
value
fields
number
name
rather
just
single
number
used
also
insertion
item
bst
equivalent
exercise
14
2
5
called
bst
insert
wrote
function
take
list
items
insert
item
bst
equivalent
exercise
14
2
6
called
list
bst
know
recognize
functions
write
class
write
function
search
item
binary
tree
equivalent
exercise
14
2
4
give
chance
now
write
function
bst
member
described
write
process
bsts
defined
class
rather
described
book
bst
member
number
bst
boolean
return
true
number
appears
bst
false
otherwise
check
expect
bst
member
17
empty
false
check
expect
bst
member
17
list
bst
list
17
true
check
expect
bst
member
17
list
bst
list
34
43
28
16
17
24
134
34
true
check
expect
bst
member
17
list
bst
list
34
3
23
2
25
26
24
false
hints
like
contract
purpose
statement
examples
next
write
function
header
define
lambda
since
tree
either
empty
cond
distinguish
now
return
tree's
empty
empty
two
things
look
equal
return
equal
going
keep
looking
recursively
either
left
subtree
right
subtree
decide
submit
definitions
via
checkmate
exercises
14
3
2
14
3
3
14
3
4
predefined
function
max
returns
largest
arguments
will
useful
note
representation
web
pages
used
section
bit
odd
since
linked
page
nested
within
page
links
therefore
two
pages
link
still
useful
vehicle
exercises
explore
fundamental
operations
trees
authors
refine
representation
later
book
exercises
14
4
1
data
definition
just
two
parts
14
4
2
goes
list
containing
lists
following
general
pattern
exercises
previous
section
14
4
3
14
4
4
exercises
15
3
1
15
3
3
15
3
4
exercise
17
6
1
one
exercise
chosen
17
6
2
17
6
6
choose
17
6
2
write
reveal
list
function
necessary
part
problem
use
hangman
ss
teachpack
make
complete
hangman
game
since
depends
problem
assigned
previously
exercises
17
7
1
17
7
2
just
parts
1
3
5
17
7
3
17
7
4
exercises
17
8
3
17
8
5
collect
definitions
submit
usual
via
checkmate
class
will
discuss
change
restaurant
structure
instead
just
one
best
dish
price
restaurant
menu
dishes
new
rrant
make
new
rrant
name
cuisine
phone
menu
name
string
cuisine
string
phone
string
menu
list
dish
structures
see
define
new
structure
less
like
define
struct
new
rrant
name
cuisine
phone
menu
menu
list
dishes
new
rrant
structure
contains
list
one
fields
dish
list
name
price
dish
make
dish
name
price
name
string
price
number
defined
define
struct
dish
name
price
1
restaurant
definition
add
third
dish
paht
woon
sen
7
95
define
r1
make
new
rrant
thai
touch
thai
949
640
0123
list
make
dish
mee
krob
8
50
make
dish
larb
gai
10
25
write
scheme
expression
defines
r2
new
rrant
structure
french
restaurant
pascal
whose
phone
number
940
752
0107
serve
escargots
12
95
poached
salmon
18
50
rack
lamb
24
00
marjolaine
cake
8
50
2
write
function
new
rrant
first
dish
name
takes
new
rrant
argument
returns
name
first
dish
restaurant's
menu
remember
write
test
cases
examples
write
function
include
code
check
whether
menu
zero
dishes
return
empty
may
find
needing
extract
menu
argument
twice
use
local
avoid
3
write
function
dish
cheap
takes
dish
structure
number
returns
true
price
dish
less
specified
number
4
write
function
menu
cheap
takes
menu
list
dish
structures
number
returns
true
dishes
menu
price
less
specified
number
may
write
code
return
true
menu
dishes
produce
error
message
course
use
dish
cheap
definition
5
write
function
new
rrant
cheap
takes
new
rrant
number
returns
true
dishes
restaurant
serves
cost
less
specified
number
course
use
menu
cheap
definition
6
write
function
menu
prices
takes
menu
returns
list
numbers
number
price
dish
menu
function
will
collect
prices
dishes
list
return
list
7
write
function
menu
average
takes
menu
returns
average
price
dishes
menu
think
compute
average
quantities
need
get
predefined
function
length
will
helpful
will
also
helpful
write
function
sum
returns
sum
list
numbers
note
also
need
check
empty
menu
return
zero
case
divide
zero
8
write
function
new
rrant
cheap
takes
new
rrant
number
returns
true
average
price
restaurant's
menu
less
specified
number
9
write
function
new
rrant
keep
cheap
takes
new
rrant
number
returns
newly
constructed
copy
restaurant
menu
items
cheap
removed
right
way
go
follow
pattern
functions
start
writing
function
operate
menu
call
function
new
rrant
keep
cheap
function
actual
removal
task
follows
pattern
functions
already
seen
10
write
function
cheap
new
rrants
takes
list
new
rrant
structures
number
returns
list
containing
cheap
restaurants
ones
whose
average
menu
price
less
number
use
new
rrant
cheap
definition
course
collect
definitions
submit
via
checkmate
now
reimplement
collection
class
store
restaurants
binary
search
tree
ordered
restaurants'
names
will
involve
changing
definitions
collection
part
code
none
definitions
elsewhere
data
definition
will
follows
treenode
either
1
empty
2
make
treenode
rootvalue
left
right
rootvalue
rrant
left
right
treenodes
representing
left
subtree
right
subtree
bst
property
restaurant
names
left
subtree
earlier
alphabetically
name
rootvalue
restaurant
names
right
subtree
greater
subtrees
bsts
tips
hints
simplifications
code
wrote
part
code
wrote
class
useful
guide
compare
strings
alphabetically
use
string
string
string
collection
list
function
inorder
traversal
tree
produces
sorted
list
assume
every
restaurant
collection
will
unique
name
assumption
will
duplications
collection
search
will
always
return
one
element
collection
empty
collection
deleting
items
bst
tricky
item
two
children
leave
holes
need
maintain
bst
property
learn
algorithm
day
now
can
skip
collection
remove
can
just
return
collection
unchanged
remember
partner
must
complete
partner
evaluation
form
eee
uci
edu
based
part
ics
h21assignments
exams
david
kay
fall
2001
modified
david
kay
fall
2004
fall
2009
david
kay
kay
uci
edu
friday
october
23
2009
12
45
pm
