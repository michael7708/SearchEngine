center algorithms theory computation 
research interests 
research
algorithms
theory
computation
uc
irvine
goal
research
theoretical
computer
science
produce
results
supported
rigorous
proof
problems
dealing
computers
applications
questions
investigated
often
motivated
practical
problems
goal
understanding
fundamental
structure
problem
often
important
producing
solution
immediate
applicability
despite
emphasis
turns
results
first
might
appear
theoretical
value
sometimes
profound
relevance
practical
problems
particular
one
major
subareas
theoretical
computer
science
one
pursued
faculty
graduate
students
uci
concrete
complexity
look
specific
problems
try
determine
complexity
amount
resources
required
obtaining
solution
work
falls
three
main
areas
design
algorithms
data
structures
analysis
problem
complexity
design
algorithms
data
structures
given
problem
try
find
efficient
solution
methods
data
structure
way
organizing
information
sometimes
design
appropriate
data
structure
can
foundation
efficient
algorithm
made
number
significant
contributions
field
data
structures
addition
one
members
written
widely
used
respected
text
data
structures
presently
completing
second
introductory
text
addition
design
new
data
structures
also
interested
efficient
algorithms
problems
arising
variety
fields
often
problems
can
represented
terms
trees
graphs
strings
interested
design
efficient
solutions
problems
field
computational
geometry
investigates
complexity
problems
involving
two
dimensional
higher
spaces
active
research
area
theoretical
depth
also
practical
applications
areas
pattern
recognition
vlsi
layout
statistics
image
processing
one
major
area
work
investigation
certain
properties
geometric
constructs
can
modeled
graphs
also
explored
solutions
geometric
problems
linear
programming
minimum
spanning
tree
can
made
dynamic
can
efficiently
maintain
solution
input
data
subject
change
also
interest
compression
data
example
reduced
complexity
algorithms
compressing
strings
also
investigated
compression
structures
quadtrees
used
storing
spatial
data
current
work
genetics
provides
exciting
application
area
algorithms
work
done
long
ago
present
faculty
longest
common
subsequences
pq
trees
turned
valuable
solving
problems
arise
genetics
recently
one
faculty
introduced
sophisticated
new
methods
speeding
solution
problems
dna
sequence
comparison
much
work
dealt
fast
solution
problems
single
processor
combination
declining
cost
processors
desire
fast
solutions
problems
led
great
deal
interest
use
parallelism
speed
computation
one
natural
question
thus
long
take
solve
given
problem
limited
number
parallel
processors
us
especially
interested
solving
problems
graphs
quickly
without
using
excessive
number
processors
analysis
solution
method
proposed
seek
find
rigorous
statement
efficiency
analysis
algorithms
can
go
hand
hand
design
can
applied
known
algorithms
work
motivated
part
theory
np
completeness
strongly
suggests
certain
problems
just
hard
solve
exactly
efficiently
time
may
though
difficult
cases
relatively
rare
attempt
investigate
behavior
problems
algorithms
assumptions
distribution
inputs
group
uci
made
major
contributions
area
probabilistic
analysis
done
work
algorithms
problems
packing
partitioning
marking
algorithms
hashing
particular
obtained
surprising
result
behavior
well
known
marking
algorithm
elegant
analysis
double
hashing
probability
can
provide
powerful
tool
even
assume
probability
distribution
inputs
approach
called
randomization
one
can
introduce
randomness
algorithm
even
worst
case
input
works
well
high
probability
example
classical
list
update
problem
involves
organizing
data
can
perform
searches
efficiently
one
faculty
shown
use
randomization
beat
inherent
limit
deterministic
approach
area
considerable
recent
interest
line
algorithms
investigate
performance
algorithms
must
provide
answers
based
part
input
remainder
available
good
example
memory
paging
swapping
system
must
decide
memory
pages
keep
cache
sees
ones
will
actually
used
later
earlier
analysis
problem
fully
successful
explaining
common
heuristic
performs
well
one
faculty
developed
new
approach
formally
models
locality
reference
thus
can
better
explain
performance
paging
algorithms
problem
complexity
efficient
solutions
appear
difficult
negative
results
can
sometimes
provide
helpful
guidance
two
major
types
results
possible
cases
one
can
actually
prove
model
problem
admit
solution
without
certain
level
resources
many
problems
good
bounds
type
available
problem
can
shown
equivalent
complexity
well
known
class
problems
example
problem
np
complete
solved
polynomial
time
unless
np
major
open
question
results
can
save
wasted
effort
researchers
cases
might
also
suggest
algorithms
different
model
considered
department
computer
science
university
california
irvine
ca
92697
3425
