wild ride case study 
a description problem 
mr
kay's
wild
ride
problem
description
document
provides
overview
simulation
discusses
details
behavior
implementation
complete
formal
specification
document
1
introduction
amusement
parks
like
disneyland
many
attractions
usually
rides
also
stores
restaurants
successful
amusement
parks
also
called
theme
parks
also
many
customers
customers
visit
one
attraction
another
usually
customers
want
visit
attraction
attraction
can
hold
one
time
often
customers
spend
time
waiting
line
amusement
park
operators
pay
lot
attention
way
customers
flow
park
want
attractions
operating
full
capacity
want
people
spend
little
time
possible
line
will
good
time
come
back
since
hundreds
millions
dollars
go
design
new
amusement
park
pays
plan
ahead
predict
accurately
possible
people
will
behave
park
open
one
good
tool
computer
simulation
2
simulation
simulation
different
reality
want
know
well
newly
designed
helicopter
racing
schooner
will
perform
might
build
prototype
try
want
know
many
incoming
freshmen
will
graduate
four
years
less
might
simply
admit
students
keep
track
college
careers
want
know
arrangement
rides
works
best
build
see
happens
approaches
cost
lot
take
long
can
call
helicopter
schooner
students
amusement
park
system
means
group
things
forming
unified
whole
can
design
models
systems
behave
simplified
descriptions
leave
unnecessary
detail
like
color
sail
freshman's
height
shape
cars
mr
toad's
wild
ride
course
major
pitfall
designing
models
omitting
detail
unnecessary
perhaps
freshman's
height
affect
success
school
can
code
models
computer
programs
running
easily
changing
various
values
help
predict
systems'
performance
without
bothersome
cost
time
detail
real
thing
simulation
one
type
simulation
involves
behavior
population
students
schooner
helicopter
one
approach
population
simulation
involved
statistical
changes
population
whole
black
plague
epidemic
population
decreases
25
another
approach
represent
individual
population
separately
object
program
object
oriented
programming
natural
way
implement
simulations
like
simulator
gives
object
turn
object
can
change
status
possibly
affect
environment
can
call
one
round
simulation
individual
object
one
turn
simulation
will
typically
continue
specified
number
rounds
condition
occurs
objects
finishing
work
3
problem
since
orange
county
center
theme
parks
decide
offer
simulation
service
theme
park
designers
first
step
design
implement
software
will
use
program
will
simulate
two
different
classes
objects
attractions
customers
described
attraction
will
certain
information
location
park
number
customers
can
handle
amount
time
customers
spent
waiting
line
actually
starting
ride
amount
time
takes
customer
complete
ride
starts
attraction
will
also
perform
operations
taking
next
customers
line
releasing
customers
turn
informing
customers
long
wait
will
customer
will
start
wishlist
list
attractions
wants
visit
day
priority
indicates
important
attraction
customer
customer
will
also
way
deciding
moment
attraction
visit
next
customer
might
use
simple
minded
decision
algorithm
always
go
ride
next
highest
priority
customers
might
clever
might
decide
start
rides
furthest
entrance
crowds
will
smaller
might
decide
postpone
rides
wait
line
looks
long
might
choose
lower
priority
ride
happens
nearby
specify
customer
system
will
able
choose
different
decision
strategies
others
implemented
fact
prospective
customers
want
get
trip
will
also
able
use
service
providing
additional
stream
income
will
able
try
different
decision
strategies
see
one
works
best
fact
think
seen
web
site
provides
just
planning
service
information
customers
appears
program
will
simulation
system
manages
two
kinds
objects
setting
things
initially
attractions
customers
opening
closing
times
park
will
cycle
minutes
day
minute
will
give
turn
customer
entering
park
customer
just
leaving
ride
can
apply
decision
strategies
coming
ride
visit
next
also
every
ride
will
get
turn
take
customers
release
customers
depending
size
line
amount
time
takes
go
attraction
finally
customer
transit
one
place
next
will
move
closer
goal
end
cycle
customers
will
line
rides
will
actually
rides
will
walking
one
ride
another
next
minute
whole
cycle
repeats
simulator
stops
shortly
reaches
park's
closing
time
since
customers
might
actually
ride
exact
time
park
closes
allow
time
finish
leave
park
end
day
simulator
prints
statistics
customer's
visit
realistic
simulation
might
operate
second
second
instead
minute
time
however
take
60
times
computing
power
keep
things
simple
especially
lot
customers
leave
things
minute
minute
basis
now
4
attractions
ride
will
store
information
name
entrance
location
park
ride's
entrance
exit
location
rides
take
one
location
another
many
cars
use
ride
present
maximum
number
people
per
car
maximum
number
cars
ride
can
handle
parameters
loading
ride
time
see
queue
customers
waiting
line
ride
different
rides
load
discharge
passengers
differently
affects
length
time
takes
complete
ride
number
passengers
ride
can
handle
4
1
ride
loading
characteristics
ride
maintains
queue
customers
waiting
ride
minute
ride
may
take
people
queue
put
ride
will
take
people
completed
ride
send
back
park
decide
ride
visit
next
continues
closing
time
nobody
else
can
get
line
ride
empties
queue
minute
ride
figure
cars
loaded
ready
dispatched
ride
cars
empty
ready
load
cars
completed
ride
ready
unload
different
rides
differ
precise
details
handle
passengers
can
categorize
rides
cycle
rides
continuous
rides
interval
rides
4
1
1
cycle
rides
also
call
cycle
rides
stop
go
rides
everyone
gets
ride
ride
everyone
gets
nobody
riding
people
unloading
new
people
loading
show
theater
cycle
ride
carousels
dumbo
ride
disneyland
describe
cycle
ride
need
specify
amount
time
ride
motion
amount
time
takes
unload
load
ride
finally
cycle
ride
will
start
scheduled
cars
empty
will
start
passengers
beginning
cycle
ride
will
decide
whether
add
one
car
ride
remove
one
car
make
change
number
people
waiting
line
greater
current
capacity
ride
fewer
maximum
number
cars
use
will
add
one
car
will
remove
one
car
ride
two
cars
empty
last
three
cycles
4
1
2
continuous
rides
continuous
rides
never
stop
like
circular
conveyer
belt
goes
around
around
escalators
ski
lifts
continuous
rides
sky
ride
aerial
tram
disneyland
separate
loading
time
continuous
ride
loads
one
car
per
minute
need
length
ride
describe
continuous
ride
empty
car
ready
leave
can
leave
even
nobody's
however
one
car
may
leave
single
minute
minute
five
carloads
people
waiting
line
ride
will
add
one
car
maximum
sequence
empty
cars
launched
longer
one
third
number
cars
ride
ride
will
remove
one
car
4
1
3
interval
rides
interval
ride
cars
loaded
unloaded
dispatched
certain
set
intervals
car
pulls
load
point
riders
just
completed
ride
exit
left
people
waiting
ride
enter
car
right
loaded
car
released
dispatch
point
yards
line
launched
nobody
waiting
ride
cars
remain
waiting
loaded
interval
rides
empty
cars
launched
hand
one
car
may
launched
per
minute
describe
interval
ride
need
length
ride
length
time
takes
unload
reload
car
subways
interval
rides
except
subways
multiple
loading
points
everybody
car
gets
place
roller
coasters
including
disneyland's
matterhorn
space
mountain
minute
ride
will
add
one
car
loaded
number
people
waiting
current
number
cars
accommodate
one
full
circuit
ride
thus
currently
10
cars
ride
holding
6
people
add
one
car
60
people
line
will
remove
one
car
one
empty
car
waiting
load
10
minutes
4
2
kinds
rides
can
imagine
still
kinds
rides
example
attractions
allow
customer
spend
much
time
wants
stores
museums
like
tom
sawyer's
island
disneyland
now
simulator
will
model
rides
like
5
customers
customer
enters
park
characteristics
name
arrival
time
park
initial
wishlist
rides
priorities
current
working
agenda
rides
visit
decision
strategy
exit
strategy
5
1
customer
wishlist
customer
comes
park
prioritized
wishlist
listing
names
rides
customer
wants
ride
priority
ride
customers
may
just
visit
ride
priority
order
leave
park
customers
may
also
sophisticated
ways
choosing
rides
starting
original
wishlist
customer
creates
maintains
working
agenda
another
prioritized
list
rides
can
change
time
time
every
time
customer
finishes
ride
example
customer
removes
ride
just
finished
agenda
discuss
happens
agenda
empty
park's
closing
time
arrives
customer
will
also
keep
track
rides
visited
may
used
deciding
ride
visit
next
priorities
represented
integers
lower
values
indicating
higher
priorities
customer's
number
one
priority
comes
number
two
priority
example
5
2
decision
strategies
simulator
allows
customers
specify
one
three
strategies
choosing
next
ride
reprioritizing
agenda
next
ride
front
default
strategy
following
priorities
original
wishlist
pick
closest
ride
wishlist
first
pick
first
ride
shortest
waiting
time
including
walking
ride
estimated
waiting
time
line
park
waiting
time
ride
available
customer
location
courtesy
phones
large
message
boards
keep
customers
date
walk
ride
see
long
wait
strategies
imagined
implemented
customer
can
also
specify
exit
strategy
determines
customer
will
leave
park
head
exit
agenda
empty
head
exit
specific
time
stay
park
closes
working
agenda
empty
customer
yet
ready
leave
customer
will
refill
working
agenda
follows
add
rides
park
customer
visited
yet
agenda
runs
add
closest
15
rides
customer's
current
location
6
distance
distances
park
measured
distance
units
one
unit
distance
someone
can
walk
one
minute
makes
calculation
easy
locations
given
cartesian
coordinate
system
park's
entrance
exit
0
0
simulator
calculates
distances
rides
straight
line
euclidean
distance
take
obstacles
account
calculate
walking
times
based
distances
convert
non
integer
distances
next
highest
integer
since
simulator
keeps
track
everything
whole
minutes
7
operation
simulator
broadly
speaking
simulator
will
let
user
run
one
simulations
will
behave
follows
read
descriptions
rides
customers
according
specified
input
format
clock
tick
minute
check
queue
front
gate
customers
whose
arrival
time
come
check
customers
transit
arrived
destination
check
ride
appropriate
ride
launch
first
loaded
car
ready
go
unload
cars
completed
ride
sending
finished
riders
back
transit
load
available
cars
decide
whether
add
remove
cars
ride
park
closes
print
overall
statistics
allow
user
request
detailed
statistics
8
input
simulator
will
read
plain
text
input
files
one
describing
rides
one
describing
customers
files
lines
asterisk
first
column
ignored
thus
can
serve
comments
input
empty
lines
also
ignored
8
1
input
rides
basic
input
format
rides
follows
ride
name
entrance
entrance
exit
exit
initial
num
cars
max
num
cars
capacity
per
car
ride
type
ride
time
loading
time
ride
type
must
one
following
continuous
cycle
interval
continuous
rides
loading
time
specified
example
sample
ride
file
polymorphic
paddleboats
4
1
4
1
1
2
1
cycle
3
3
inheritance
insanity
2
2
4
6
1
3
1
continuous
5
8
2
input
customers
basic
input
format
customers
follows
customer
name
time
entered
hour
time
entered
minutes
customer
type
exit
strategy
exit
time
hour
exit
time
minuts
wish
list
priority1
wish
list
ride1
wish
list
priority2
wish
list
ride2
wish
list
priority3
wish
list
ride3
wish
list
priorityn
wish
list
riden
customer
type
must
one
following
closest
ride
first
highest
priority
first
shortest
time
first
exit
strategy
must
one
following
empty
wish
list
park
closing
time
set
time
exit
strategy
set
time
following
line
must
specify
exit
time
hours
minutes
exit
strategies
exit
time
line
will
appear
hour
fields
based
24
hour
clock
delimiter
starting
first
column
signals
end
customer's
wishlist
example
sample
customer
file
john
mccarthy
9
15
closest
ride
first
empty
wish
list
3
polymorphic
paddleboats
2
inheritance
insanity
donald
knuth
9
25
highest
priority
first
set
time
10
00
2
inheritance
insanity
8
casting
coaster
9
output
simulator
gathers
variety
statistics
rides
customers
customer
keeps
track
name
attraction
visited
times
customer
got
line
got
onto
ride
completed
ride
can
also
compute
total
time
spent
park
total
time
spent
line
total
time
spent
riding
rides
percentage
rides
original
wishlist
customer
visited
user
can
also
view
customer
least
time
park
line
ride
keeps
track
total
number
riders
average
number
per
minute
minimum
maximum
average
number
cars
minimum
maximum
average
line
length
waiting
time
user
can
also
view
attraction
fewest
visitors
longest
shortest
average
waiting
time
user
can
also
view
statistics
specific
customer
attraction
name
write
statistics
file
later
review
