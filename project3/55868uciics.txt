
divideskipmerger 
id
divideskipmerger
4887
2009
12
16
22
01
55z
abehm
copyright
2010
regents
university
california
redistribution
file
permitted
terms
bsd
license
imeplementation
merges
multiple
lists
dividedskip
algorithm
lists
assumed
sorted
ascending
order
author
jiaheng
lu
alexander
behm
date
05
23
2007
ifndef
divideskipmerger
define
divideskipmerger
include
include
include
listmerger
include
util
src
misc
divideskip
algorithm
combine
mergeopt
mergeskip
algorithm
template
class
divideskipmerger
public
listsmerger
invlist
private
estimation
purposes
float
shortlistsslope
float
shortlistsintercept
float
longlistsslope
float
longlistsintercept
calculating
float
mu
list
weights
void
mergeskipwithoutdupls
const
vector
invlists
unsigned
threshold
unsigned
longlists
vector
candis
list
weights
void
mergewithoutdupls
vector
invlists
unsigned
threshold
vector
results
using
list
weights
void
mergeskipwithdupls
const
vector
invlists
const
vector
weights
unsigned
threshold
unsigned
longlists
vector
candis
using
list
weights
void
mergewithdupls
vector
invlists
unsigned
threshold
vector
results
helper
query
time
estimatiom
void
getquerystats
vector
invlists
unsigned
threshold
float
shortlistsvar
float
shortliststime
float
longlistsvar
float
longliststime
public
divideskipmerger
bool
hasduplicatelists
false
listsmerger
invlist
hasduplicatelists
shortlistsslope
0
0f
shortlistsintercept
0
0f
longlistsslope
0
0f
longlistsintercept
0
0f
mu
0
01f
void
merge
impl
vector
invlists
unsigned
threshold
vector
results
void
fillestimationparams
vector
invlists
vector
thresholds
float
getestimatedquerytime
vector
invlists
unsigned
threshold
const
string
getname
return
divideskipmerger
template
void
divideskipmerger
merge
impl
vector
invlists
unsigned
threshold
vector
results
threshold
invlists
size
threshold
0
return
hasduplicatelists
mergewithdupls
invlists
threshold
results
else
mergewithoutdupls
invlists
threshold
results
template
void
divideskipmerger
mergewithoutdupls
vector
invlists
unsigned
threshold
vector
results
sort
invlists
begin
invlists
end
divideskipmerger
cmpinvlist
unsigned
longestsize
invlists
back
size
unsigned
longlistssize
unsigned
floor
threshold
mu
log2
longestsize
1
longlistssize
threshold
longlistssize
threshold
1
use
mergeskip
search
short
lists
vector
candis
mergeskipwithoutdupls
invlists
threshold
longlistssize
longlistssize
candis
unsigned
stop
invlists
size
unsigned
start
stop
longlistssize
typename
invlist
iterator
longlistspointers
longlistssize
unsigned
start
stop
longlistspointers
start
invlists
begin
use
exponential
probe
binary
search
long
lists
unsigned
0
candis
size
candis
count
threshold
results
push
back
candis
id
continue
unsigned
targetcount
threshold
candis
count
unsigned
count
0
unsigned
start
stop
unsigned
llindex
start
typename
invlist
iterator
start
end
expprobe
longlistspointers
llindex
invlists
end
start
end
candis
id
typename
invlist
iterator
iter
lower
bound
start
end
candis
id
longlistspointers
llindex
start
iter
invlists
end
iter
candis
id
count
count
targetcount
results
push
back
candis
id
break
else
count
stop
1
targetcount
break
early
termination
template
void
divideskipmerger
mergeskipwithoutdupls
const
vector
invlists
unsigned
threshold
unsigned
longlists
vector
candis
const
typename
invlist
value
type
maxunsigned
typename
invlist
value
type
0xffffffff
unsigned
numshortlists
invlists
size
longlists
threshold
numshortlists
return
add
maxunsigned
unsigned
0
numshortlists
invlists
push
back
maxunsigned
vector
heap
heap
reserve
numshortlists
make
initial
heap
make
heap
heap
begin
heap
end
unsigned
0
numshortlists
heap
push
back
heapelement
invlists
begin
push
heap
heap
begin
heap
end
unsigned
pivot
threshold
1
heapelement
popped
numshortlists
heap
front
iter
maxunsigned
unsigned
count
0
unsigned
currentid
heap
front
iter
currentid
heap
front
iter
heap
empty
popped
count
heap
front
pop
heap
heap
begin
heap
end
heap
pop
back
count
threshold
candis
push
back
candi
currentid
count
move
next
element
unsigned
0
count
popped
iter
heap
push
back
heapelement
popped
iter
popped
invlistindex
push
heap
heap
begin
heap
end
continue
pop
elements
heap
count
pivot
popped
count
heap
front
pop
heap
heap
begin
heap
end
heap
pop
back
skip
unsigned
0
count
popped
iter
lower
bound
invlists
popped
invlistindex
begin
invlists
popped
invlistindex
end
heap
front
iter
insert
heap
unsigned
0
count
heap
push
back
heapelement
popped
iter
popped
invlistindex
push
heap
heap
begin
heap
end
remove
maxunsigned
unsigned
0
numshortlists
invlists
pop
back
template
void
divideskipmerger
mergewithdupls
vector
invlists
unsigned
threshold
vector
results
vector
newinvlists
vector
newweights
detectduplicatelists
invlists
newinvlists
newweights
assume
newarray
sorted
according
length
increasing
unsigned
longestsize
newinvlists
newinvlists
size
1
size
unsigned
targetlonglistweight
unsigned
floor
threshold
mu
log2
longestsize
1
targetlonglistweight
threshold
targetlonglistweight
threshold
1
unsigned
longlistssize
0
unsigned
totallonglistsweight
0
unsigned
0
newinvlists
size
unsigned
currentweight
newweights
newinvlists
size
1
totallonglistsweight
currentweight
totallonglistsweight
targetlonglistweight
totallonglistsweight
threshold
longlistssize
totallonglistsweight
currentweight
else
longlistssize
1
break
vector
candis
mergeskipwithdupls
newinvlists
newweights
threshold
totallonglistsweight
longlistssize
candis
unsigned
stop
newinvlists
size
unsigned
start
stop
longlistssize
typename
invlist
iterator
longlistspointers
longlistssize
unsigned
weightremaining
longlistssize
early
termination
unsigned
cumulweight
0
unsigned
start
stop
longlistspointers
start
newinvlists
begin
cumulweight
newweights
weightremaining
start
totallonglistsweight
cumulweight
use
exponential
probe
binary
search
long
lists
unsigned
0
candis
size
candis
count
threshold
results
push
back
candis
id
continue
unsigned
targetcount
threshold
candis
count
unsigned
count
0
unsigned
start
stop
unsigned
llindex
start
typename
invlist
iterator
start
end
expprobe
longlistspointers
llindex
newinvlists
end
start
end
candis
id
typename
invlist
iterator
iter
lower
bound
start
end
candis
id
longlistspointers
llindex
iter
iter
invlists
end
iter
candis
id
count
newweights
count
targetcount
results
push
back
candis
id
break
else
count
weightremaining
llindex
targetcount
break
early
termination
template
void
divideskipmerger
mergeskipwithdupls
const
vector
invlists
const
vector
weights
unsigned
threshold
unsigned
longlists
vector
candis
const
typename
invlist
value
type
maxunsigned
typename
invlist
value
type
0xffffffff
unsigned
numshortlists
invlists
size
longlists
threshold
numshortlists
return
add
maxunsigned
unsigned
0
numshortlists
invlists
push
back
maxunsigned
vector
heap
heap
reserve
numshortlists
make
initial
heap
make
heap
heap
begin
heap
end
unsigned
0
numshortlists
heap
push
back
heapelement
invlists
begin
push
heap
heap
begin
heap
end
unsigned
pivot
threshold
1
heapelement
popped
numshortlists
heap
front
iter
maxunsigned
unsigned
weight
0
count
0
unsigned
currentid
heap
front
iter
currentid
heap
front
iter
heap
empty
popped
count
heap
front
weight
weights
heap
front
invlistindex
pop
heap
heap
begin
heap
end
heap
pop
back
weight
threshold
candis
push
back
candi
currentid
weight
move
next
element
unsigned
0
count
popped
iter
heap
push
back
heapelement
popped
iter
popped
invlistindex
push
heap
heap
begin
heap
end
continue
pop
elements
heap
weight
pivot
possible
list
weight
equals
weight
weights
heap
front
invlistindex
pivot
break
popped
count
heap
front
weight
weights
heap
front
invlistindex
pop
heap
heap
begin
heap
end
heap
pop
back
skip
unsigned
0
count
popped
iter
lower
bound
invlists
popped
invlistindex
begin
invlists
popped
invlistindex
end
heap
front
iter
insert
heap
unsigned
0
count
heap
push
back
heapelement
popped
iter
popped
invlistindex
push
heap
heap
begin
heap
end
remove
maxunsigned
unsigned
0
numshortlists
invlists
pop
back
template
void
divideskipmerger
getquerystats
vector
invlists
unsigned
threshold
float
shortlistsvar
float
shortliststime
float
longlistsvar
float
longliststime
struct
timeval
t1
t2
struct
timezone
tz
threshold
invlists
size
threshold
0
return
sort
invlists
begin
invlists
end
divideskipmerger
cmpinvlist
unsigned
longestsize
invlists
back
size
unsigned
longlistssize
unsigned
floor
threshold
mu
log2
longestsize
1
longlistssize
threshold
longlistssize
threshold
1
vector
candis
gettimeofday
t1
tz
mergeskipwithoutdupls
invlists
threshold
longlistssize
longlistssize
candis
gettimeofday
t2
tz
shortliststime
t2
tv
sec
t1
tv
sec
1000000
t2
tv
usec
t1
tv
usec
1000
0f
use
binary
search
hash
search
long
lists
vector
results
gettimeofday
t1
tz
unsigned
stop
invlists
size
unsigned
start
stop
longlistssize
typename
invlist
iterator
longlistspointers
longlistssize
unsigned
start
stop
longlistspointers
start
invlists
begin
use
exponential
probe
binary
search
long
lists
unsigned
0
candis
size
candis
count
threshold
results
push
back
candis
id
continue
unsigned
targetcount
threshold
candis
count
unsigned
count
0
unsigned
start
stop
unsigned
llindex
start
typename
invlist
iterator
start
end
expprobe
longlistspointers
llindex
invlists
end
start
end
candis
id
typename
invlist
iterator
iter
lower
bound
start
end
candis
id
longlistspointers
llindex
start
iter
invlists
end
iter
candis
id
count
count
targetcount
results
push
back
candis
id
break
else
count
stop
1
targetcount
break
early
termination
gettimeofday
t2
tz
longliststime
t2
tv
sec
t1
tv
sec
1000000
t2
tv
usec
t1
tv
usec
1000
0f
calculate
total
sizes
short
lists
float
log2
log
2
unsigned
shortlistssize
0
unsigned
0
start
shortlistssize
invlists
size
calculate
log2
sum
total
size
long
lists
float
loglonglists
0
0f
unsigned
start
stop
loglonglists
log
invlists
size
log2
shortlistsvar
float
shortlistssize
float
start
loglonglists
longlistsvar
shortlistssize
log
invlists
size
log2
template
void
divideskipmerger
fillestimationparams
vector
invlists
vector
thresholds
vector
shortlistsxvals
vector
shortlistsyvals
vector
longlistsxvals
vector
longlistsyvals
float
shortlistsxval
0
0f
float
shortlistsyval
0
0f
float
longlistsxval
0
0f
float
longlistsyval
0
0f
unsigned
0
invlists
size
vector
currentarrs
invlists
currentarrs
size
float
divideskipmerger
getestimatedquerytime
vector
invlists
unsigned
threshold
const
threshold
invlists
size
return
0
0f
sort
invlists
begin
invlists
end
divideskipmerger
cmpinvlist
unsigned
longestsize
invlists
back
size
unsigned
longlistssize
unsigned
floor
threshold
mu
log2
longestsize
1
longlistssize
threshold
longlistssize
threshold
1
calculate
total
sizes
short
lists
float
log2
log
2
unsigned
shortlistssize
0
unsigned
numshortlists
invlists
size
longlistssize
unsigned
0
numshortlists
shortlistssize
invlists
size
calculate
log2
sum
total
size
long
lists
float
loglonglists
0
0f
unsigned
numshortlists
invlists
size
loglonglists
log
invlists
size
log2
float
shortlistsvar
float
shortlistssize
float
threshold
longlistssize
loglonglists
float
longlistsvar
shortlistssize
log
invlists
size
log2
return
shortlistsvar
shortlistsslope
longlistsvar
longlistsslope
shortlistsintercept
longlistsintercept
endif
