
rect cpp 
id
rect
cpp
5027
2010
02
18
19
41
48z
rares
rect
cpp
copyright
2003
2007
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
march
2002
authors
michael
ortega
binderberger
liang
jin
chen
li
include
include
include
assert
include
index
include
include
define
big
num
flt
max
4
0
define
undefined
boundary
0
boundary
numdims
define
min
define
max
convert
point
rectangle
void
pointtorectangle
struct
point
struct
rect
register
int
0
iboundary
position
boundary
numdims
position
convert
rectangle
point
void
rectangletopoint
struct
rect
struct
point
register
int
0
iposition
boundary
center
rectangle
struct
point
center
struct
rect
register
struct
rect
struct
point
register
int
0
iboundary
boundary
numdims
2
return
initialize
rectangle
0
coordinates
void
rtreeinitrect
struct
rect
register
struct
rect
register
int
0
iboundary
rectreal
0
return
rect
whose
first
low
side
higher
opposite
side
interpreted
undefined
rect
struct
rect
rtreenullrect
struct
rect
register
int
boundary
0
rectreal
1
boundary
numdims
rectreal
1
1
iboundary
drand48
1000
width
low
side
boundary
numdims
boundary
width
high
side
fill
boundaries
random
search
rectangle
pass
pointer
rect
contains
data
pointer
rect
filled
generated
rect
centered
randomly
anywhere
data
area
size
0
size
data
area
dimension
search
rect
can
stick
beyond
data
area
void
rtreesearchrect
struct
rect
search
struct
rect
data
register
struct
rect
search
search
data
data
register
int
register
rectreal
size
center
assert
search
assert
data
0
iboundary
big
num
data
boundary
big
num
size
drand48
data
boundary
data
boundary
1
2
center
data
boundary
drand48
data
boundary
data
boundary
1
search
boundary
center
size
2
search
boundary
center
size
2
else
open
boundary
search
entire
dimension
search
boundary
big
num
search
boundary
big
num
endif
print
data
rectangle
void
rtreeprintrect
struct
rect
int
depth
register
struct
rect
register
int
assert
rtreetabin
depth
printf
rect
0
numdims
rtreetabin
depth
1
printf
boundary
boundary
numdims
calculate
dimensional
volume
rectangle
rectreal
rtreerectvolume
struct
rect
register
struct
rect
register
int
register
rectreal
volume
rectreal
1
assert
undefined
return
rectreal
0
0
iboundary
numdims
boundary
assert
volume
0
0
return
volume
calculate
dimensional
volume
bounding
sphere
rectangle
volumes
unit
spheres
dimension
generated
sphvol
const
double
unitspherevolumes
0
000000
dimension
0
2
000000
dimension
1
3
141593
dimension
2
4
188790
dimension
3
4
934802
dimension
4
5
263789
dimension
5
5
167713
dimension
6
4
724766
dimension
7
4
058712
dimension
8
3
298509
dimension
9
2
550164
dimension
10
1
884104
dimension
11
1
335263
dimension
12
0
910629
dimension
13
0
599265
dimension
14
0
381443
dimension
15
0
235331
dimension
16
0
140981
dimension
17
0
082146
dimension
18
0
046622
dimension
19
0
025807
dimension
20
0
013949150409021
dimension
21
0
00737043094571435
dimension
22
0
003810656386852123
dimension
23
0
001929574309403922
dimension
24
0
000957722408823172
dimension
25
0
0004663028057676124
dimension
26
0
0002228721247212739
dimension
27
0
0001046381049248456
dimension
28
0
00004828782273891741
dimension
29
0
0000219153534478302
dimension
30
9
78713994673736e
6
dimension
31
4
303069587032944e
6
dimension
32
1
863467088262139e
6
dimension
33
7
952054001475507e
7
dimension
34
3
34528829410897e
7
dimension
35
1
387895246221376e
7
dimension
36
5
680828718331176e
8
dimension
37
2
294842899726985e
8
dimension
38
9
15223065015956e
9
dimension
39
3
604730797462499e
9
dimension
40
1
4025649060732e
9
dimension
41
5
392664662608125e
10
dimension
42
2
049436095396476e
10
dimension
43
7
700707130601349e
11
dimension
44
2
861552613910809e
11
dimension
45
1
051847171693205e
11
dimension
46
3
82546071052037e
12
dimension
47
1
37686472803774e
12
dimension
48
4
905322148884565e
13
dimension
49
1
730219245836109e
13
dimension
50
6
043342755461587e
14
dimension
51
2
090632335314767e
14
dimension
52
7
164423095729519e
15
dimension
53
2
432561179993387e
15
dimension
54
8
18461780536469e
16
dimension
55
2
729327261598193e
16
dimension
56
9
02201234027155e
17
dimension
57
2
956701542854908e
17
dimension
58
9
6079619284046e
18
dimension
59
3
09625061529686e
18
dimension
60
9
89649265909715e
19
dimension
61
3
137792963448226e
19
dimension
62
9
87007893146823e
20
dimension
63
3
08052103826709e
20
dimension
64
define
unitspherevolume
unitspherevolumes
numdims
0
fast
approximation
volume
bounding
sphere
given
rect
paul
rectreal
rtreerectsphericalvolume
struct
rect
register
struct
rect
register
int
rectreal
maxsize
rectreal
0
size
assert
undefined
return
rectreal
0
0
iboundary
numdims
boundary
size
maxsize
maxsize
size
return
rectreal
pow
maxsize
2
numdims
unitspherevolume
endif
exact
volume
bounding
sphere
given
rect
rectreal
rtreerectsphericalvolume
struct
rect
register
struct
rect
register
int
register
double
sum
squares
0
radius
assert
undefined
return
rectreal
0
0
iboundary
numdims
boundary
2
sum
squares
half
extent
half
extent
radius
sqrt
sum
squares
return
rectreal
pow
radius
numdims
unitspherevolume
calculate
dimensional
surface
area
rectangle
rectreal
rtreerectsurfacearea
struct
rect
register
struct
rect
register
int
register
rectreal
sum
rectreal
0
assert
undefined
return
rectreal
0
0
iboundary
numdims
boundary
face
area
extent
sum
face
area
return
2
sum
combine
two
rectangles
make
one
includes
struct
rect
rtreecombinerect
struct
rect
struct
rect
rr
register
struct
rect
rr
rr
register
int
struct
rect
new
rect
assert
rr
undefined
return
rr
undefined
rr
return
0
numdims
new
rect
boundary
min
boundary
rr
boundary
numdims
new
rect
boundary
max
boundary
rr
boundary
return
new
rect
decide
whether
two
rectangles
overlap
int
rtreeoverlap
struct
rect
struct
rect
register
struct
rect
register
int
assert
0
iboundary
boundary
boundary
boundary
return
false
return
true
decide
rectange
sphere
overlap
written
chen
li
bool
rtreeoverlapsphere
struct
rect
struct
point
point
float
radius
register
struct
rect
register
int
assert
point
compute
mindist
float
squaresum
0
register
int
0
numdims
int
low
high
numdims
float
diff
0
point
position
boundary
low
diff
boundary
low
point
position
low
else
point
position
boundary
high
diff
boundary
high
point
position
else
diff
0
squaresum
diff
diff
float
mindist
sqrt
squaresum
return
mindist
position
p2
position
return
running
break
case
l2
0
iposition
p2
position
running
diff
diff
distance
sqrt
running
return
distance
break
case
lmax
0
iposition
p2
position
running
diff
running
diff
return
running
float
distance
struct
point
struct
rect
int
dist
func
register
struct
point
register
struct
rect
register
float
distance
register
float
diff
register
float
running
0
0
register
int
switch
dist
func
case
l1
0
iposition
boundary
running
boundary
position
else
position
boundary
numdims
running
position
boundary
numdims
return
running
break
case
l2
0
iposition
boundary
diff
boundary
position
running
diff
diff
else
position
boundary
numdims
diff
position
boundary
numdims
running
diff
diff
distance
sqrt
running
return
distance
break
case
lmax
0
iposition
boundary
diff
boundary
position
running
diff
running
diff
else
position
boundary
numdims
diff
position
boundary
numdims
runningposition
boundary
dist
array
boundary
position
else
position
boundary
numdims
dist
array
position
boundary
numdims
else
boundary
position
boundary
numdims
dist
array
0
distance
computedistance
dist
array
dist
func
distance
max
distance
return
false
else
return
true
decide
whether
rectangle
contained
rectangle
int
rtreecontained
struct
rect
struct
rect
register
struct
rect
register
int
result
assert
int
int
undefined
rect
contained
undefined
return
true
rect
except
undefined
one
contained
undef
rect
undefined
return
false
result
true
0
numdims
numdims
index
high
sides
result
result
boundary
boundary
boundary
boundary
return
result
static
int
ispoint
struct
rect
rect
struct
point
center
rect
int
0
iboundary
position
return
0
return
1
double
knndis
struct
point
point
struct
rect
rect
int
dist
func
ispoint
rect
point
center
rect
return
distance
point
dist
func
else
return
distance
point
rect
dist
func
