research projects uci system test laboratory 
projects 
xxxxxx
uci
system
test
laboratory
xxxxxx
research
projects
testing
home
projects
publications
links
hardware
software
covalidation
hardware
software
system
can
defined
one
hardware
software
must
designed
together
must
interact
properly
implement
system
functionality
widespread
use
systems
cost
critical
life
critical
applications
motivates
need
systematic
approach
verify
functionality
order
manage
complexity
problem
many
researchers
investigating
covalidation
techniques
functionality
verified
simulating
emulating
system
description
given
test
input
sequence
tractability
covalidation
makes
practical
solution
many
real
designs
practical
difficulty
validation
hardware
software
systems
wide
gap
hardware
design
software
engineering
communities
design
system
lack
communication
hardware
software
design
groups
causes
system
defects
discovered
late
design
process
requiring
costly
redesign
covalidation
brings
together
hardware
validation
software
testing
approaches
address
hardware
software
covalidation
problem
uniform
approach
behavioral
design
validation
design
validation
simulation
based
techniques
common
approach
hardware
verification
due
computational
complexity
formal
techniques
validation
entails
generation
test
pattern
sequence
applied
design
simulation
trigger
erroneous
behavior
since
simulation
can
performed
small
subset
entire
space
test
sequences
method
needed
estimate
degree
verification
achieved
given
test
sequence
degree
verification
afforded
test
sequence
must
known
order
direct
test
pattern
generation
provide
designer
knowledge
verification
goals
achieved
research
software
testing
produces
several
validation
metrics
operate
behavioral
level
including
simple
metrics
statement
branch
coverage
well
complex
metrics
based
mutation
dataflow
analysis
investigating
application
software
testing
metrics
measure
hardware
validation
coverage
also
developing
metrics
enable
detection
faults
associated
concurrency
timing
testing
fpga
architectures
ic
densities
increasing
cluster
based
fpga
architectures
becoming
architecture
choice
major
fpga
manufacturers
cluster
based
architecture
one
several
logic
blocks
grouped
together
coarse
grained
logic
block
high
density
local
interconnect
serves
improve
fpga
utilization
also
greatly
complicates
fpga
interconnect
testing
problem
developed
hierarchical
approach
define
set
fpga
configurations
enable
interconnect
faults
detected
technique
applicable
cluster
based
fpga
architecture
enables
detection
bridging
faults
involving
intra
cluster
interconnect
extra
cluster
interconnect
hierarchical
structure
cluster
based
tile
exploited
define
intra
cluster
configurations
separately
extra
cluster
configurations
thereby
improving
efficiency
configuration
definition
process
guaranteeing
intra
cluster
extra
cluster
configurations
several
test
transparency
properties
hierarchical
fault
detectability
ensured
