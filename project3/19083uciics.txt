providing customer functionality 
phase 2 providing customer functionality 
providing
customer
functionality
phase
2
overview
now
fabflixs
database
built
add
functions
allow
customers
browse
movies
available
purchase
search
movies
specific
criteria
add
movies
purchased
shopping
cart
check
purchase
movies
via
credit
card
references
tomcat
home
page
instructor
ta
advise
refining
requirements
sql
section
postgresql
manual
java's
jsp
example
tutorial
java's
servlet
api
documentation
follow
javax
servlet
links
marty
hall's
tutorials
servlets
jsp
jdbc
sample
servlet
retrieves
current
time
server
sample
servlet
retrieves
current
time
server
user
provided
city
sample
servlet
counts
previous
accesses
session
shows
session's
basic
information
sample
servlet
lists
items
shopping
cart
web
sites
movies
dvds
sold
see
competition
things
turn
war
file
labeled
team
name
extension
war
root
directory
war
hierarchy
also
team
name
structure
war
files
create
discussed
use
conventions
database
submit
database
name
fabflixs
user
database
testuser
password
testpass
sure
include
source
code
files
java
files
war
directory
sources
within
web
inf
subdirectory
readme
file
explaining
compile
load
otherwise
prepare
system
use
run
development
tool
constraints
addition
technologies
used
html
java
jsp
sessions
servlets
deployed
via
tomcat
may
use
client
side
scripting
programming
languages
javascript
php
embedded
java
style
sheets
find
appropriate
may
use
different
server
side
technologies
instructor's
permission
program
must
work
postgresql
database
schema
developed
phase
1
functional
requirements
actual
development
effort
functional
look
feel
requirements
fabflixs's
customer
functions
specified
every
particular
purposely
left
requirements
high
level
want
use
skills
experience
reasoned
judgment
refine
requirements
feel
free
ask
instructor
ta
advice
project
manager's
permission
can
enhance
specifications
potential
additional
credit
careful
including
additional
features
work
will
detract
score
overall
system
must
course
behave
specified
also
appealing
easy
use
consist
user
interface
appropriate
error
handling
specific
correct
error
messages
actions
main
page
first
page
user
encounters
main
page
customer
can
choose
either
search
movies
browse
movies
go
login
page
attempt
bypass
page
thwarted
anyone
going
directly
another
page
site
redirected
note
specifically
user
need
log
look
movies
fabflixs
offer
browsing
browsing
selected
user
chooses
browse
title
browse
genre
first
case
movies
will
listed
movie
list
page
described
ascending
order
title
within
title
descending
order
year
title
ordering
case
insensitive
desired
required
full
credit
list
numerals
letters
top
screen
one
clicked
positions
user
movie
list
first
movie
starts
numeral
letter
second
case
list
genres
appears
user
selects
one
genres
sorted
case
insensitve
order
two
genres
without
regard
case
listed
helps
us
avoid
problems
somehow
multiple
identical
genres
got
database
movie
list
page
appears
consisting
movies
associated
genre
genres
except
case
listed
ascending
order
title
searching
search
selected
customer
taken
search
page
customer
can
search
movies
combination
following
attributes
criterion
can
one
words
words
separated
space
words
must
matched
movie
selected
criteria
multiple
attributes
given
results
match
selected
criteria
logical
titleyeardirectorstar's
name
matching
case
insensitive
search
term
partial
example
query
asking
term
title
attribute
return
movies
term
substring
title
terms
endearment
terminator
end
term
endear
term
find
terms
endearment
termites
mendearia
name
fields
two
parts
director's
name
star's
name
look
parts
match
movies
appear
movie
list
page
described
ascending
order
title
two
movies
title
within
title
sorted
descending
order
year
movie
list
page
movie
list
includes
list
movies
come
browse
title
browse
genre
search
move
list
ordered
alphabetically
title
first
20
movies
list
less
20
match
selection
criteria
appear
item
list
contains
title
linked
movie's
single
move
screen
see
yeardirectorlist
genreslist
stars
linked
star's
single
star
page
see
add
shopping
chart
button
described
elsewhere
names
appear
natural
order
example
listing
director's
name
show
rest
name
last
name
order
label
attribute
user
knows
looking
exact
format
standard
one
columnar
attribute
column
sublists
genres
stars
appearing
together
column
column
labeled
head
user
can
re
sort
list
title
year
director
clicking
column
heading
attribute
repeated
clicks
alternate
sorting
ascending
descending
order
instance
sort
director
one
click
column's
heading
first
click
sort
ascending
order
second
click
descending
order
third
back
ascending
order
first
20
items
newly
sorted
list
displayed
current
20
items
new
order
20
movies
list
previous
next
buttons
available
scroll
backward
forward
list
respectively
20
movies
time
show
previous
button
start
list
show
next
button
end
information
single
movie
user
clicks
movie
movie
list
corresponding
single
movie
page
appears
displaying
title
year
director
list
genres
poster
list
stars
star
link
single
star
page
link
preview
trailer
also
add
shopping
cart
button
url
poster
point
valid
graphic
either
display
anything
wish
display
available
graphic
design
user
clicks
star
movie
corresponding
single
star
page
displays
star's
name
date
birth
picture
star
title
movies
star
acted
linked
appropriate
single
movie
page
star's
picture
available
link
broken
points
something
valid
gaphic
just
display
anything
wish
display
available
graphic
design
login
page
users
reach
login
page
either
main
page
clicking
shopping
cart
without
already
logged
login
asks
user
existing
customer
new
customer
former
user
asked
email
address
serves
login
id
password
user
new
customer
login
asks
customer's
first
last
names
email
address
password
latter
typed
twice
verify
users
enter
correct
login
errors
prevent
registering
allowed
try
limited
number
times
limit
reached
polite
message
given
user
kicked
back
main
fabflixs
page
make
sure
user
name
password
appear
address
bar
otherwise
visible
web
page
addresses
hint
use
http
post
instead
http
get
appropriate
error
checking
registration
must
done
instance
person
tries
register
email
address
already
file
told
politely
asked
existing
password
user
forgotten
password
directed
call
fabflixs
hotline
1
800
fab
flix
send
email
fabflixs
help
fabflixs
com
representatives
will
reset
password
web
based
mechanisms
handling
issue
slated
future
release
registered
successfully
user
logged
processing
proceeds
user
goes
shopping
cart
login
page
called
otherwise
goes
back
page
came
shopping
cart
user
clicks
add
shopping
cart
button
associated
dvd
necessary
logging
accomplished
previously
selected
dvd
session
dvd
added
cart
default
quantity
1
obviously
dvd's
title
quantity
identifying
information
find
appropriate
shown
dvd
already
shopping
cart
quantity
increased
1
either
case
user
remains
shopping
cart
cursor
set
quantity
field
dvd
user
can
now
change
quantity
field
directly
user
changes
quantity
zero
verify
intent
delete
dvd
shopping
cart
return
cart
displaying
contents
check
pages
except
login
page
prominent
checkout
button
user
leaves
fabflixs
site
without
checking
session
information
saved
tracking
number
visits
related
information
may
added
future
button
pressed
least
one
dvd
shopping
cart
customer
information
page
appears
displays
information
movie
shopping
cart
including
quantity
purchased
line
item
price
19
95
times
number
dvds
total
purchase
amount
also
shown
user
allowed
update
yet
present
provide
credit
card
number
card's
expiration
date
name
credit
card
holder
error
expiration
date
whether
just
now
entered
already
file
earlier
today's
date
user
told
expiration
date
unacceptable
allowed
re
enter
user
also
shown
file
address
allowed
update
user
can
also
enter
shipping
address
left
blank
customer
address
shipping
address
shipping
address
attributes
address
customer
table
note
address
virtually
anywhere
world
user
clicks
button
confirm
data
correct
time
prior
point
user
can
abandon
purchase
leaving
page
credit
card
number
card
holder
name
expiration
date
total
sent
yet
chosen
credit
card
verification
site
phase
assume
data
entered
accurate
credit
purchase
authorized
place
order
information
sales
table
shipping
department's
systems
will
retrieve
process
order
update
inventory
records
confirm
user
via
screen
order
processed
system
flow
summarized
following
diagram
tomcat
war
files
discussed
phase
0
tomcat
deploys
war
files
war
file
compressed
directory
hierarchy
actually
java
jar
file
meets
additional
requirements
tomcat
lays
make
proper
war
file
requires
understanding
basics
hierarchy
describe
using
tomcattest
war
file
used
phase
0
illustrate
can
look
contents
tomcattest
war
files
general
couple
ways
deploying
war
action
decompresses
war
file
stores
default
program
files
apache
software
foundation
tomcat
6
0
webapps
tomcattest
decompressing
war
file
command
line
jar
xvf
tomcattest
war
xvf
switch
means
expand
verbose
telling
us
going
file
immediately
follows
action
places
war's
contents
directory
command
run
root
directory
discussed
decompress
tomcattest
war
refer
resulting
directory
hierarchy
follow
discussion
see
war
files
laid
directory
hierarchy
war
must
following
structure
root
directory
folder
files
directories
make
suite
programs
pages
etc
together
provide
servlet's
functionality
along
descriptive
information
used
deploy
servlet
via
tomcat
name
war
file
example
tomcattest
typically
stored
directly
root
directory
static
web
pages
public
jsp
files
html
css
jsp
files
common
file
must
directly
accessible
browser
must
folder
directories
files
can
appear
needed
certain
ones
almost
always
included
discussed
files
directories
tomcattest
file
folder
except
web
inf
folder
visible
web
can
accessed
issuing
url
leads
folder
file
instance
http
localhost
8080
tomcattest
index
html
will
show
tomcattest's
index
page
try
root
directory
web
inf
java
classes
libraries
source
code
implement
dynamic
content
web
application
contents
visible
web
root
directory
web
inf
class
class
files
make
servlet
browser
will
look
class
filess
load
run
note
tomcattest
class
resides
root
directory
web
inf
lib
libraries
jar
files
needed
running
servlet's
class
files
note
since
tomcattest
servlet
talks
postgresql
database
java
servlet
postgresql
jdbc
jars
file
root
directory
web
inf
sources
source
code
files
used
development
servlet
case
tomcattest
java
tomcattest
class
also
result
compiling
tomcattest
java
class
files
needed
servlet
operation
need
placed
class
folder
file
root
directory
web
xml
contains
information
tomcat
needs
deployment
servlet
must
conform
tomcat's
requirements
war
acceptable
tomcat
file
tells
tomcat
name
web
page
hosts
servelet
names
classes
class
folder
part
servlet
mapping
directory
servlet
code
resides
url
will
used
access
open
web
xml
get
idea
done
creating
fabflixs
war
file
easiest
way
make
fabflixs
war
file
use
tomcattest
directory
hierarchy
starting
place
make
copy
hierarchy
change
root
directory
name
team
name
update
web
xml
reflect
name
servlet
descriptive
name
appear
tomcat
management
page
tags
file
easy
determine
comments
bit
experimenting
add
remove
files
needed
contain
phase
2
work
compile
java
files
see
next
paragraph
create
war
see
paragraph
tell
tomcat
deploy
use
procedure
used
phase
0
except
give
name
war
use
browser
access
using
url
designations
gave
webinf
xml
compile
java
servlet
program
must
include
classpath
file
servlet
api
jar
will
find
file
among
places
lib
directory
folder
installed
tomcat
path
typically
program
files
apache
software
foundation
tomcat
6
0
lib
servlet
api
jar
will
also
need
include
postgresql
jdbc
jar
installed
phase
0
added
classpath
need
nothing
example
compile
java
program
fabflixs
java
jdbc
jar
already
classpath
servlet
jar
issue
command
one
line
javac
classpath
classpath
program
files
apache
software
foundation
tomcat
6
0
lib
servlet
api
jar
fabflixs
java
package
hierarchy
war
issue
following
command
inside
root
directory
hierarchy
creating
war
outside
root
directory
sometimes
produces
war
deployed
tomcat
provide
correct
directory
hierarchy
jar
cvf
filename
war
note
end
line
refers
current
directory
cvf
compress
verbose
telling
us
going
file
name
immediately
follows
name
filename
war
placed
current
directory
war
tell
tomcat
deploy
since
deployed
tomcat
directories
accessible
need
fix
bug
make
change
code
probably
will
can
directly
deployed
directory
make
change
recompile
code
since
already
deployed
just
reload
using
tomcat
reload
command
ready
test
forget
reload
tomcat
will
use
original
file
modified
one
approach
much
easier
fixing
problem
original
directory
hierarchy
recompiling
making
new
war
file
unloading
existing
servlet
deploying
new
war
file
careful
corrupt
structure
deployed
directory
will
need
remove
existing
servlet
make
deploy
new
war
demonstration
prepare
demo
war
file
turned
stored
demonstration
machine
also
postgresql
server
running
demo
begins
will
ask
deploy
war
file
via
tomcat
demonstrate
correctness
completeness
performance
customer
functions
task
convince
us
15
minutes
work
well
completely
done
fabflixs
project
ready
move
phase
3
written
ics185
winter
2005
project
2
chen
li
revised
norman
jacobson
ics185
spring
2005
norman
jacobson
march
2005
revised
norman
jacobson
clarify
requirements
update
links
add
reorganize
information
tomcat
march
2007
incorporates
information
added
winter
2007
version
project
2
chen
li
shengyue
ji
revised
include
detail
clearer
discussion
sale
quantity
shipping
address
reflect
now
stored
sales
table
norman
jacobson
september
2007
removed
sorting
genres
stars
within
movie
list
archane
now
one
genre
selected
movies
displayed
rather
movies
listed
genre
order
login
logic
simplified
specs
added
movie
star
poster
unavailable
invalid
norman
jacobson
december
2007
correction
minor
typos
norman
jacobson
september
october
2008
added
read
file
requirement
norman
jacobson
december
2008
minor
updates
reflect
postgresql
8
3
7
norman
jacobson
march
2009
