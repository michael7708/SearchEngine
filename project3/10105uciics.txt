ics 260 fundamentals design analysis algorithms 
ics 260 fundamentals algorithms 
ics
260
fundamentals
design
analysis
algorithms
fall
2002
eppstein
instructor
david
eppstein
cs
358d
949
824
6384
eppstein
ics
uci
edu
office
hours
appointment
call
send
email
set
time
will
usually
available
immediately
class
class
meeting
tuesdays
thursdays
12
30
1
50pm
ierf
b015
adds
drops
etc
plenty
seats
classroom
will
happy
add
class
first
week
may
drop
course
time
sixth
week
classes
course
text
required
text
material
will
taken
following
books
amo
ahuja
magnanti
orlin
network
flows
prentice
hall
1993
clrs
cormen
leiserson
rivest
stein
introduction
algorithms
see
also
online
errata
gj
garey
johnson
computers
intractability
guide
theory
np
completeness
freeman
company
1979
papadimitriou
computational
complexity
addison
wesley
1994
addition
course
notes
available
online
please
aware
notes
previous
offering
260
although
cover
roughly
material
expect
necessarily
emphasis
responsible
material
covered
lecture
even
covered
course
notes
coursework
grading
due
lack
teaching
assistance
course
will
required
homeworks
however
may
find
helpful
study
prof
dillencourt's
homeworks
last
winter
graded
courseworks
will
consist
two
midterms
worth
30
grade
comprehensive
final
exam
worth
40
note
reserve
right
assign
failing
grade
student
performs
extremely
poorly
final
exam
irrespective
performance
midterms
similarly
reserve
right
assign
student
performs
extremely
well
final
exam
higher
grade
course
average
dictate
exams
closed
book
sharing
copying
answers
allowed
violating
honesty
policy
will
result
failing
class
schedule
week
1
review
notation
algorithm
analysis
graphs
graph
representation
traversal
see
also
guido
van
rossum's
essay
graph
representation
python
week
2
shortest
paths
week
3
network
flow
week
4
matching
midterm
week
5
dynamic
programming
longest
common
subsequences
change
making
problem
optimal
triangulation
week
6
greedy
algorithms
huffman
coding
minimum
spanning
trees
approximate
traveling
salesman
set
cover
week
7
linear
programming
week
8
midterm
np
completeness
definitions
week
9
np
completeness
cook's
theorem
satisfiability
thanksgiving
day
week
10
np
completeness
example
reductions
case
study
truck
scheduling
algorithms
branch
bound
friday
dec
13
10
30
12
30
final
exam
sample
exams
fall
2001
offering
ics
260
first
midterm
solutions
second
midterm
solutions
final
exam
solutions
eppstein
ics
uc
irvine
