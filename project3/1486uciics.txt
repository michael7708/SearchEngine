netgames 2002 summaries 
summary netgames 02 papers 
summary
selected
papers
mmog
architecture
netgames
2002
conference
aarhus
et
al
generalized
two
tier
relevance
filtering
computer
game
update
events
two
tiered
means
network
communication
limited
dedicated
concentrator
layer
tcp
consistency
within
server
layer
requires
pass
world
state
servers
clients
connect
concentrators
based
network
topology
position
game
world
concentrators
constructed
application
independent
dead
reckoning
schemes
clients
connect
concentrator
server
logic
hence
client
connection
never
lost
game
server
crashes
bharambe
et
al
mercury
scalable
publish
subscribe
system
internet
games
distributed
content
based
publish
subscribe
system
subscription
language
expressive
enough
allow
game
specific
subscriptions
eg
10
20
0
hub
efficient
relaying
event
hub
routing
mechanism
based
circle
modular
software
hubs
hub
storing
subscriptions
evaluation
network
topology
simulator
nodes
randomly
assigned
hubs
unrealistic
metrics
number
publications
routed
node
nodes
end
routing
load
ie
scalability
achieved
number
subscriptions
stored
node
virtual
world
square
hence
central
zone
receives
players
subscriptions
peripheral
zones
delay
publication
reach
interested
subscribers
increases
linearly
number
nodes
scalable
cronin
et
al
efficient
synchronization
mechanism
mirrored
game
architectures
trailing
state
synchronization
tss
optimistic
algorithm
execute
commands
received
rollback
late
messages
received
tss
runs
delayed
trailing
copy
live
game
state
trailing
copy
able
re
order
messages
execute
chronological
order
cheaper
execute
command
multiple
times
make
snapshots
game
state
preserving
random
events
hard
farber
network
game
traffic
modelling
traffic
modeling
logs
36
hour
lan
matches
8
30
players
server
sends
16kbps
client
client
sends
1
kbps
server
client
server
receive
20
25
packets
sec
packet
size
varies
lot
probability
density
function
client
server
server
client
packet
size
latency
modeled
extreme
value
distribution
exp
exp
long
tail
behavior
fiedler
et
al
communication
architecture
massive
multiplayer
games
world
cut
rectangle
hexagon
tiles
players
subscribe
current
tiles
adjacent
closest
current
tile
corner
tile
contains
environment
interaction
channel
environment
channel
static
data
static
objects
generate
bandwidth
someone
interacts
static
object
interact
static
objects
consumes
low
bandwidth
uses
tcp
interaction
channel
active
objects
active
objects
interact
static
active
objects
tiles
managed
one
servers
relationship
server
provides
constant
data
terrain
objects
within
map
server
cares
environment
channel
collision
detection
clients
scales
number
tiles
number
clients
authoritative
objects
machine
instantiates
clients
duplicates
proxies
collision
detection
object
object
interactions
calculated
clients
affected
object
instances
publish
updates
interaction
channel
object's
current
tile
griwodz
et
al
state
replication
multiplayer
games
player
player
interactions
require
low
latency
high
urgency
case
congestion
less
urgent
events
may
dropped
results
game
lower
quality
still
running
rare
player
environment
actions
require
high
reliability
game
designers
define
build
game
actions
urgent
relevant
clients
connect
nearby
proxy
proxies
interconnected
participants
belong
target
groups
target
group
can
contacted
channel
overlay
network
proxies
distribute
events
target
group
members
henderson
observations
game
server
discovery
mechanisms
analyzing
network
traffic
know
fps
servers
work
game
servers
register
server
directories
client
gets
server
list
directory
using
udp
structure
napster
method
3
half
life
us
server
directories
queried
four
times
day
month
problem
directories
single
points
failure
stale
information
70
servers
active
anymore
redundant
info
90
servers
register
directories
congestion
control
mauve
et
al
generic
proxy
system
networked
computer
games
move
intelligence
server
functionality
border
network
server
functionality
can
delegated
proxies
proxies
located
close
players
need
isp
support
therefore
execute
client
code
well
anti
cheat
proxies
can
reduce
server
load
packet
processing
filtering
overlay
network
enables
traffic
rerouting
around
congested
areas
network
fault
detection
node
failure
recovery
