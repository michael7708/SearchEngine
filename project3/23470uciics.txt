ics31 w13 quiz 4 
quiz 4 
ics
31
winter
2013
quiz
4
shaded
portions
code
indicate
type
belongs
space
choose
int
float
str
bool
restaurant
list
matter
text
shading
barely
visible
def
nonvowels
str
str
'''
return
string
containing
nonvowels
'''
result
''
vowel
result
return
resultassert
nonvowels
assert
nonvowels
eieio
answer
feedback
nonvowels
str
bool
str
nonvowels
assertions
bool
str
shaded
portions
code
indicate
type
belongs
space
choose
int
float
str
bool
restaurant
list
def
cheapest
list
restaurant
'''
return
restaurant
lowest
price
parameter
'''
return
none
sort
key
restaurant
price
return
0
assert
cheapest
rl
r10
assert
cheapest
r24
r25
r26
r24
answer
feedback
cheapest
list
restaurant
cheapest
assertions
list
restaurant
restaurant
code
draw
variety
figures
using
turtle
graphics
however
need
know
turtle
graphics
operations
answer
question
function
definitions
missing
incomplete
none
missing
details
necessary
answer
question
def
draw
'''
draw
variety
figures
question
asks
count
total
number
eyes
drawn
'''
draw
eye
200
200
draw
martian
face
0
0
draw
martian
face
100
100
def
draw
martian
face
int
int
'''
draw
centered
martian
face
three
eyes
'''
draw
head
draw
nose
draw
mouth
50
draw
eye
50
20
draw
eye
20
draw
eye
50
20
def
draw
eye
int
int
none
'''
draw
eye
centered
'''
body
omitted
draw
call
function
draw
many
times
total
eye
get
drawn
answer
feedback
7
circle
indicate
way
last
call
draw
eye
gets
executed
complete
call
draw
answer
feedback
last
call
draw
eye
draw
martian
face
cost
framing
picture
depends
material
used
frame
size
picture
function
fill
blanks
one
string
number
operator
identifier
variable
function
method
name
per
blank
according
description
given
def
price
per
inch
material
str
float
'''
parameter
'maple'
return
2
95
'laquer'
return
3
50
'aluminum'
return
1
25
otherwise
return
0
'''
return
2
95
elif
return
3
50
elif
return
1
25
else
return
answer
feedback
def
price
per
inch
material
str
float
'''
parameter
'maple'
return
2
95
'laquer'
return
3
50
'aluminum'
return
1
25
otherwise
return
0
'''
material
'maple'
return
2
95
elif
material
'laquer'
return
3
50
elif
material
'aluminum'
return
1
25
else
return
0assert
price
per
inch
'bamboo'
0
assert
price
per
inch
'laquer'
3
50
function
header
docstring
describing
task
first
write
two
assert
statements
give
examples
calling
function
correct
results
examples
complete
definition
according
docstring
parameter
types
given
def
material
needed
height
float
width
float
float
'''
given
height
width
picture
inches
return
number
inches
framing
material
required
four
sides
picture
course
'''answer
feedback
def
material
needed
height
float
width
float
float
'''
given
height
width
picture
inches
return
number
inches
framing
material
required
four
sides
picture
course
'''
return
height
2
width
2
assert
material
needed
10
5
30
assert
material
needed
25
30
110
function
described
first
write
two
assert
statements
examples
tests
operation
complete
function
definition
according
description
appropriate
call
functions
defined
def
frame
cost
height
float
width
float
material
str
float
'''
return
cost
framing
picture
whose
size
framing
material
specified
parameters
'''answer
feedback
def
frame
cost
height
float
width
float
material
str
float
'''
return
cost
framing
picture
whose
size
framing
material
specified
parameters
'''
return
price
per
inch
material
material
needed
height
width
assert
frame
cost
10
5
'laquer'
30
3
50
assert
frame
cost
25
30
'maple'
110
2
95
solution
call
two
functions
correctly
instead
duplicates
computation
two
functions
get
full
credit
