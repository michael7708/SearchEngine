
unittest cc 
id
unittest
cc
4025
2008
10
01
00
01
14z
abehm
copyright
2007
regents
university
california
redistribution
file
permitted
terms
bsd
license
date
04
15
2008
author
rares
vernica
include
include
include
include
include
simmetric
using
namespace
std
void
testsimmetric
uint
0
gramgen
new
gramgenfixedlen
1
simmetric
sim
new
simmetriced
vector
push
back
abc
push
back
ab
push
back
ac
push
back
bc
push
back
push
back
push
back
push
back
abcdef
push
back
xyz
push
back
bac
push
back
acb
push
back
ba
const
uint
12
uint
ed
0
1
1
1
2
2
2
3
3
2
2
2
1
0
1
2
1
1
2
4
3
2
1
2
1
1
0
1
1
2
1
4
3
1
1
2
1
2
1
0
2
1
1
4
3
1
2
1
2
1
1
2
0
1
1
5
3
2
2
1
2
1
2
1
1
0
1
5
3
2
2
1
2
2
1
1
1
1
0
5
3
2
2
2
3
4
4
4
5
5
5
0
6
5
4
5
3
3
3
3
3
3
3
6
0
3
3
3
2
2
1
1
2
2
2
5
3
0
2
1
2
1
1
2
2
2
2
4
3
2
0
3
2
2
2
1
1
1
2
5
3
1
3
0
uint
0
uint
0
cout
ed
sim
operator
endl
assert
sim
operator
ed
assert
sim
operator
ed
ed
0
assert
sim
operator
ed
1
delete
sim
sim
new
simmetricednorm
uint
0
uint
0
cout
1
static
cast
ed
max
length
length
sim
operator
endl
assert
sim
operator
1
static
cast
ed
max
length
length
epsilon
assert
sim
operator
1
static
cast
ed
max
length
length
numeric
limits
epsilon
ed
0
assert
sim
operator
1
static
cast
ed
max
length
length
numeric
limits
epsilon
uint
edswap
0
1
1
1
2
2
2
3
3
1
1
2
1
0
1
2
1
1
2
4
3
2
1
1
1
1
0
1
1
2
1
4
3
1
1
2
1
2
1
0
2
1
1
4
3
1
2
1
2
1
1
2
0
1
1
5
3
2
2
1
2
1
2
1
1
0
1
5
3
2
2
1
2
2
1
1
1
1
0
5
3
2
2
2
3
4
4
4
5
5
5
0
6
4
4
5
3
3
3
3
3
3
3
6
0
3
3
3
1
2
1
1
2
2
2
4
3
0
2
1
1
1
1
2
2
2
2
4
3
2
0
3
2
1
2
1
1
1
2
5
3
1
3
0
sim
new
simmetricedswap
uint
0
uint
0
cout
edswap
sim
operator
endl
assert
sim
operator
edswap
assert
sim
operator
edswap
edswap
0
assert
sim
operator
edswap
1
sim
new
simmetricjacc
float
jc
1
2
3
2
3
2
3
1
3
1
3
1
3
5
0
1
1
2
3
2
3
1
1
3
1
3
5
5
0
1
3
0
2
3
2
3
1
2
3
1
3
1
1
3
5
0
5
1
3
0
2
3
2
3
1
3
2
3
1
3
1
3
1
0
5
5
1
3
0
2
3
2
3
1
3
1
3
5
5
0
1
0
0
1
6
0
1
3
1
3
5
1
3
5
0
5
0
1
0
1
6
0
1
3
1
3
5
1
3
0
5
5
0
0
1
1
6
0
1
3
1
3
0
5
1
3
1
3
1
3
1
6
1
6
1
6
1
0
5
5
1
3
0
0
0
0
0
0
0
0
1
0
0
0
1
2
3
2
3
2
3
1
3
1
3
1
3
5
0
1
1
2
3
1
2
3
2
3
2
3
1
3
1
3
1
3
5
0
1
1
2
3
2
3
1
1
3
1
3
5
5
0
1
3
0
2
3
2
3
1
uint
0
uint
0
cout
jc
sim
operator
endl
assert
sim
operator
jc
assert
sim
operator
jc
assert
sim
operator
jc
numeric
limits
epsilon
cout
simmetric
endl
int
main
cout
test
endl
testsimmetric
cout
ok
endl
return
0
