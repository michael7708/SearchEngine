
scc py 
path
main
gmane
org
mail
tim
peters
newsgroups
gmane
comp
python
devel
subject
re
garbage
collecting
closures
date
wed
16
apr
2003
00
51
27
0400
lines
185
sender
python
dev
admin
python
org
approved
news
gmane
org
message
id
references
nntp
posting
host
main
gmane
org
mime
version
1
0
content
type
multipart
mixed
boundary
nextpart
000
0006
01c303b2
4fa6cf60
trace
main
gmane
org
1050468747
27594
80
91
224
249
16
apr
2003
04
52
27
gmt
complaints
usenet
main
gmane
org
nntp
posting
date
wed
16
apr
2003
04
52
27
0000
utc
original
python
dev
admin
python
org
wed
apr
16
06
52
25
2003
return
path
original
received
mail
python
org
12
155
117
29
main
gmane
org
esmtp
exim
3
35
1
debian
id
195euh
0007ao
00
wed
16
apr
2003
06
52
25
0200
original
received
localhost
localdomain
127
0
0
1
helo
mail
python
org
mail
python
org
esmtp
exim
4
05
id
195euw
0000az
00
wed
16
apr
2003
00
53
06
0400
original
received
bay0
smtp09
bay0
hotmail
com
65
54
241
116
helo
bay0
smtp09
adinternal
hotmail
com
mail
python
org
esmtp
exim
4
05
id
195ett
00009s
00
python
dev
python
org
wed
16
apr
2003
00
52
01
0400
originating
ip
204
30
139
38
originating
email
tim
one
msn
com
original
received
cj569191b
204
30
139
38
bay0
smtp09
adinternal
hotmail
com
microsoft
smtpsvc
5
0
2195
5600
tue
15
apr
2003
21
51
28
0700
original
priority
3
normal
msmail
priority
normal
mailer
microsoft
outlook
imo
build
9
0
2416
9
0
2911
0
reply
mimeole
produced
microsoft
mimeole
v6
00
2800
1106
importance
normal
originalarrivaltime
16
apr
2003
04
51
29
0121
utc
filetime
d7df1510
01c303d3
errors
python
dev
admin
python
org
beenthere
python
dev
python
org
mailman
version
2
0
13
101270
precedence
bulk
list
help
list
post
list
subscribe
list
id
python
core
developers
list
unsubscribe
list
archive
xref
main
gmane
org
gmane
comp
python
devel
11663
report
spam
http
spam
gmane
org
gmane
comp
python
devel
11663
guido
glazing
details
now
seems
kernel
useful
cleanup
somehow
hope
someone
will
able
contribute
prototype
code
least
attach
head
start
general
implementation
tarjan's
scc
algorithm
produces
list
sccs
already
topsort
order
tested
enough
tarjan's
algorithm
subtle
user
beware
trygc
function
end
example
application
appears
work
busting
objects
gc
knows
sccs
displaying
requires
python
cvs
new
gc
get
referents
function
note
get
large
scc
start
error
module
imports
sys
ends
scc
due
module
module
sys
module
dict
sys
module
sys
modules
dict
modules
top
level
functions
dict
top
level
functions
point
back
module
dict
via
func
globals
etc
everything
giant
blob
reachable
everything
else
gc
application
probably
better
run
faster
consume
less
memory
dfs
simply
ignored
objects
successors
correctness
harmed
def
started
succs
successors
succs
return
except
objects
successors
longer
considered
singleton
sccs
recursive
call
dfs
need
fiddled
skip
trying
update
id2lowest
id
dfs
changed
return
bool
saying
whether
took
early
return
save
current
work
trying
chase
pointless
things
like
ints
strings
still
pretty
zippy
implements
tarjan's
linear
time
algorithm
finding
maximal
strongly
connected
components
takes
time
proportional
sum
number
nodes
arcs
two
functions
must
passed
constructor
node2id
graph
node
unique
integer
successors
graph
node
sequence
immediate
successor
graph
nodes
call
method
getsccs
iterable
producing
root
nodes
graph
result
list
sccs
list
graph
nodes
partitioning
graph
nodes
reachable
roots
scc
maximal
subset
node
scc
reachable
nodes
scc
note
derived
graph
scc
single
supernode
necessarily
acyclic
else
scc1
scc2
cycle
node
scc1
reachable
node
scc1
scc2
contradicting
scc1
maximal
subset
list
sccs
returned
getsccs
topological
sort
order
wrt
derived
dag
class
scc
object
def
init
self
node2id
successors
self
node2id
node2id
self
successors
successors
def
getsccs
self
roots
import
sys
node2id
successors
self
node2id
self
successors
get
dfsnum
iter
xrange
sys
maxint
next
id2dfsnum
id2lowest
stack
id2stacki
sccs
def
dfs
id
id2dfsnum
id
id2lowest
id
dfsnum
get
dfsnum
id2stacki
id
len
stack
stack
append
id
successors
id
node2id
id
id2dfsnum
first
time
saw
dfs
id
id2lowest
id
min
id2lowest
id
id2lowest
id
else
dfsnum
id2dfsnum
id
dfsnum
dfsnum
id
id2stacki
id2lowest
id
min
id2lowest
id
dfsnum
id2lowest
id
dfsnum
id2stacki
id
scc
id
stack
del
id2stacki
id
scc
append
del
stack
sccs
append
scc
roots
id
node2id
id
id2dfsnum
dfs
id
sccs
reverse
return
sccs
basic
tests
succs
1
2
2
scc
int
lambda
succs
order
roots
listed
matter
get
unique
topsort
regardless
getsccs
1
1
2
getsccs
1
2
1
2
getsccs
2
1
1
2
note
1
reachable
2
giving
2
root
find
1
getsccs
2
2
succs
1
2
2
3
5
3
2
4
4
3
5
2
scc
int
lambda
succs
getsccs
1
1
2
3
4
5
getsccs
range
1
6
1
2
3
4
5
break
link
4
back
2
succs
4
getsccs
1
1
2
3
5
4
test
'basic'
basic
tests
def
test
import
doctest
doctest
testmod
name
'
main
'
test
def
trygc
import
gc
gc
collect
scc
id
gc
get
referents
scc
getsccs
gc
get
objects
len
scc
1
continue
print
scc
len
scc
objects
scc
print
hex
id
type
hasattr
name
print
name
print
