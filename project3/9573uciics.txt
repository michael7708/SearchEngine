ics 52 syllabus winter 2004 
ics 52 
information
computer
science
52
introduction
software
engineering
winter
quarter
2004
location
social
science
hall
100
need
map
tuesday
thursday
2
00
3
20
course
code
36290
discussion
location
sslh
100
monday
wednesday
friday
4
00
4
50
course
code
discussion
section
36291
last
modified
thursday
march
18
2004
new
march
18
2004
due
popular
demand
sample
final
exam
including
answers
now
available
march
16
2004
lecture
notes
week
10
now
available
march
12
2004
final
assignment
test
case
creation
now
available
march
2
2004
solution
midterm
now
available
january
13
2004
want
add
class
can
just
use
tele
will
signing
add
cards
must
add
line
tele
january
8
2004
can
find
helpful
guidelines
composition
good
email
messages
courtesy
ellen
strenski
uci
writing
program
overview
textbooks
schedule
assignments
tas
keeping
touch
computing
disabilities
academic
dishonesty
instructor
professor
richard
taylor
electronic
mail
taylor
sign
ics
uci
edu
office
ics2
203
office
phone
949
824
6429
hours
tuesday
thursday
3
30
4
30pm
please
make
appointments
email
however
order
guarantee
meeting
fax
949
824
1715
mailing
address
department
information
computer
science
university
california
irvine
irvine
california
92697
3425
overview
prerequisite
knowledge
uci
catalog
introduction
concepts
methods
current
practice
software
engineering
study
large
scale
software
production
software
lifecycle
models
organizing
structure
principles
techniques
appropriate
stage
production
laboratory
work
involves
project
illustrating
elements
prerequisite
ics
23
grade
better
addition
skills
concepts
introduced
previous
classes
students
computing
skills
enter
class
learn
independently
first
week
quarter
use
text
editor
word
etc
create
documents
use
drawing
package
power
point
visio
etc
create
graphics
documents
instructional
objectives
course
follows
introduce
discipline
software
engineering
experientially
acquaint
one
version
software
lifecycle
provide
working
knowledge
least
one
reasonable
technique
applied
phase
lifecycle
provide
particular
insight
software
architecture
design
information
hiding
problems
software
analysis
testing
minimum
knowledge
skills
expected
students
receive
passing
grades
software
life
cycle
mastery
knowing
different
life
cycles
appropriateness
different
situations
knowing
basic
principles
software
engineering
separation
concerns
modularity
abstraction
knowing
apply
throughout
software
life
cycle
proficiency
understanding
tradeoffs
relationships
among
various
activities
software
life
cycle
understand
meaning
use
set
basic
software
qualities
requirements
mastery
interviewing
customer
elicit
requirements
writing
textual
non
formal
requirements
document
proficiency
understand
structure
requirements
document
know
appropriate
kinds
information
document
architectural
design
mastery
know
differences
among
interaction
patterns
set
basic
architectural
styles
understand
difference
architecture
module
design
proficiency
choosing
appropriate
architectural
style
particular
problem
module
design
mastery
using
provided
exported
required
imported
interfaces
define
module
boundaries
identifying
defining
modules
design
identifying
defining
abstract
data
types
design
proficiency
applying
coupling
cohesion
fan
fan
creating
uses
comprises
diagrams
exposure
creating
design
nontrivial
sizable
problem
programming
mastery
general
rules
programming
style
clarity
short
rehash
earlier
classes
proficiency
mapping
module
design
onto
implementation
source
code
exposure
using
existing
modules
libraries
implementation
coding
heavy
deadline
requiring
tradeoffs
code
quality
code
functionality
testing
proficiency
testing
program
failures
applying
white
box
testing
short
pieces
code
applying
black
box
testing
short
pieces
code
exposure
understanding
many
dimensions
software
quality
assurance
understanding
inspection
code
walk
process
textbooks
required
software
engineering
6th
edition
ian
sommerville
2001
addison
wesley
85
15
new
bookstore
note
latest
printing
textbook
includes
shrinkwrap
additional
paperback
book
testing
probably
useful
book
required
class
words
can
go
ahead
buy
used
copies
text
include
book
testing
make
sure
get
6th
edition
though
class
notes
will
usually
available
www
class
meeting
used
occasionally
notes
will
available
ahead
time
might
previous
year's
offerings
thus
minor
differences
may
exist
compared
used
class
year
schedule
subject
change
week
date
lecture
topic
schedule
items
assignments
readings
sommerville
unless
noted
otherwise
1
january
13
introduction
chapter
1
skim
2
3
attention
first
2
subsections
skim
4
january
15
processes
continuation
lecture
notes
associated
first
lecture
2
january
20
principles
requirements
engineering
slides
used
keynote
talk
straw
'01
requirements
assignment
issued
chapters
5
6
lighter
7
january
22
requirements
engineering
url
sommerville's
slides
chapter
7
example
requirements
document
fq
02
3
january
27
architectures
chapters
10
key
11
little
lighter
14
january
29
architectures
4
february
3
design
now
live
requirements
assignment
due
design
assignment
issued
chapter
12
february
5
design
continued
monday
examples
module
descriptions
5
february
10
design
review
february
12
date
exam
subject
change
mid
term
exam
midterm
exam
solution
notes
couple
years
ago
6
february
17
ui
design
sommerville's
slides
using
url
now
fixed
chapter
15
ui
design
february
19
continuation
ui
design
7
february
24
pages
452
457
provide
good
material
integration
testing
part
chapter
20
schedule
february
26
integration
testing
implementation
issues
design
arch
module
interfaces
due
implementation
assignment
issued
friday
27th
8
march
2
testing
chapters
19
20
march
4
testing
continued
9
march
9
quality
assurance
implementation
due
testing
assignment
issued
see
especially
section
20
1
2
since
technique
using
testing
assignment
march
11
10
march
16
maintenance
configuration
mgmt
chapter
27
29
march
18
course
review
testing
assignment
due
tbd
exams
march
25
final
exam
1
30p
3
30p
assignments
assessment
aggregate
grade
project
45
midterm
20
final
35
project
consists
four
assignments
relative
weighting
percentage
final
grade
follows
assignment
weight
requirements
10
architecture
module
interfaces
official
requirements
document
ms
word
version
requirements
doc
18
implementation
word
version
official
design
document
word
version
7
testing
word
version
10
specific
assignments
will
placed
web
giving
assignment
required
format
specific
grading
criteria
grade
curve
meaning
will
assert
advance
half
class
will
receive
grades
half
grading
done
based
mastery
material
exhibited
exams
project
everyone
masters
material
well
everyone
will
get
hand
one
master
material
adequately
everyone
receive
late
assignments
will
accepted
unless
legible
excuse
physician
extreme
family
emergency
unless
willing
accept
extreme
penalty
respect
assignment's
grade
teaching
assistant
readers
ta
readers
tbd
keeping
touch
check
web
site
regularly
definitive
location
course
information
announcements
concerning
assignments
will
made
course
mailing
list
will
also
used
make
announcements
provide
instructions
course
mailing
list
will
read
student's
perspective
instructor
ta
readers
can
post
messages
list
students
ask
one
us
question
whose
answer
relevant
rest
class
post
appropriate
material
list
important
note
email
email
send
conjunction
class
must
sent
uci
account
want
response
action
taken
must
use
uci
account
send
email
email
yahoo
hotmail
juno
cox
non
uci
site
will
ignored
computing
computing
will
done
department's
nt
machines
may
use
another
computer
produce
documents
turn
handwritten
assignments
allowed
implementation
work
will
done
java
please
use
computing
equipment
instructional
purposes
also
watch
social
subtleties
electronic
mail
disabilities
student
feels
may
need
accommodation
based
impact
disability
contact
privately
discuss
specific
needs
also
contact
disability
services
center
949
824
7494
soon
possible
better
ensure
accommodations
implementationed
timely
fashion
academic
dishonesty
cheating
ics
52
will
punished
accordance
university
policy
ics
policy
please
familiarize
documents
note
university
policy
states
faculty
responsibility
assigning
appropriate
grade
student
engages
academic
dishonesty
appropriate
grade
class
cheating
wrong
lying
department
information
computer
science
university
california
irvine
ca
92697
3425
