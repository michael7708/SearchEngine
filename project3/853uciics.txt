smart ics core knowledge skills chart bren school information computer sciences 
ics 21 cse 21 
site
will
look
much
better
browser
supports
web
standards
accessible
browser
internet
device
school
bren
ics
mission
dean's
welcome
bren
gift
donald
bren
hall
visit
bren
school
contact
us
equity
diversity
departments
computer
science
informatics
statistics
research
research
areas
research
centers
research
highlights
education
graduate
apply
degrees
tuition
costs
courses
faq
research
areas
policies
forms
contact
counselor
graduate
housing
computing
support
visit
bren
school
undergraduate
computing
support
computer
lab
information
contact
counselor
course
listings
degrees
faq
financial
aid
honors
program
housing
ics
jobs
mentor
program
policies
recently
admitted
student
council
student
life
student
resources
tuition
costs
prospective
undergrad
uci
parents
people
faculty
staff
graduate
students
community
alumni
friends
parent
programs
leadership
council
make
gift
news
get
involved
tech
talks
information
sessions
sponsor
projects
leadership
council
corporate
partners
sponsor
interns
icsjobs
butterworth
competition
bren
school
home
undergraduate
admissions
transfer
students
smart
ics
program
core
knowledge
skills
smart
ics
core
knowledge
skills
chart
core
knowledge
skills
ics
21
cse
21
introduction
computer
science
courses
6d
22
23
51
52
132
sections
catalog
description
course
prerequisites
restrictions
prerequisite
skills
concepts
minimum
knowledge
skills
ics
21
cse
21
catalog
descriptionfirst
three
quarter
introductory
sequence
introduces
fundamental
concepts
related
computer
software
design
construction
develops
initial
design
programming
skills
using
high
level
language
currently
java
introduces
useful
computer
based
tools
analysis
expression
discovery
ics
21
cse
21
course
prerequisitesnone
ics
21
cse
21
restrictionsonly
one
course
ics
21
cse
21
ics
h21
maybe
taken
credit
ics
21
cse
21
knowledge
prerequisites
skills
conceptsthere
course
subject
matter
prerequisites
ics
21
students
computing
skills
enter
class
learn
independently
first
week
quarter
read
send
electronic
mail
locate
view
web
pages
url
using
search
engine
navigate
web
pages
using
web
browser
read
adobe
acrobat
pdf
documents
line
produce
documents
using
word
processing
program
traverse
directory
files
using
operating
system
lab
currently
windows
ics
21
cse
21
minimum
knowledge
skillsprogramming
fundamentals
write
programs
java
using
following
language
features
basic
statements
assignment
basic
data
types
int
long
double
boolean
selection
loops
loop
control
dangers
break
continue
methods
functions
defining
calling
parameter
passing
mastery
write
programs
java
demonstrate
proficiency
scoping
rules
public
vs
private
fields
vs
local
variables
understand
distinction
'if'
'switch'
statements
including
pitfalls
advantages
proficiency
recognize
need
float
char
data
types
learn
necessarily
write
programs
using
simple
recursion
recognize
exceptions
occur
program
execution
exposure
data
structures
identify
appropriate
uses
data
structures
able
read
code
determine
whether
properly
reasonably
implemented
data
structures
mastery
proficiency
required
write
code
uses
structures
stringsmastery
arraylists
including
common
methods
iteration
specifying
type
parameter
proficiency
nested
data
structures
objects
within
arraylists
exposure
conventional
algorithms
recognize
problems
following
algorithms
appropriate
computing
sum
average
minimum
maximum
collection
numbers
traversing
arraylist
applying
operation
element
moving
within
adding
items
deleting
items
list
implemented
arraylist
mastery
object
orientation
use
existing
classes
make
simple
modifications
class
definition
define
use
instances
classes
appropriately
mastery
use
method
overloading
constructors
different
signatures
design
simple
new
class
constructor
methods
fields
use
predefined
class
families
proficiency
recognize
utility
oo
paradigm
decompose
simple
problem
object
oriented
solution
extend
straightforward
object
based
design
gain
basic
conceptual
understanding
use
generic
types
gain
basic
conceptual
understanding
inheritance
exposure
program
design
implementation
enter
run
modify
code
using
java
mastery
write
program
given
prose
specification
possibly
description
available
library
routines
either
standard
java
instructor
provided
within
provided
skeleton
applying
mastery
proficiency
level
topics
listed
appropriate
solve
new
problem
familiar
domain
design
implement
tests
demonstrate
correctness
programs
follow
specified
coding
style
guidelines
appreciate
utility
coding
style
guidelines
locate
correct
simple
errors
code
proficiency
programming
skills
write
methods
class
debug
program
help
'print'
statements
visual
debugger
thoroughly
test
small
program
mastery
write
complete
program
uses
two
existing
class
definitions
object
one
class
uses
information
provided
object
class
implement
unit
tests
demonstrate
functionality
adheres
specifications
proficiency
return
top
page
uc
copyright
uci
directory
intranet
site
map
icswebmaster
ics
uci
edu
updated
june
11
2012
