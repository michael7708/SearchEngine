ics 54 shell programming ii 
chapter 16 shell programming ii 
uc
irvine
information
computer
science
department
winter
2000
ics
54
shell
programming
ii
brief
notes
chapter
16
conditional
execution
testcommand
command
fi
testcommand
command
fi
testcommand
command
else
command
fi
testcommand
command
elif
testcommand
command
else
command
fi
example
bin
sh
demonstrate
echo
1
test
eq
0
echo
need
argument
exit
2
fi
echo
2
test
ge
2
echo
1
argument
good
echo
echo
else
echo
1
argument
test
1
echo
empty
2nd
needed
else
echo
1
fi
needed
fi
echo
3
lt
3
echo
less
3
arguments
ni'll
show
echo
elif
3
quit
echo
third
argument
says
quit
else
echo
argument
3
3
fi
echo
4
1
1
echo
1
regular
file
directory
1
echo
executable
fi
else
echo
argument
1
just
another
name
fi
test
test
expression
expression
sure
include
spaces
around
expression
separating
brackets
tests
0
trueinteger
testsn1
ne
n2true
integers
equal
n1
eq
n2true
integers
n1
n2n1
lt
n2true
integers
n1
n2n1
le
n2true
integers
n1
n2n1
ge
n2true
integers
n1
n2n1
gt
n2true
integers
n1
n2string
tests
string
true
string
length
zero
stringtrue
string
non
zero
lengths1
s2true
2
strings
equals1
s2true
2
strings
equalstringtrue
string
empty
stringfile
directory
tests
filetrue
file
exists
readable
filetrue
file
exists
writable
filetrue
file
exists
executable
filetrue
file
exists
regular
file
filetrue
file
exists
directory
filetrue
file
exists
non
zero
size
boolean
combinations
tests
t1
true
t1
truet1
t2true
t1
t2
truet1
t2true
t1
t2
true
selection
case
string
pattern
list
command
pattern
list
command
fall
command
esac
example
bin
sh
demonstrate
case
set
noargument
case
1
aaeeiioouu
echo
vowel
html
htm
echo
1
html
file
noargument
echo
forget
provided
argument
echo
peaceful
way
echo
idea
1
esac
iteration
var
list
command
done
command
2go
command
done
command
2stop
command
done
examples
bin
sh
demonstrate
1
echo
need
directory
exit
1
fi
echo
directory
1
`ls
1
html`
echo
html
file
done
sample
run
1
need
directory
1
doc
ch1
directory
doc
ch1
doc
ch1
1
html
html
file
doc
ch1
exercises
html
html
file
doc
ch1
intro
html
html
file
bin
sh
demonstrate
read
set
echo
done
sample
run
1
1
1
bin
sh
3
demonstrate
3
read
1
2
set
3
echo
1
done
bin
sh
demonstrate
eq
0
echo
1
shift
echo
done
sample
run
1
will
go
away
4
will
go
away
3
will
go
away
2
go
away
1
away
conditional
conveniences
iteration
aids
escapes
true
always
tests
returns
true
zero
successful
completion
value
exit
status
false
always
tests
returns
false
non
zero
failure
completion
value
exit
status
break
exit
immediately
nth
innermost
enclosing
loop
normally
omitted
immediate
enclosing
loop
exited
continue
immediately
go
next
iteration
nth
innermost
enclosing
loop
normally
omitted
immediate
enclosing
loop
whose
current
iteration
considered
completed
exit
immediately
terminate
current
shell
script
setting
returning
exit
error
status
code
non
negative
integer
value
zero
indicates
successful
completion
script
omitted
0
assumed
cmd1
cmd2
execute
cmd1
returns
true
zero
success
exit
status
execute
cmd1
return
exit
status
combination
commands
cmd1
cmd2
execute
cmd1
returns
false
non
zero
error
exit
status
execute
cmd1
return
exit
status
combination
commands
examples
bin
sh
2
demonstrate
first
argument
file
process
1
read
echo
done
1
sample
runs
cat
simple
file
can
experiment
2
2
2
simple
can
file
experiment
cat
2
bin
sh
2
demonstrate
eq
0
1
quit
echo
1
shift
echo
done
sample
runs
2
going
4
going
3
going
2
going
1
2
going
3
going
2
going
1
going
2
will
quit
early
4
will
quit
early
3
quit
early
arithmetic
operations
sh's
modest
arithmetic
capabilities
expressed
using
expr
examples
echo
1
1
echo
1
1
`expr
1
1`
echo
1
1
`expr
1
1`
echo
2
`expr
7
6`
expr
syntax
error
`expr
7
6`
echo
42
`expr
40`
expr
non
numeric
argument
`expr
40`
echo
2
`expr
3
4
12
2
`
echo
42
`expr
3
4
1
`
echo
42
comments
welcome
javascript
must
enabled
order
page
fully
functional
current
8
february
2000
html
4
01
checked
