informatics 122 winter 2013 project 4 right middle implementation 
project 4 
informatics
122
winter
2013
news
course
reference
schedule
project
guide
code
examples
alex
informatics
122
winter
2013
project
4
right
middle
implementation
due
dates
times
monday
february
25
11
59pm
project
done
individually
implementing
adjusting
design
now
completed
preliminary
design
project
3
received
feedback
time
complete
implementation
program
unlike
previous
implementation
required
maintain
someone
else's
design
time
implementing
design
permitted
make
adjustments
like
design
though
will
required
justify
separate
document
expect
will
need
make
least
changes
especially
realities
writing
unit
tests
show
design
sufficiently
decoupled
required
use
git
egit
work
will
including
entire
git
repository
us
part
submittal
project
unit
tests
test
coverage
one
major
requirement
implementation
phase
must
write
unit
tests
using
junit
note
unit
test
frameworks
available
java
will
standardize
junit
course
since
built
eclipse
will
permitted
put
unit
tests
end
implementation
phase
simple
reason
design
can
profoundly
affected
need
write
tests
disastrous
discover
end
implementation
complete
program
untestable
design
part
development
will
required
add
unit
tests
whenever
feel
completed
part
public
functionality
class
checking
fine
tooth
comb
will
looking
git
repositories
verify
made
honest
attempt
writing
unit
tests
went
along
furthermore
will
required
achieve
100
code
coverage
unit
tests
except
layer
functionality
actually
communicates
external
resource
must
possible
run
unit
tests
without
internet
connection
without
particular
file
present
file
system
etc
isolate
part
functionality
well
possible
keep
open
mind
just
little
functionality
can
actually
need
get
code
coverage
metric
will
doubt
affect
design
profound
ways
requiring
decouple
classes
might
otherwise
need
use
techniques
like
dependency
injection
avoid
hard
coding
dependencies
classes
example
class
want
write
output
console
will
instead
need
write
general
printwriter
program
can
write
system
unit
tests
write
stringwriter
installing
using
eclemma
plug
easy
use
code
coverage
plug
eclipse
called
eclemma
saw
lecture
example
will
using
tool
grade
work
means
assessing
code
coverage
recommend
use
work
implementation
unit
tests
important
realize
like
measure
goal
achieve
close
100
code
coverage
possible
counting
actual
unit
test
code
words
want
know
much
actual
code
exercised
running
unit
tests
one
useful
way
measure
make
sure
unit
tests
separate
packages
code
test
example
testing
code
package
inf122
example
might
write
unit
tests
package
inf122
example
test
measuring
code
coverage
simple
running
unit
tests
coverage
mode
eclipse
eclemma
result
will
coverage
report
well
highlights
throughout
code
demonstrating
covered
installation
instructions
eclemma
java
code
coverage
plug
eclipse
available
eclemma
web
site
link
thorough
set
usage
instructions
available
user
guide
eclemma
web
site
link
best
get
plug
set
running
proceed
implementation
took
minutes
install
plug
write
quick
dummy
example
short
class
junit
tests
run
first
code
coverage
report
basic
design
implementation
goals
project
3
write
basic
design
goals
listed
gave
idea
things
thinking
worked
design
list
similar
slightly
broader
list
things
want
thinking
now
working
implementation
part
assessing
quality
design
making
modifications
class
single
responsibility
think
class
whether
objective
accurately
described
single
sentence
reasonable
length
make
possible
classes
exhibit
high
cohesion
strongly
related
functionality
grouped
together
less
related
unrelated
functionality
separated
classes
exhibit
low
coupling
significantly
make
changes
individual
classes
without
breaking
many
others
used
design
patterns
appropriate
design
patterns
discussed
core
goal
decoupling
classes
one
another
used
design
patterns
find
increased
level
decoupling
design
make
reasonably
straightforward
write
unit
tests
design
meets
kinds
goals
discussed
lecture
will
useful
side
effect
property
making
unit
testing
easier
thought
differently
desire
write
unit
tests
will
tendency
drive
toward
design
meets
goals
close
able
come
achieving
100
code
coverage
unit
tests
besides
functionality
required
outside
resources
bit
ly
web
service
files
etc
functionality
left
uncovered
reduce
amount
code
dependent
resources
hence
leave
able
increase
code
coverage
deliverables
need
submit
three
deliverables
project
zip
file
containing
git
repository
git
directory
repository
least
master
branch
points
commit
consider
complete
code
want
us
grade
along
entire
commit
history
time
started
implementation
used
eclipse
egit
git
repository
ideally
include
eclipse
project
project
classpath
files
project
directory
entire
workspace
follow
steps
section
titled
getting
started
egit
project
2
write
repository
will
contain
just
right
stuff
zip
file
containing
java
source
code
comprises
implemented
design
arranged
directory
structure
mirrors
package
hierarchy
please
include
java
files
use
reference
case
issues
git
repository
document
detailing
changes
made
design
order
implement
along
justification
changes
necessary
order
meet
requirements
improve
design
able
write
unit
tests
document
can
either
microsoft
word
doc
docx
pdf
pdf
format
follow
link
discussion
submit
files
via
checkmate
aware
holding
rules
specified
document
including
one
says
responsible
submitting
version
files
want
graded
reworked
split
separate
projects
alex
thornton
winter
2013originally
written
alex
thornton
winter
2012
