candidate ics 125 projects fq2003 
the list potential projects 
candidate
projects
fq
2003
raytheon
automatic
tracking
controller
raytheon
visualization
interface
enhanced
analysis
raytheon
java
message
interoperability
tool
raytheon
multilingual
user
interface
raytheon
line
content
management
system
raytheon
web
services
implementation
uci
web
middleware
uci
pace
1
coalition
forces
battlefield
management
system
uci
pace
2
decentralized
calendaring
uci
pace
3
collaborative
information
spaces
unisys
system
telemetry
warehouse
monitor
uci
scacchi
web
document
compiler
composition
system
uci
scacchi
virtual
interactive
development
environment
cs
education
wallace
iusd
developing
pda
system
special
needs
students
raytheon
automatic
tracking
controller
design
develop
java
based
automatic
tracking
controller
component
part
larger
security
system
controller
will
take
geo
referenced
position
velocity
subject
tracks
determine
appropriate
pointing
commands
tracking
camera
mounted
ptz
gimbal
select
evaluate
algorithms
camera
control
will
allow
smooth
predictive
control
camera
given
various
scenarios
subject
movement
raytheon
visualization
interface
enhanced
analysis
re
engineer
existing
analysis
component
coded
ada83
using
oo
design
language
existing
analysis
component
produces
numeric
output
tabular
form
design
implement
visualization
interface
using
browser
based
thin
client
enhance
analysts'
understanding
results
raytheon
java
message
interoperability
tool
develop
tool
will
accept
description
message
interface
definition
via
defined
interface
description
language
idl
tool
generates
corresponding
java
classes
enable
interoperability
message
level
java
programs
including
logic
constructing
actual
messages
will
transmitted
tool
facilitates
synchronization
two
sides
interface
based
simple
interface
definition
generated
code
portable
dependent
outside
class
libraries
including
corba
libraries
tool
designed
mapping
idl
corresponding
java
constructs
changeable
without
modification
core
tool
raytheon
multilingual
user
interface
enhance
existing
english
language
user
interface
components
currently
implemented
java
swing
allow
real
time
user
selection
one
multiple
languages
including
bi
directional
support
arabic
identify
enhancements
xml
display
description
data
mapping
components
order
support
multiple
languages
evaluate
services
apis
identify
changes
required
support
multiple
languages
implement
prototype
evaluate
display
performance
raytheon
line
content
management
system
identify
candidate
products
tools
implementation
web
based
content
management
system
system
will
normalize
user
access
data
sets
hosted
set
diverse
platforms
database
products
facilitate
user
ability
supply
content
improve
user
access
awareness
available
content
index
search
capabilities
provide
user
role
based
access
controls
implement
evaluate
prototype
system
based
selected
products
tools
raytheon
web
services
implementation
take
set
existing
tabular
display
components
implemented
j2ee
framework
re
implement
using
web
services
technologies
evaluate
hmi
attributes
displays
identify
changes
enhance
compatibility
web
services
technologies
evaluate
select
appropriate
java
technology
implementation
jsp
servlets
document
design
patterns
applied
achieve
implementation
uci
web
middleware
middleware
software
allows
interconnection
potentially
heterogeneous
software
components
across
process
network
boundaries
two
prevalent
'flavors'
middleware
remote
procedure
call
rpc
message
oriented
middleware
mom
rpc
traditionally
used
synchronous
communication
system
components
mom
supports
asynchronous
messaging
types
middleware
advantages
disadvantages
make
selection
one
system
dependent
process
variety
different
competing
implementations
focus
project
lies
middleware
component
based
systems
communicating
using
asynchronous
events
c2
architectures
example
class
system
distributed
event
based
systems
require
middleware
communication
mechanism
order
transmit
events
one
part
system
another
given
inherent
event
based
nature
systems
mom
seems
appropriate
selection
use
one
available
'industrial
strength'
middleware
solutions
featuring
similar
functionality
yet
disparate
implementations
necessarily
approach
web
also
platform
can
used
simple
powerful
middleware
solution
using
web
form
middleware
entirely
new
idea
1
discusses
possibilities
using
common
gateway
interface
cgi
middleware
users
underlying
applications
2
presents
approach
mobile
computing
applications
made
available
ubiquitously
using
web
middlware
project
students
will
implement
web
based
middleware
solution
c2
architectures
will
prototype
implementation
feasibility
study
examines
reality
using
web
mom
solution
web
servers
will
used
connectors
send
receive
asynchronous
messages
order
construct
highly
distributed
event
based
systems
several
advantages
using
web
servers
middleware
connectors
first
simplicity
compared
middlware
implementations
web
servers
can
rather
lightweight
simple
implement
maintain
importantly
web
servers
potential
providing
useful
capabilities
low
cost
ability
web
server
arbitrarily
manage
namespace
augment
new
information
present
web
browsers
can
provide
high
level
visibility
operation
middleware
connector
example
connector
can
easily
maintain
log
messages
received
sent
including
information
failures
urls
particular
web
server
connector
links
can
presented
users
dynamically
changed
html
forms
easily
implement
small
measure
dynamic
system
adaptation
leveraging
web
connectors
manner
integrating
architecture
based
approach
system
development
far
aware
novel
contribution
features
criteria
success
xadl
2
0
schema
extension
defining
c2
web
connector
schema
make
urls
connector
links
types
messages
transmit
explicit
c2
connector
wrapping
around
lightweight
ots
web
server
students
must
define
implement
clear
interface
encapsulating
interaction
c2
connector
web
server
way
ots
servers
can
used
less
effort
connectors
need
base
transmission
behavior
architectural
description
update
behavior
response
description
changing
connectors
must
keep
log
events
received
transmitted
two
way
translation
c2
events
xml
based
playload
transmitted
http
vice
versa
must
seperate
c2
component
tranmits
payload
web
connector
transmission
web
front
end
c2
web
connectors
users
must
able
access
url
web
connector
provided
html
pages
provide
access
following
information
least
html
formatted
infromation
c2
xml
translator
logs
messages
sent
received
errors
list
urls
connector
transmits
list
needs
changeable
hint
use
forms
gather
input
modify
architectural
model
update
inner
workings
accordingly
components
connectors
must
integrated
c2
archstudio
infrastructure
demonstration
c2
web
connectors
using
existing
c2
demonstration
students
must
distribute
previously
non
distributed
system
least
three
different
network
locations
demonstrate
use
klax
even
archstudio
used
time
permitting
security
point
point
connections
certificates
students
can
explore
space
suggest
solutions
students
working
project
will
exposed
acquire
valuable
experience
practical
use
software
architectures
accompanying
research
technologies
c2
archstudio
c2
fw
well
collection
popular
marketable
web
technologies
http
html
xml
xsd
xslt
decide
pursue
security
problem
also
acquire
even
marketable
skills
background
preparation
will
also
expose
students
relevant
research
literature
references
1
faughnan
client
server
computing
web
middleware
url
http
www
faughnan
com
papers
clservweb
html
2
vuong
li
webmc
web
based
middleware
mobile
computing
international
conference
internet
computing
2000
157
164
uci
pace
1
coalition
forces
battlefield
management
system
battlefield
management
systems
case
decentralized
systems
coalition
military
forces
potentially
different
degrees
trust
coalitions
information
may
partially
shared
battle
forces
may
differing
degrees
reliability
reports
may
trusted
central
controlling
authority
determines
'right'
enforces
cooperation
independent
authority
may
wide
range
assets
provide
information
can
relayed
others
malicious
forces
may
also
attempt
compromise
integrity
communications
well
meaning
coalition
parties
looking
system
can
model
threats
system
evaluate
effects
information
collected
evaluated
presented
operator
can
issue
commands
units
present
field
threats
introduced
can
direct
attacks
system
denial
service
attacks
threats
can
also
indirect
introduction
falsified
data
already
previously
existing
implementation
application
c2
architectural
style
however
application
lacks
certain
critical
features
explicitly
consider
trust
desire
extend
application
using
pace
c2
based
architectural
style
explicitly
adds
trust
management
framework
designed
support
applications
pace
already
written
framework
relatively
new
believe
provide
guidance
write
applications
style
believe
project
offers
several
benefits
1
introduction
component
based
software
architectures
2
introduction
effects
decentralization
system
3
introduction
impact
trust
security
system
features
short
bullet
list
one
line
descriptions
features
requirements
coalition
based
battlefield
management
system
conform
particular
decentralized
architecture
style
pace
extend
previous
c2
implementation
desired
utilize
pace
c2
frameworks
archstudio
environment
implement
multiple
'roles'
system
fulfill
stated
obligations
role
may
separate
machines
allow
introduction
threats
system
demand
evaluate
impact
threats
system
uci
pace
2
decentralized
calendaring
social
patterns
emerge
groups
often
attempt
coordinate
activities
one
common
task
scheduling
meetings
however
groups
may
formed
ad
hoc
basis
central
authority
governs
interaction
example
students
class
may
desire
hold
meetings
related
group
project
user
may
scheduled
events
wish
share
others
hot
date
friday
night
however
enough
information
must
communicated
users
achieve
coordination
schedule
time
works
'best'
everyone
looking
calendaring
application
allows
collaboration
users
may
may
trust
user
may
variety
calendars
willing
share
users
additionally
system
able
suggest
times
prospective
attendees
can
meet
based
visible
information
person
creating
appointment
notifications
emails
transmitted
someone
scheduled
appointment
desire
write
application
pace
architectural
style
new
c2
based
architectural
style
introduces
explicit
trust
management
supports
variety
communication
mechanisms
framework
designed
support
applications
pace
already
written
framework
relatively
new
believe
provide
guidance
write
applications
style
believe
project
offers
several
benefits
introduction
component
based
software
architectures
introduction
effects
decentralization
system
introduction
creating
effective
user
interfaces
features
short
bullet
list
one
line
descriptions
features
requirements
decentralized
calendaring
system
conform
particular
decentralized
architecture
style
pace
utilize
pace
c2
frameworks
archstudio
environment
provide
usable
interface
supports
variety
expertise
levels
central
storage
support
different
degrees
notification
automation
uci
pace
3
collaborative
information
spaces
sharing
information
people
can
important
tool
increasing
productivity
knowledge
however
different
sources
information
may
represent
varying
levels
expertise
topic
example
person
may
known
real
expert
movies
know
lot
automobiles
therefore
may
decide
place
trust
reviews
movies
much
confidence
fixing
car
desire
creation
system
facilitates
creation
distribution
annotation
review
information
without
central
trusted
authority
information
may
free
form
textual
data
users
may
encounter
conflicting
reports
evaluations
reported
data
need
ability
make
accurate
assessments
correctness
worthiness
data
desire
write
application
pace
architectural
style
new
c2
based
architectural
style
introduces
explicit
trust
management
supports
variety
communication
mechanisms
framework
designed
support
applications
pace
already
written
framework
relatively
new
believe
provide
guidance
write
applications
style
believe
project
offers
several
benefits
1
introduction
component
based
software
architectures
2
introduction
effects
decentralization
system
3
introduction
concept
independent
evaluations
data
features
short
bullet
list
one
line
descriptions
features
requirements
collaborative
information
spaces
system
conform
particular
decentralized
architecture
style
pace
utilize
pace
c2
frameworks
archstudio
environment
provide
ability
input
notes
topic
event
distribute
notes
users
allow
annotation
notes
others
redistribution
provide
evaluations
accuracy
notes
provide
usable
interface
managing
received
data
unisys
system
telemetry
warehouse
monitor
summary
provide
gui
monitoring
system
performance
data
stored
system
telemetry
warehouse
background
system
telemetry
warehouse
provides
consolidated
system
log
form
data
warehouse
system
telemetry
warehouse
can
contain
data
collected
traditional
sources
perfmon
counters
system
event
logs
additionally
information
regarding
application
system
software
components
can
collected
desired
product
graphical
time
based
monitor
data
contained
warehouse
initiated
monitor
show
values
default
set
counters
current
time
users
able
change
counters
displayed
selecting
list
counters
available
warehouse
also
able
change
default
set
counters
counters
aggregations
example
cpu
usage
processors
users
able
drill
expand
counters
component
values
example
cpu
usage
processor
slider
provided
allowing
users
change
time
slice
displayed
current
time
slice
displayed
option
updated
automatically
periodic
intervals
users
also
able
start
prior
point
time
monitor
move
forward
accelerated
time
lapse
sort
mode
deliverables
monitor
software
installation
instructions
usage
instructions
design
description
required
sql
server
2000
implementation
language
students
discretion
unisys
provides
system
telemetry
warehouse
schema
data
collection
subsystem
perfmon
counters
event
logs
includes
installation
instructions
help
text
scacchi
web
document
compiler
composition
system
many
people
want
able
create
documents
using
materials
content
appearing
web
site
pages
however
web
primarily
reading
browsing
medium
rather
writing
medium
web
document
compiler
envisioned
application
allows
user
cut
selected
contents
web
page
text
images
embedded
hyperlinks
mp3
files
etc
paste
selected
content
new
document
web
page
captures
selected
content
well
url
selected
information
anchors
tags
indicate
selected
content
begins
ends
timestamp
cut
pasted
way
maintain
relation
source
document
components
composed
document
can
also
include
new
content
entered
edited
user
resulting
document
composition
record
build
script
might
function
like
make
file
allowing
user
rebuild
composed
document
sources
later
time
place
might
allow
user
observe
document
components
changed
since
previous
compilation
capability
might
allow
user
also
share
document
compilation
scripts
friends
others
compile
document
components
compose
new
documents
modified
versions
shared
documents
using
web
document
compiler
composition
system
really
need
build
simple
compile
build
utility
processes
explicit
representation
multi
part
multi
component
document
produce
compiled
document
makes
project
challenging
users
can
already
manually
compose
new
document
selecting
cut
paste
existing
document
contents
often
repeatable
shareable
technique
allow
new
versions
composed
document
compiled
built
demand
given
source
content
may
changed
since
previous
document
build
makes
worth
people
want
create
shared
web
based
documents
whose
contents
can
updated
automaticaly
rather
manually
instance
want
create
selection
sharable
mp3
text
files
can
burned
cd
share
selection
friend
wants
mp3
text
files
wants
add
remove
one
files
nice
easy
way
sharing
composable
document
scripts
rather
just
sharing
raw
mp3
text
files
scacchi
virtual
interactive
development
environment
cs
education
interactive
development
environment
usually
integrated
collection
services
utilities
tools
can
used
support
development
software
application
systems
programs
java
based
ides
like
visual
cafe
bluej
java
rational
rose
large
commercial
products
netbeans
netbeans
org
eclipse
eclipse
org
free
open
source
ides
implemented
java
supporting
development
java
applications
however
many
open
source
software
tools
utilities
may
useful
developing
certain
kinds
application
systems
database
management
systems
expert
system
shells
computer
graphics
libraries
user
interface
development
kits
computer
aided
software
design
computer
game
engines
etc
furthermore
now
appears
possible
find
collect
dozens
open
source
tools
one
tools
might
use
different
cs
undergraduate
courses
really
need
find
collect
bunch
open
source
tools
tools
may
reside
operate
remote
network
servers
rather
user's
computer
build
user
interface
presents
end
user
student
grouped
sub
sets
tools
associated
different
cs
course
types
course
database
management
tools
like
mysql
postgresql
berkeleydb
sap
db
might
grouped
together
tools
java
sql
jodbc
dbms
program
development
virtual
ide
tool
integration
need
realized
user
interface
level
integrated
collection
rather
integrated
via
coding
api
middleware
level
necessary
conventional
ide
low
level
systems
programming
may
avoided
since
mostly
user
interface
level
virtual
ide
makes
project
challenging
supporting
tools
execute
remote
servers
managing
transfer
tool
input
output
user
clients
remote
servers
moving
tool
input
output
distributed
repositories
file
servers
designing
user
interface
different
collections
tools
can
organized
presented
different
types
cs
courses
different
cs
course
instances
makes
worth
nice
one
overall
computing
environment
software
tools
need
use
cs
courses
found
collected
organized
used
across
internet
wallace
iusd
developing
pda
system
special
needs
students
irvine
adult
transition
program
iatp
like
initiate
pilot
project
application
pda
technology
needs
developmentally
disabled
young
adults
transitioning
high
school
adult
living
job
situations
three
separate
application
areas
identified
pilot
projects
will
focus
applying
developing
software
meet
individual
needs
single
student
application
area
results
trial
applications
will
used
future
projects
expand
applications
useful
broader
range
students
program
target
new
application
designs
description
irvine
adult
transition
program
iatp
irvine
adult
transition
program
iatp
post
high
school
program
developmentally
disabled
young
adults
ages
19
22
years
fifteen
students
program
receive
classroom
instruction
morning
irvine
valley
college
life
skills
vocational
skills
afternoon
work
various
jobs
irvine
support
job
coaches
students
currently
competent
use
cell
phone
technology
expanding
program
include
training
use
pda
technology
logical
next
step
beneficial
students
staff
employers
irvine
adult
transition
program
iatp
students
staff
potential
pda
applications
iatp
initially
three
areas
pda
technology
existing
software
iatp
staff
feel
might
useful
needs
students
iatp
money
management
memo
check
lists
calendar
scheduling
1
money
management
include
elements
calculating
expense
individual
item
set
items
including
tax
tip
record
keeping
expenditures
activity
period
time
storing
managing
bank
account
records
long
term
budget
planning
record
keeping
2
memo
check
lists
include
systems
staff
enter
lists
job
duties
students
perform
sequence
students
check
completed
lists
memos
behavioral
goals
students
monitor
day
templates
regular
record
recording
students
staff
day
concerning
job
behavioral
goals
3
calendar
scheduling
begin
templates
transportation
schedules
individual
student
work
activities
day
week
also
include
system
inputting
octa
bus
schedules
routes
departure
point
destination
individual
student
obviously
many
complex
elaborate
uses
pda
technology
existing
developed
software
benefit
students
program
initial
goal
test
effectiveness
students
specific
goals
guideline
future
development
proposed
steps
pilot
study
iatp
staff
identified
three
students
program
whose
needs
will
serve
model
purposes
developing
pilot
software
three
application
areas
mentioned
one
student
per
application
area
students
dr
taylor
computer
projects
course
uci
will
invited
select
one
three
application
areas
avoid
confusion
maximum
three
teams
working
separate
application
area
iatp
advice
uci
computer
experts
will
purchase
necessary
pda
students
staff
use
pilot
project
expected
one
system
will
selected
use
avoid
confusion
allow
eventual
use
applications
iatp
students
appropriate
needs
uci
team
will
meet
iatp
staff
students
irvine
valley
college
become
acquainted
program
specific
student
whose
needs
associated
application
chosen
uci
teams
will
apply
develop
software
test
iatp
student
staff
modify
necessary
basis
findings
make
proposals
development
applications
