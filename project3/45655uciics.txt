ics 32 winter 2013 code example sockets part 2 
sockets part 2 an example socket server client along using makefile treat sockets 
ics
32
winter
2013
news
course
reference
schedule
project
guide
code
examples
alex
ics
32
winter
2013
code
example
sockets
part
2
background
sending
receiving
text
via
sockets
many
programs
communicate
network
sending
text
back
forth
quite
often
textual
communication
protocols
based
around
concept
lines
text
terminated
newline
characters
previously
seen
read
lines
text
files
unfortunately
mechanisms
seen
reading
data
socket
lot
harder
work
allowing
us
retrieve
given
number
bytes
socket's
input
stream
leaves
us
two
difficulties
decoding
bytes
receive
turning
bytes
strings
finding
one
line
ends
another
begins
since
ask
certain
number
bytes
time
never
necessarily
sure
ahead
time
many
bytes
make
line
since
different
lines
may
contain
different
numbers
bytes
go
lot
trouble
read
characters
need
read
read
many
need
hang
extra
ones
can
use
part
next
line
read
seems
shame
just
treat
socket
way
text
file
files
contain
bytes
read
text
files
python
file
object
converts
bytes
strings
finds
one
line
ends
another
begins
automatically
just
call
readline
right
things
happen
often
case
programming
language
library
dig
little
bit
find
tool
looking
want
treat
socket
similarly
treat
text
file
reading
lines
getting
back
strings
writing
strings
can
just
ask
middleman
sorts
object
behaves
outwardly
way
file
object
reads
writes
via
socket
rather
file
sockets
python
provide
makefile
method
can
give
middleman
arguments
pass
method
arguments
pass
built
open
function
opens
files
object
returned
appears
lot
like
file
object
supports
methods
like
readline
write
code
example
makes
use
makefile
method
simplify
read
write
sockets
clients
different
servers
saw
previous
code
example
write
simple
socket
server
found
complexities
get
minds
around
proceed
needed
create
socket
bind
port
set
listen
mode
accept
connection
connection
came
accept
method
gave
back
another
socket
actually
use
communication
socket
clients
little
simpler
create
socket
client
socket
socket
socket
socket
different
call
connect
method
passing
address
port
want
connect
address
'127
0
0
1'
19999
client
socket
connect
address
connection
fails
connect
will
raise
exception
otherwise
ready
send
receive
data
program
connected
course
close
socket
done
code
lecture
rewrote
example
socket
server
previous
code
example
using
socket's
makefile
method
let
us
read
lines
text
instead
bytes
wrote
client
connected
server
sent
lyrics
99
bottles
beer
wall
example
follows
two
modules
example
server
py
example
client
py
run
example
need
start
two
separate
instances
idle
one
run
server
another
run
client
simultaneously
execute
modules
one
idle
instances
opening
module
editor
pressing
f5
execute
example
server
pyexample
client
py
