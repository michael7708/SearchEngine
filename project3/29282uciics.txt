depth first search 
depth first search 
depth
first
search
depth
first
search
dfs
useful
method
traversing
nodes
edges
graph
dfs
paradigm
search
node
exists
edge
yet
considered
consider
edge
yet
visited
visit
search
node
order
vertices
visited
dfs
order
depth
first
number
node
node's
rank
order
depth
first
order
corresponds
pre
order
traversal
trees
spanning
forest
following
dfs
includes
red
statements
enabling
computation
graph's
connected
components
dfs
will
edges
spanning
forest
£f
queue
new
nodes
implemented
doubly
linked
list
count
0
comp
0
forall
vertices
flag
new
add
exists
flag
new
comp
comp
1
search
search
count
count
1
dfn
count
compno
comp
flag
old
delete
let
list
vertices
adjacent
¡Ú
£f
¡ö
flag
new
union
search
time
analysis
time
spent
executing
search
proportional
degree
vertex
search
called
vertex
since
sum
degrees
vertices
adds
twice
number
edges
therefore
total
time
spent
dfs
note
algorithm
partitions
graph's
edge
set
1
edges
dfs
forest
2
edges
termed
back
edges
lemma
backedge
dfs
forest
ancestor
vice
versa
proof
without
loss
generality
visited
say
search
called
search
reached
still
labeled
new
statement
lemma
follows
facts
1
new
vertices
visited
search
will
become
descendents
spanning
forest
2
search
end
reached
list
notation
dfs
forest
drawing
diagrams
dfs
forests
newly
visited
nodes
placed
right
sons
father
result
ancestor
left
tree
depth
first
number
dfn
less
dfn
dan
hirschberg
last
modified
oct
28
2003
